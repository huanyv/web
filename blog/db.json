{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/home.jpg","path":"img/home.jpg","modified":0,"renderable":1},{"_id":"themes/Coder/source/doc/gentle.png","path":"doc/gentle.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/doc/hexocoder.png","path":"doc/hexocoder.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/doc/lady1.png","path":"doc/lady1.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/doc/lady2.png","path":"doc/lady2.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/doc/light.png","path":"doc/light.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/doc/phone1.png","path":"doc/phone1.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/doc/phone2.png","path":"doc/phone2.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/Coder/source/img/black.jpg","path":"img/black.jpg","modified":0,"renderable":1},{"_id":"themes/Coder/source/css/styles.css","path":"css/styles.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/Coder/source/js/js.js","path":"js/js.js","modified":0,"renderable":1},{"_id":"themes/Coder/source/img/female.png","path":"img/female.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/img/male.png","path":"img/male.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/img/white.jpg","path":"img/white.jpg","modified":0,"renderable":1},{"_id":"themes/Coder/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/jquery.min.js","path":"libs/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/HELP-US-OUT.txt","path":"libs/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/highlight.pack.js","path":"libs/highlight/highlight.pack.js","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/animated.less","path":"libs/font-awesome/less/animated.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/bordered-pulled.less","path":"libs/font-awesome/less/bordered-pulled.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/fixed-width.less","path":"libs/font-awesome/less/fixed-width.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/core.less","path":"libs/font-awesome/less/core.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/font-awesome.less","path":"libs/font-awesome/less/font-awesome.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/icons.less","path":"libs/font-awesome/less/icons.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/larger.less","path":"libs/font-awesome/less/larger.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/list.less","path":"libs/font-awesome/less/list.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/path.less","path":"libs/font-awesome/less/path.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/mixins.less","path":"libs/font-awesome/less/mixins.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/rotated-flipped.less","path":"libs/font-awesome/less/rotated-flipped.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/screen-reader.less","path":"libs/font-awesome/less/screen-reader.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/stacked.less","path":"libs/font-awesome/less/stacked.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/less/variables.less","path":"libs/font-awesome/less/variables.less","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/font-awesome/scss/font-awesome.scss","path":"libs/font-awesome/scss/font-awesome.scss","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/a11y-dark.css","path":"libs/highlight/styles/a11y-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/a11y-light.css","path":"libs/highlight/styles/a11y-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/agate.css","path":"libs/highlight/styles/agate.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/androidstudio.css","path":"libs/highlight/styles/androidstudio.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/an-old-hope.css","path":"libs/highlight/styles/an-old-hope.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/arduino-light.css","path":"libs/highlight/styles/arduino-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/arta.css","path":"libs/highlight/styles/arta.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/ascetic.css","path":"libs/highlight/styles/ascetic.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-cave-dark.css","path":"libs/highlight/styles/atelier-cave-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-cave-light.css","path":"libs/highlight/styles/atelier-cave-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-dune-dark.css","path":"libs/highlight/styles/atelier-dune-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-dune-light.css","path":"libs/highlight/styles/atelier-dune-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-estuary-dark.css","path":"libs/highlight/styles/atelier-estuary-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-estuary-light.css","path":"libs/highlight/styles/atelier-estuary-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-forest-dark.css","path":"libs/highlight/styles/atelier-forest-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-forest-light.css","path":"libs/highlight/styles/atelier-forest-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-heath-dark.css","path":"libs/highlight/styles/atelier-heath-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-heath-light.css","path":"libs/highlight/styles/atelier-heath-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-lakeside-dark.css","path":"libs/highlight/styles/atelier-lakeside-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-lakeside-light.css","path":"libs/highlight/styles/atelier-lakeside-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-plateau-dark.css","path":"libs/highlight/styles/atelier-plateau-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-plateau-light.css","path":"libs/highlight/styles/atelier-plateau-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-savanna-dark.css","path":"libs/highlight/styles/atelier-savanna-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-savanna-light.css","path":"libs/highlight/styles/atelier-savanna-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-seaside-dark.css","path":"libs/highlight/styles/atelier-seaside-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-seaside-light.css","path":"libs/highlight/styles/atelier-seaside-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-sulphurpool-dark.css","path":"libs/highlight/styles/atelier-sulphurpool-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-sulphurpool-light.css","path":"libs/highlight/styles/atelier-sulphurpool-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atom-one-dark-reasonable.css","path":"libs/highlight/styles/atom-one-dark-reasonable.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atom-one-dark.css","path":"libs/highlight/styles/atom-one-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/atom-one-light.css","path":"libs/highlight/styles/atom-one-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/brown-papersq.png","path":"libs/highlight/styles/brown-papersq.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/brown-paper.css","path":"libs/highlight/styles/brown-paper.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/codepen-embed.css","path":"libs/highlight/styles/codepen-embed.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/color-brewer.css","path":"libs/highlight/styles/color-brewer.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/darcula.css","path":"libs/highlight/styles/darcula.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/dark.css","path":"libs/highlight/styles/dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/darkula.css","path":"libs/highlight/styles/darkula.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/default.css","path":"libs/highlight/styles/default.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/docco.css","path":"libs/highlight/styles/docco.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/dracula.css","path":"libs/highlight/styles/dracula.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/foundation.css","path":"libs/highlight/styles/foundation.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/far.css","path":"libs/highlight/styles/far.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/github-gist.css","path":"libs/highlight/styles/github-gist.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/github.css","path":"libs/highlight/styles/github.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/gml.css","path":"libs/highlight/styles/gml.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/googlecode.css","path":"libs/highlight/styles/googlecode.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/gradient-dark.css","path":"libs/highlight/styles/gradient-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/grayscale.css","path":"libs/highlight/styles/grayscale.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/gruvbox-dark.css","path":"libs/highlight/styles/gruvbox-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/gruvbox-light.css","path":"libs/highlight/styles/gruvbox-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/hybrid.css","path":"libs/highlight/styles/hybrid.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/hopscotch.css","path":"libs/highlight/styles/hopscotch.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/idea.css","path":"libs/highlight/styles/idea.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/ir-black.css","path":"libs/highlight/styles/ir-black.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/isbl-editor-dark.css","path":"libs/highlight/styles/isbl-editor-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/isbl-editor-light.css","path":"libs/highlight/styles/isbl-editor-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/kimbie.dark.css","path":"libs/highlight/styles/kimbie.dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/kimbie.light.css","path":"libs/highlight/styles/kimbie.light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/lightfair.css","path":"libs/highlight/styles/lightfair.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/magula.css","path":"libs/highlight/styles/magula.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/mono-blue.css","path":"libs/highlight/styles/mono-blue.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/monokai-sublime.css","path":"libs/highlight/styles/monokai-sublime.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/monokai.css","path":"libs/highlight/styles/monokai.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/night-owl.css","path":"libs/highlight/styles/night-owl.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/nord.css","path":"libs/highlight/styles/nord.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/obsidian.css","path":"libs/highlight/styles/obsidian.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/ocean.css","path":"libs/highlight/styles/ocean.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/paraiso-dark.css","path":"libs/highlight/styles/paraiso-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/pojoaque.css","path":"libs/highlight/styles/pojoaque.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/paraiso-light.css","path":"libs/highlight/styles/paraiso-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/pojoaque.jpg","path":"libs/highlight/styles/pojoaque.jpg","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/purebasic.css","path":"libs/highlight/styles/purebasic.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/qtcreator_light.css","path":"libs/highlight/styles/qtcreator_light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/qtcreator_dark.css","path":"libs/highlight/styles/qtcreator_dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/railscasts.css","path":"libs/highlight/styles/railscasts.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/rainbow.css","path":"libs/highlight/styles/rainbow.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/routeros.css","path":"libs/highlight/styles/routeros.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/school-book.png","path":"libs/highlight/styles/school-book.png","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/school-book.css","path":"libs/highlight/styles/school-book.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/shades-of-purple.css","path":"libs/highlight/styles/shades-of-purple.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/solarized-dark.css","path":"libs/highlight/styles/solarized-dark.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/solarized-light.css","path":"libs/highlight/styles/solarized-light.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/sunburst.css","path":"libs/highlight/styles/sunburst.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow-night-blue.css","path":"libs/highlight/styles/tomorrow-night-blue.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow-night-bright.css","path":"libs/highlight/styles/tomorrow-night-bright.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow-night-eighties.css","path":"libs/highlight/styles/tomorrow-night-eighties.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow-night.css","path":"libs/highlight/styles/tomorrow-night.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow.css","path":"libs/highlight/styles/tomorrow.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/vs.css","path":"libs/highlight/styles/vs.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/vs2015.css","path":"libs/highlight/styles/vs2015.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/xcode.css","path":"libs/highlight/styles/xcode.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/xt256.css","path":"libs/highlight/styles/xt256.css","modified":0,"renderable":1},{"_id":"themes/Coder/source/libs/highlight/styles/zenburn.css","path":"libs/highlight/styles/zenburn.css","modified":0,"renderable":1},{"_id":"themes/coder/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/coder/source/css/styles.css","path":"css/styles.css","modified":0,"renderable":1},{"_id":"themes/coder/source/doc/gentle.png","path":"doc/gentle.png","modified":0,"renderable":1},{"_id":"themes/coder/source/doc/hexocoder.png","path":"doc/hexocoder.png","modified":0,"renderable":1},{"_id":"themes/coder/source/doc/light.png","path":"doc/light.png","modified":0,"renderable":1},{"_id":"themes/coder/source/doc/phone1.png","path":"doc/phone1.png","modified":0,"renderable":1},{"_id":"themes/coder/source/doc/lady1.png","path":"doc/lady1.png","modified":0,"renderable":1},{"_id":"themes/coder/source/doc/lady2.png","path":"doc/lady2.png","modified":0,"renderable":1},{"_id":"themes/coder/source/img/black.jpg","path":"img/black.jpg","modified":0,"renderable":1},{"_id":"themes/coder/source/doc/phone2.png","path":"doc/phone2.png","modified":0,"renderable":1},{"_id":"themes/coder/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/coder/source/img/male.png","path":"img/male.png","modified":0,"renderable":1},{"_id":"themes/coder/source/img/female.png","path":"img/female.png","modified":0,"renderable":1},{"_id":"themes/coder/source/img/white.jpg","path":"img/white.jpg","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/jquery.min.js","path":"libs/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/coder/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/coder/source/js/js.js","path":"js/js.js","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/HELP-US-OUT.txt","path":"libs/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/highlight.pack.js","path":"libs/highlight/highlight.pack.js","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/a11y-dark.css","path":"libs/highlight/styles/a11y-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/a11y-light.css","path":"libs/highlight/styles/a11y-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/agate.css","path":"libs/highlight/styles/agate.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/an-old-hope.css","path":"libs/highlight/styles/an-old-hope.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/androidstudio.css","path":"libs/highlight/styles/androidstudio.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/arduino-light.css","path":"libs/highlight/styles/arduino-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/arta.css","path":"libs/highlight/styles/arta.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/ascetic.css","path":"libs/highlight/styles/ascetic.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-cave-dark.css","path":"libs/highlight/styles/atelier-cave-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-cave-light.css","path":"libs/highlight/styles/atelier-cave-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-dune-dark.css","path":"libs/highlight/styles/atelier-dune-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-dune-light.css","path":"libs/highlight/styles/atelier-dune-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-estuary-dark.css","path":"libs/highlight/styles/atelier-estuary-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-estuary-light.css","path":"libs/highlight/styles/atelier-estuary-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-forest-dark.css","path":"libs/highlight/styles/atelier-forest-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-forest-light.css","path":"libs/highlight/styles/atelier-forest-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-heath-dark.css","path":"libs/highlight/styles/atelier-heath-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-heath-light.css","path":"libs/highlight/styles/atelier-heath-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-lakeside-dark.css","path":"libs/highlight/styles/atelier-lakeside-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-lakeside-light.css","path":"libs/highlight/styles/atelier-lakeside-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-plateau-dark.css","path":"libs/highlight/styles/atelier-plateau-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-plateau-light.css","path":"libs/highlight/styles/atelier-plateau-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-savanna-light.css","path":"libs/highlight/styles/atelier-savanna-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-seaside-dark.css","path":"libs/highlight/styles/atelier-seaside-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-savanna-dark.css","path":"libs/highlight/styles/atelier-savanna-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-seaside-light.css","path":"libs/highlight/styles/atelier-seaside-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-sulphurpool-dark.css","path":"libs/highlight/styles/atelier-sulphurpool-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atelier-sulphurpool-light.css","path":"libs/highlight/styles/atelier-sulphurpool-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atom-one-dark.css","path":"libs/highlight/styles/atom-one-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/brown-paper.css","path":"libs/highlight/styles/brown-paper.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atom-one-light.css","path":"libs/highlight/styles/atom-one-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/atom-one-dark-reasonable.css","path":"libs/highlight/styles/atom-one-dark-reasonable.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/codepen-embed.css","path":"libs/highlight/styles/codepen-embed.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/brown-papersq.png","path":"libs/highlight/styles/brown-papersq.png","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/color-brewer.css","path":"libs/highlight/styles/color-brewer.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/dark.css","path":"libs/highlight/styles/dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/darcula.css","path":"libs/highlight/styles/darcula.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/default.css","path":"libs/highlight/styles/default.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/darkula.css","path":"libs/highlight/styles/darkula.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/docco.css","path":"libs/highlight/styles/docco.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/dracula.css","path":"libs/highlight/styles/dracula.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/far.css","path":"libs/highlight/styles/far.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/foundation.css","path":"libs/highlight/styles/foundation.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/github-gist.css","path":"libs/highlight/styles/github-gist.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/github.css","path":"libs/highlight/styles/github.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/gml.css","path":"libs/highlight/styles/gml.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/googlecode.css","path":"libs/highlight/styles/googlecode.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/gradient-dark.css","path":"libs/highlight/styles/gradient-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/grayscale.css","path":"libs/highlight/styles/grayscale.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/gruvbox-dark.css","path":"libs/highlight/styles/gruvbox-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/hopscotch.css","path":"libs/highlight/styles/hopscotch.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/gruvbox-light.css","path":"libs/highlight/styles/gruvbox-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/hybrid.css","path":"libs/highlight/styles/hybrid.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/idea.css","path":"libs/highlight/styles/idea.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/ir-black.css","path":"libs/highlight/styles/ir-black.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/isbl-editor-dark.css","path":"libs/highlight/styles/isbl-editor-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/isbl-editor-light.css","path":"libs/highlight/styles/isbl-editor-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/kimbie.dark.css","path":"libs/highlight/styles/kimbie.dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/kimbie.light.css","path":"libs/highlight/styles/kimbie.light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/lightfair.css","path":"libs/highlight/styles/lightfair.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/magula.css","path":"libs/highlight/styles/magula.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/mono-blue.css","path":"libs/highlight/styles/mono-blue.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/monokai.css","path":"libs/highlight/styles/monokai.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/monokai-sublime.css","path":"libs/highlight/styles/monokai-sublime.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/night-owl.css","path":"libs/highlight/styles/night-owl.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/nord.css","path":"libs/highlight/styles/nord.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/obsidian.css","path":"libs/highlight/styles/obsidian.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/ocean.css","path":"libs/highlight/styles/ocean.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/paraiso-dark.css","path":"libs/highlight/styles/paraiso-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/paraiso-light.css","path":"libs/highlight/styles/paraiso-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/pojoaque.css","path":"libs/highlight/styles/pojoaque.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/pojoaque.jpg","path":"libs/highlight/styles/pojoaque.jpg","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/purebasic.css","path":"libs/highlight/styles/purebasic.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/qtcreator_dark.css","path":"libs/highlight/styles/qtcreator_dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/qtcreator_light.css","path":"libs/highlight/styles/qtcreator_light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/railscasts.css","path":"libs/highlight/styles/railscasts.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/rainbow.css","path":"libs/highlight/styles/rainbow.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/routeros.css","path":"libs/highlight/styles/routeros.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/school-book.css","path":"libs/highlight/styles/school-book.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/school-book.png","path":"libs/highlight/styles/school-book.png","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/shades-of-purple.css","path":"libs/highlight/styles/shades-of-purple.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/solarized-dark.css","path":"libs/highlight/styles/solarized-dark.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/solarized-light.css","path":"libs/highlight/styles/solarized-light.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/sunburst.css","path":"libs/highlight/styles/sunburst.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow-night-blue.css","path":"libs/highlight/styles/tomorrow-night-blue.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow-night-bright.css","path":"libs/highlight/styles/tomorrow-night-bright.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow-night-eighties.css","path":"libs/highlight/styles/tomorrow-night-eighties.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow-night.css","path":"libs/highlight/styles/tomorrow-night.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow.css","path":"libs/highlight/styles/tomorrow.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/vs.css","path":"libs/highlight/styles/vs.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/vs2015.css","path":"libs/highlight/styles/vs2015.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/xcode.css","path":"libs/highlight/styles/xcode.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/xt256.css","path":"libs/highlight/styles/xt256.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/highlight/styles/zenburn.css","path":"libs/highlight/styles/zenburn.css","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/animated.less","path":"libs/font-awesome/less/animated.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/bordered-pulled.less","path":"libs/font-awesome/less/bordered-pulled.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/core.less","path":"libs/font-awesome/less/core.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/fixed-width.less","path":"libs/font-awesome/less/fixed-width.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/font-awesome.less","path":"libs/font-awesome/less/font-awesome.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/icons.less","path":"libs/font-awesome/less/icons.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/larger.less","path":"libs/font-awesome/less/larger.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/list.less","path":"libs/font-awesome/less/list.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/mixins.less","path":"libs/font-awesome/less/mixins.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/path.less","path":"libs/font-awesome/less/path.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/rotated-flipped.less","path":"libs/font-awesome/less/rotated-flipped.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/screen-reader.less","path":"libs/font-awesome/less/screen-reader.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/stacked.less","path":"libs/font-awesome/less/stacked.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/less/variables.less","path":"libs/font-awesome/less/variables.less","modified":0,"renderable":1},{"_id":"themes/coder/source/libs/font-awesome/scss/font-awesome.scss","path":"libs/font-awesome/scss/font-awesome.scss","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":499162500000},{"_id":"themes/butterfly/README.md","hash":"15e7f6386b4fd3fa4a6c179ddf641e1ae57eafa2","modified":1673007905026},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1673007905026},{"_id":"themes/butterfly/README_CN.md","hash":"d0f7a24732855ae340f94e8286085d5387850cde","modified":1673007905026},{"_id":"themes/butterfly/_config.yml","hash":"671cc28bbeb8b1a4dba88b9d81e48308abd91792","modified":1673057205761},{"_id":"themes/butterfly/package.json","hash":"c81d3e680b7219b271496afbd60718bda8915368","modified":1673007905111},{"_id":"themes/butterfly/plugins.yml","hash":"49092888e97d1424624258369928586c5b4067ef","modified":1673007905111},{"_id":"themes/butterfly/languages/default.yml","hash":"335731ef259a3cec2499a2d5b050025ff4bdc608","modified":1673007905026},{"_id":"themes/butterfly/languages/en.yml","hash":"a96ab1bbe74e99ca2e4d67da9d83f442eb9b73af","modified":1673007905026},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"4adf079fb0170e3a8de6ddbb0392d6d1120030c4","modified":1673007905026},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"dcb10d62249bb149af8ad78db3ee6e342c6d6be7","modified":1673007905026},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1673007905026},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1673007905026},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1673007905111},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1673007905111},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1673007905111},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1673007905111},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1673007905026},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1673007905026},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1673007905026},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1673007905026},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1673007905026},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1673007905026},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"553f6e5e242506775ea02ebe4ebf5c99bcd9d439","modified":1673007905026},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"d2e0e71a98f6eb28b3ee91df5286cbbc70b45394","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"ac5f3b2aee29fe6ee72d534c3d78c9fa4d7de404","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"205562ec188bfba5686c51af77486550d0927df5","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1673007905057},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1673007905111},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"8e6f0677c190d44c64222054e2e7c065fc6c4802","modified":1673007905111},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"176332aa4d01728d0bd084e9b02c60167dc307dd","modified":1673007905111},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b3e05e3440b078f57391c113d6b0c8ecff112720","modified":1673007905111},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1673007905111},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"b92cc4648cfe5fb28c58943727823d1178b73a4a","modified":1673007905111},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1673007905111},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"6c3b7d0874fa499800a4fd49894c481b05ec750c","modified":1673007905111},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"db4f5971c27f49a4cb47d34729f4ddf9919d392b","modified":1673007905126},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1673007905111},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1673007905126},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"c445140fa16f19bf5fb617fa735504e7799d4d42","modified":1673007905126},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"c07efb04120914363b8de2c276ac5783b82db776","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1673007905126},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"83bfb16ab8d440be04e1b1f889f6affa7ad65a67","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1673007905126},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1673007905126},{"_id":"themes/butterfly/source/js/main.js","hash":"8650aaa2b77b1a25f48dfe2ea952050275b4038a","modified":1673007905173},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1673007905126},{"_id":"themes/butterfly/source/js/utils.js","hash":"fdb9e5b38f076953a2431b8f682388b030694b55","modified":1673007905173},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"1ae9561ea27fd9f929a9a67f1b1025303ca4370f","modified":1673007905173},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1673007905173},{"_id":"themes/butterfly/source/css/var.styl","hash":"63f12a6a847738b1479ce782c8caac5e0cf16a6b","modified":1673007905173},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1673007905173},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1673007905173},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1673007905173},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"b69f54423e1d7db78b0e4a5ff726244401a6546b","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"bee7e29995ebe28ff8518646ef162201b5efa9d9","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"6f489b24f06578440f18b629db56c810f00f8c3f","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"8b8e04d3d9462b3790ba17e5a865dab5a4740a73","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"767ca9b4dad126ba5fbd2f3ea5ca8d07c0d2b32c","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"39847b8a1f0fad7889954a4ac936b7681949f16c","modified":1673007905042},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"ea89ca7bb18dc3059079709ee5b6e971a8b87c50","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"558456d85100606c14e0a59801b0ee2ee67aadd9","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d561d36229692e2c8a9ee45a7c24c0c2b3599170","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1673007905111},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1673007905104},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1673007905111},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1673007905111},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1673007905111},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"d0d60008ef4ff74298ff062878766f194a2e4a70","modified":1673007905173},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f562648de515abc873609bfe9b9f799c8cf42b72","modified":1673007905126},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"b9d7d23dc8810542b8c8ffcbfbd3694318debcc6","modified":1673007905142},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"f72e002d56903a49c36174e77e42f88b8af8bd44","modified":1673007905173},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1673007905142},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"af6e3357b8f6df18d0775b8352551c0f8ce38e55","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"612d2f8a53141b353078f2a3405d8d44a79d9558","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"b0ba6f72848bc711bcf534c56b04ae14ab21b320","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1673007905142},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1673007905158},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"956ed11cc5d65941b49192b9be47cecfaed57a91","modified":1673007905158},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"1fed25162d7204480e9bcf476b3246e1717107ca","modified":1673007905158},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"5dabc3a5330cc28f0666d1cd8db0d67f553fd854","modified":1673007905158},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1673007905158},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1673007905158},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1673007905158},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1673007905158},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"6d2a841c7656fb28b1e15afe1d7dda56c424b7d7","modified":1673007905158},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1673007905158},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1673007905158},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d1398399eb7f1cc004fbcefa18f56188cc8fec8c","modified":1673007905158},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1673007905158},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"45792c13c7c439d412b7dc597d74d24f3b598406","modified":1673007905158},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1673007905158},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1673007905158},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1673007905158},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1673007905158},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1673007905158},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1673007905158},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1673007905158},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1673007905173},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1673007905173},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1673007905173},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"645087801624a73cbee63269cfd399e9da39c663","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"a5ddcf84ce8855c7801289270009e29c3a103150","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"aff5c34b6061b281c66a986cf017e9021dc11ac6","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e703319ae5395273e81de11ba2366f21a104cf47","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"6e5ccc9ea4346c71ad4cbf1e9f1cb83bb45e6f27","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1673007905057},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"55f7c144e4ef7a7f317bcdab8044fd8f89bdd5d9","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"3b551ab7618b36795480015b5cf565288df5b957","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"fe599836225b835bd19fe1a6831fb4d41bcec071","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"8c16214a610ff8087628f32d005a1b0aab3bb910","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"3df2f59c9552a1f2e6f0d50c4ae97e72c5392b59","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f04263a3bd7efb7f1b250cfee112e82f49805492","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"ccb5c3f2a821b87986998595743387d7c997c16e","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e45152e4ebc3fb2462916be93f98d18f0574f2d3","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"2a39dd634a80a735359206a2481f8468f34a0b5c","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1673007905073},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"77ac27a24b8347668c4df9d5c44c9461c69eaec9","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"bc207dcb771fc2c2c329f29d01708ff6b18443da","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"63ef0b2a75cf26a94c5bcd885f3a1c144451b852","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1673007905089},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1673007905089},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1673007905142},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"b45fc15c3ae7db3a0fbce0d6da74a72a95ca8a2b","modified":1673007905089},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1673007905142},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1673007905142},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1673007905142},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1673007905142},{"_id":"public/2023/01/06/hello-world/index.html","hash":"6640b02acfcd500b499cc1209b5b1dd5ff65e002","modified":1673077905473},{"_id":"public/archives/index.html","hash":"adf030810bb14bf926d75ec82c438d364674c413","modified":1673079617889},{"_id":"public/archives/2023/index.html","hash":"c605b3780664d9a8c44a5c8a6a169c07b5f5a681","modified":1673079617889},{"_id":"public/archives/2023/01/index.html","hash":"76d0a648b90f21c5c1ca37e34cb543e42036b0e3","modified":1673079617889},{"_id":"public/index.html","hash":"94cfcb803dec8555c45f837c3502682f85ee9ba8","modified":1673079617889},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1673008042343},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1673008042343},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1673008042343},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1673008042343},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1673008042343},{"_id":"public/js/main.js","hash":"189359400f6cd4d814ca9ebb5a27b96f7031bce3","modified":1673008042343},{"_id":"public/js/tw_cn.js","hash":"5c1391c9e96950833641f178b5f23c58422fb659","modified":1673008042343},{"_id":"public/css/index.css","hash":"6cdc246b0b9ff65a7a1754550a04e5bbf13798e6","modified":1673008042343},{"_id":"public/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1673008042343},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1673008042343},{"_id":"source/_posts/后端如何进行参数校验.md","hash":"cdf5b577dc429330be1a42615df93727af2e254f","modified":1673078869479},{"_id":"public/2023/01/06/后端如何进行参数校验/index.html","hash":"e1e335c518886803899a60b98f4625c18545d385","modified":1673079617889},{"_id":"themes/butterfly/source/img/home.jpg","hash":"ef0c267a3a6eb1cc9a7600d6f153c95981136a3d","modified":1673056843549},{"_id":"public/img/home.jpg","hash":"ef0c267a3a6eb1cc9a7600d6f153c95981136a3d","modified":1673057345097},{"_id":"themes/Coder/_config.yml","hash":"13ba2df7db06a65ca65518e82c9449ce0fbe7511","modified":1673077603520},{"_id":"themes/Coder/LICENSE","hash":"be2a34f973f6ebdf952038c78dc7b8e9feb77c82","modified":1673077187733},{"_id":"themes/Coder/README-zh.md","hash":"e79528f7d034908ae8a9b3c84dd3003726dceaae","modified":1673077187733},{"_id":"themes/Coder/.gitignore","hash":"1f96d470191f31429690dfc9ba9ac590cc51b9b2","modified":1673077187733},{"_id":"themes/Coder/README.md","hash":"b9cc81dcda4fcc366d2446f743ddde81718c3650","modified":1673077187733},{"_id":"themes/Coder/languages/zh-Hans.yml","hash":"8ef5fab22087fe42528a2eb9e5d4a7e0990c8178","modified":1673077187733},{"_id":"themes/Coder/languages/en.yml","hash":"96cdb1d02d4c3e1d87774b53f5ea5f92f03444e5","modified":1673077187733},{"_id":"themes/Coder/layout/404.ejs","hash":"6d7c3bed0a89cf2b7e10390cf5e1eddd9ff299f2","modified":1673077187733},{"_id":"themes/Coder/layout/post.ejs","hash":"e851ddfb59529061bb7990f70af7802383b8c7be","modified":1673077187749},{"_id":"themes/Coder/layout/layout.ejs","hash":"86db41fcfc371c483660a28d5f0c7d31dddbc1eb","modified":1673077187749},{"_id":"themes/Coder/layout/index.ejs","hash":"612a8d73c3e0ab3f48274a24a05192fcf6344bc1","modified":1673077187749},{"_id":"themes/Coder/layout/_partial/head.ejs","hash":"da31e6a02ec57e9a6cb3231d311df3d2fb7b3731","modified":1673077187733},{"_id":"themes/Coder/layout/_partial/nav.ejs","hash":"78be51b5cd68180cd6cf149d47ca4e6768f1fc0a","modified":1673077187749},{"_id":"themes/Coder/layout/_partial/footer.ejs","hash":"c31172bf91ad4ccb31278542e915a752002aa6a9","modified":1673077187733},{"_id":"themes/Coder/source/img/favicon.ico","hash":"2c1a70dccdb443cb9cba247793905eb3369e4e00","modified":1673077187765},{"_id":"themes/Coder/source/css/styles.css","hash":"2d8cd97746a9f09b32e6a64ccbe6f399e4f7b39d","modified":1673077187749},{"_id":"themes/Coder/source/css/style.styl","hash":"b780c869984081544d7bc21aef7fbb0256ae4a67","modified":1673077187749},{"_id":"themes/Coder/source/img/female.png","hash":"50546f7b2b2c9588ebdd9676cf8ef0db0e356a01","modified":1673077187765},{"_id":"themes/Coder/source/img/male.png","hash":"aa4746d97a2afbd04731848292674ad051de20f9","modified":1673077187765},{"_id":"themes/Coder/source/css/_partial/post.styl","hash":"67a62dc01c24dfba049cd5f23e4f4c3273285b81","modified":1673077187749},{"_id":"themes/Coder/source/css/_partial/index.styl","hash":"353c9bd955862ec8e3c3562ec08bbecdaf236ae1","modified":1673077187749},{"_id":"themes/Coder/source/js/js.js","hash":"4bed1f240dfaf68eb4b8096e61585baa0b880f46","modified":1673077187780},{"_id":"themes/Coder/source/css/_partial/markdown.styl","hash":"7a98410e213a44b9f4c5a43c6934fba27ce061d9","modified":1673077187749},{"_id":"themes/Coder/source/js/search.js","hash":"6777241041a58970f7a7d51db5250873c3d41fcf","modified":1673077187780},{"_id":"themes/Coder/source/libs/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1673077187780},{"_id":"themes/Coder/source/libs/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1673077187780},{"_id":"themes/Coder/source/libs/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1673077187780},{"_id":"themes/Coder/source/libs/font-awesome/less/animated.less","hash":"472ec14f388c90a7201861e77faec317d038fd9c","modified":1673077187796},{"_id":"themes/Coder/source/libs/font-awesome/less/bordered-pulled.less","hash":"66dc98ad0e4151e8938350f1ee3d0932348b37e8","modified":1673077187796},{"_id":"themes/Coder/source/libs/highlight/highlight.pack.js","hash":"e5a7c1d00853fec211145a352482cbcfa1319a06","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/fixed-width.less","hash":"a9552c8a91766a6d926c43c4c0f74acb62aaf719","modified":1673077187796},{"_id":"themes/Coder/source/libs/font-awesome/less/font-awesome.less","hash":"06bd9cd5c5a646b1c631ba7b1edb77f60d84a91b","modified":1673077187796},{"_id":"themes/Coder/source/libs/font-awesome/less/core.less","hash":"5f436a1afd7f1de7dde20ed8c2fd84812b8acf12","modified":1673077187796},{"_id":"themes/Coder/source/libs/font-awesome/less/list.less","hash":"2b203f3bacd6eaa58d0aa11efb9fb661b884eeb9","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/icons.less","hash":"e7492081853b880643f96e28659218b92c6e660a","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/larger.less","hash":"d9610d7f83b0aaf3fdd5fa048117bd8620adf346","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/path.less","hash":"fce36570fe54da40c1c61f20d62bf9751a81a27e","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/mixins.less","hash":"9b53403a944d93c5d7238c8942534fccf7957cff","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/rotated-flipped.less","hash":"39ec6a3d98e5a55a2330935d139f95855c139dcf","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/stacked.less","hash":"ee10b7a0bc941f8d0bbd092d4178b9fae9f1661f","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/screen-reader.less","hash":"3fa86249735534461a08afa86b5d7d774de7ef3f","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_animated.scss","hash":"c3d081abee1076d36a289afc6488e676bc59f023","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/less/variables.less","hash":"e0dab04318d43211435c82989fbc05d0876b2708","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_fixed-width.scss","hash":"f4af333866ff3c0da59493fc7077965c6e9d46ac","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_bordered-pulled.scss","hash":"39353047bbcce4f3f706666df1547e64546932a0","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_core.scss","hash":"2dce8814642ef0ee86c65f3d29818c17fd8951f9","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_icons.scss","hash":"303a6e9e04e91a132612f094b34cccfc90c63bec","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_list.scss","hash":"8e9c5708bd91364a749f93555ba65af3c49ff1a6","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_larger.scss","hash":"c5cf379c23025aa001f850bd560a87a92e4f711d","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_mixins.scss","hash":"25b2361e654e3512c1f6024f3a8d593413611a58","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_path.scss","hash":"011339ce07bb12a5736edd7fdbed0b7f3c63bf72","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_rotated-flipped.scss","hash":"fd48d098af52ffff6f829e7f5a2250a9c3cfc87f","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/font-awesome.scss","hash":"6bfc7e75fd344628b06d85f7fa4d48b106334584","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_stacked.scss","hash":"c4fe90e7781e8b229bf2657312ba61ecf1026cab","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_screen-reader.scss","hash":"ebe3fe40059e5a2a3a3c0c0f587a2e2bc23fd1b2","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/a11y-dark.css","hash":"545a32473c016e7928809c90abb88d8b3d66c0e0","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/a11y-light.css","hash":"d68397e4cad57ab370b185eb37bddf9e4dff67a0","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/agate.css","hash":"267d7a729d7106899d887940bd62f01a7f8810a8","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/arduino-light.css","hash":"8bc12b6d47c3901e4fa8bd054e57c39bd82e9431","modified":1673077187802},{"_id":"themes/Coder/source/libs/font-awesome/scss/_variables.scss","hash":"8e450f7064c308a124fe82ded322db59fbbeb59f","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/androidstudio.css","hash":"bd1d92a769b5e54f65ed659be012a5da7b933f67","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/an-old-hope.css","hash":"a1deffdb4283bb21cb9c6eeca221d76cdb275377","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/arta.css","hash":"0c83871a3be547414936f040d1b651796ed432e9","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-cave-dark.css","hash":"0fe44a5e2e47a6d5f808f343be5e0ee38a157513","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-cave-light.css","hash":"8e8a3cd5611034e8cb1cf17ae598cb146feae0e5","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/ascetic.css","hash":"1b3f8c010d93271fe0b8973b24a83cccb43d2ab5","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-dune-dark.css","hash":"371fbf41c919b2cf66dbd64db24fc9a9f270f0ca","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-dune-light.css","hash":"978c280fbb391ab34ec798ff63d27ccf0622ffc5","modified":1673077187802},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-estuary-light.css","hash":"eaf8d2305631471a5c69039f5f666ec7cdb0991e","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-forest-dark.css","hash":"8d9cece07b6ea31e01fec11987b42ffc5bfb8c3f","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-estuary-dark.css","hash":"6cd190c8e9645ec6cc3aa897f2076c9a2a65fbf4","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-forest-light.css","hash":"cdfdc19fd6e33879b2212cf41d5159484d72b1ac","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-heath-dark.css","hash":"707c60a91e0390b4d481710e5cab28441b1a6d20","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-lakeside-dark.css","hash":"6f9102332449833997b2e72e8658fb9de212bc48","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-heath-light.css","hash":"9b034e416e989edba7d2c2fd57ed706dc2059c4e","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-savanna-dark.css","hash":"3768ba3e44fc1038adb09ff3adfbe4c8d807c338","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-plateau-dark.css","hash":"4d69e5501ec2a7b81810466837ec731a81590d4d","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-savanna-light.css","hash":"fd76c75ef1f1ab693ccd09e973204cc80dae18cd","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-plateau-light.css","hash":"f8e768bd2b111a4dffb6100391b647f6d9b1f445","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-lakeside-light.css","hash":"180699d969cb62743bc8e4cf4dc5b88ea1c6ed9b","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-sulphurpool-dark.css","hash":"f6dc59deaf5dc1a87229e207f18b0def15a235cd","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-seaside-dark.css","hash":"f44bb322aab7a93f0c52a39e878670b7d6c2a8b8","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-seaside-light.css","hash":"dd9657b37f5fd62a288972380193db4249bcdf96","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atelier-sulphurpool-light.css","hash":"4783dd049a048c7858603984b61b5f7db920c44d","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atom-one-dark.css","hash":"91671ed42c0ce1363843144a9666d34faddb7e27","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atom-one-dark-reasonable.css","hash":"c8cb7465e3e3737236647e8b2e60997dc0371d5a","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/brown-paper.css","hash":"9a030da7dc781e1461b15186f2b01ea684ee9ad2","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/atom-one-light.css","hash":"526e305a190476a2b28a244ca928aabdcc686c34","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/codepen-embed.css","hash":"a4ce8f56fa8ec5078f597db441ebeace6264a508","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/color-brewer.css","hash":"317e097d8b2e0fd3e7c64d97bb93caa8e9e23b9d","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/default.css","hash":"51a2a0d9be7a0039923a62558b7d1bc1956e965a","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/dark.css","hash":"d4b6d04ed87e2ef4fcd359052c0220b70060a0f3","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/darcula.css","hash":"d8cfee505ad671575e677d5e06a3b512dd51043e","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/darkula.css","hash":"d004ba64216234a53c84fa55baefdc8b371bb4d9","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/dracula.css","hash":"896157dc66de96b3e8ac2c2d032ac1f79f42ac42","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/far.css","hash":"3c9b37b9d4f992042165069792ea373ce299fa31","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/foundation.css","hash":"f94e2addc3003507c8beb57448052e265145ee85","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/docco.css","hash":"9495b22865033719a0701b8e3557a843611204db","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/github-gist.css","hash":"e8ff6a6effd153a280262787181c272d46f99184","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/github.css","hash":"6f28691831ef118939d2e109a205b425a5249b90","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/googlecode.css","hash":"8ea1780e834b7f40c962744cb4ef533f9b805f9b","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/gml.css","hash":"080fb556b587e0d5c0f5b8a6ffeca62c05d05aff","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/gruvbox-dark.css","hash":"bfe2f24aef069669dc44dba54f14b0005667d700","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/gradient-dark.css","hash":"9444591399f57e1d3c3a7a10bc52770fb604c717","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/idea.css","hash":"cfdc18180d926095d8322f36f041a2cf43445eef","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/gruvbox-light.css","hash":"4e5445d5eaa82f1787e91682e544fea3be3b4bb9","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/hopscotch.css","hash":"f2244187e01d79f9b18d214851972debecb241f0","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/isbl-editor-dark.css","hash":"b0df11c36bcd12e46f3b710a693bf3cc2a462d42","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/hybrid.css","hash":"c1cf52abb1248498794739cea51d6ecbd7539c69","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/isbl-editor-light.css","hash":"28eb1fe4c9bc3d1d3f043d8363032ed54c3c2eb1","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/grayscale.css","hash":"b2074d4f1ffa928a9948a9edecf8e4ec513999e6","modified":1673077187818},{"_id":"themes/Coder/source/libs/highlight/styles/kimbie.light.css","hash":"6c95f1dc95fe047eff53b52231a8f552ec17713d","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/ir-black.css","hash":"c8ee27f6873ee1e52c394b373bc8be49d059a46c","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/kimbie.dark.css","hash":"8fb1f4307f136010545bb095fd9a4bd298bd9dee","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/lightfair.css","hash":"2aefc7e5dced38ac63aeb805c412091de7aec4d7","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/magula.css","hash":"7c42d8be4abbccaf5a91cd69a65ad11b58a03f11","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/mono-blue.css","hash":"7e2884e42730cf5ce6c3ed605954f085924d442c","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/monokai.css","hash":"519e52e47fcb021bfa65d8070bab2463c985b7b8","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/monokai-sublime.css","hash":"0d16b61fd8723b61ebbb4ae85936b7222089cd5c","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/night-owl.css","hash":"cac2e69ffa06497ef853bb1743a128901d8d3105","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/ocean.css","hash":"05261db4eab97828f1e0e2d8dac3c17b46c5135b","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/nord.css","hash":"f0caf7fcfb391aa4842360ddbb2303c30e72a1ad","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/paraiso-dark.css","hash":"54a74080b472d4f02ec892383df7243a9fc0325c","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/obsidian.css","hash":"c8f452d1dd3c24ed1fd31a8a542976a98768f0ee","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/pojoaque.css","hash":"147fa0862896e6954bc6800e573d0dc009d0bd76","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/paraiso-light.css","hash":"ec682ddb4f6c6022e86bbc3b21fee2db17534dfa","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/purebasic.css","hash":"2a49a847571d1b9747cb6a14acd5f4e5b5c8328d","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/qtcreator_light.css","hash":"64a3df679ec5c1189fc4f4c046da13ccfde61088","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/qtcreator_dark.css","hash":"f6247839bf5f054c1c67675c9a2009c9dd882a54","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/rainbow.css","hash":"34ebae47223dc8e1b6464880fa83e217a5774199","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/railscasts.css","hash":"1bb2dd8ccba3e33aa3fd419bad757b0710ca7bf3","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/routeros.css","hash":"9d3b69b223ad1f8f3301de71d2ca008e0271c392","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/school-book.css","hash":"5dd8a8a51ab511b981404b7c1a7d0daf94d6340f","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/shades-of-purple.css","hash":"dbcc7f797f40730ea9943613221c66653285bad4","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/solarized-dark.css","hash":"97bba4362e3001a93f1b111a140895cbe6047a81","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/solarized-light.css","hash":"fe6779c179c3e6136384e463fdc6d3b08ff88ba7","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/sunburst.css","hash":"bcbe342ac0be63bb2e8545f426e13c1751a70923","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow-night-blue.css","hash":"8fc2bd599487fa428895af9c15278b629205a005","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow-night.css","hash":"51486c77fab70d7615e814787531d1a7db22a65a","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow.css","hash":"e98fd167fe9c5668165f28dd6c0ecb59b3293f67","modified":1673077187849},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow-night-bright.css","hash":"db7f477d609bfd0d264f69fdee32d28b2b3771ec","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/vs.css","hash":"7f91ad5a66ffbc8db2af542bd2db0e84bcf22587","modified":1673077187849},{"_id":"themes/Coder/source/libs/highlight/styles/tomorrow-night-eighties.css","hash":"12449d31f223502297086943f1bfeeac5f28c4c1","modified":1673077187834},{"_id":"themes/Coder/source/libs/highlight/styles/vs2015.css","hash":"9d3b1fab804f5447f9ee0d45c9079ae201f6c498","modified":1673077187849},{"_id":"themes/Coder/source/libs/highlight/styles/xcode.css","hash":"113def1c0c88ef96df0722223b158cb068e32041","modified":1673077187849},{"_id":"themes/Coder/source/libs/highlight/styles/xt256.css","hash":"30265e64715ab4c0ed868b39663f9418dbfbdc67","modified":1673077187849},{"_id":"themes/Coder/source/doc/hexocoder.png","hash":"ea153f39e3a46d4c592c5568f98a5dda518bc309","modified":1673077187749},{"_id":"themes/Coder/source/doc/phone2.png","hash":"fc07230267ff31ad80f9f28df5cba5c7ab4f5658","modified":1673077187765},{"_id":"themes/Coder/source/img/black.jpg","hash":"0f672e41b6d73bc2da9a885d3283fe2eb13f507a","modified":1673077187765},{"_id":"themes/Coder/source/libs/jquery.min.js","hash":"44d980c8f4d21057018d80398d574fa72aea1bc7","modified":1673077187849},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1673077187796},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1673077187796},{"_id":"themes/Coder/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1673077187780},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1673077187780},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1673077187796},{"_id":"themes/Coder/source/libs/highlight/styles/zenburn.css","hash":"92941a6ae73b74f44ad7c559c5548c44073c644a","modified":1673077187849},{"_id":"themes/Coder/source/doc/phone1.png","hash":"8d603fa0b6b451454865eb1c1e339c0f48ff1ca8","modified":1673077187765},{"_id":"themes/Coder/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1673077187796},{"_id":"themes/Coder/source/doc/light.png","hash":"806fdb2c3385249af7da6826ebca35f9f4d5f8b8","modified":1673077187765},{"_id":"themes/Coder/source/doc/lady2.png","hash":"6559d5e81365503aa68bea61267d838377a4beee","modified":1673077187765},{"_id":"themes/Coder/source/doc/gentle.png","hash":"7e78a423c871b9451229c707d44328a60ed26247","modified":1673077187749},{"_id":"themes/Coder/source/doc/lady1.png","hash":"222d757c3655250ef64d36a5cb201c34209b46c5","modified":1673077187765},{"_id":"themes/Coder/source/img/white.jpg","hash":"d24f1917a9ca3f3077b31c68e418cc7a3f3810fd","modified":1673077187780},{"_id":"public/img/favicon.ico","hash":"2c1a70dccdb443cb9cba247793905eb3369e4e00","modified":1673077361146},{"_id":"public/img/female.png","hash":"50546f7b2b2c9588ebdd9676cf8ef0db0e356a01","modified":1673077361146},{"_id":"public/libs/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1673077361146},{"_id":"public/img/male.png","hash":"aa4746d97a2afbd04731848292674ad051de20f9","modified":1673077361146},{"_id":"public/libs/font-awesome/less/animated.less","hash":"472ec14f388c90a7201861e77faec317d038fd9c","modified":1673077361146},{"_id":"public/libs/font-awesome/less/fixed-width.less","hash":"a9552c8a91766a6d926c43c4c0f74acb62aaf719","modified":1673077361146},{"_id":"public/libs/font-awesome/less/bordered-pulled.less","hash":"66dc98ad0e4151e8938350f1ee3d0932348b37e8","modified":1673077361146},{"_id":"public/libs/font-awesome/less/font-awesome.less","hash":"06bd9cd5c5a646b1c631ba7b1edb77f60d84a91b","modified":1673077361146},{"_id":"public/libs/font-awesome/less/icons.less","hash":"e7492081853b880643f96e28659218b92c6e660a","modified":1673077361146},{"_id":"public/libs/font-awesome/less/core.less","hash":"5f436a1afd7f1de7dde20ed8c2fd84812b8acf12","modified":1673077361146},{"_id":"public/libs/font-awesome/less/larger.less","hash":"d9610d7f83b0aaf3fdd5fa048117bd8620adf346","modified":1673077361146},{"_id":"public/libs/font-awesome/less/list.less","hash":"2b203f3bacd6eaa58d0aa11efb9fb661b884eeb9","modified":1673077361146},{"_id":"public/libs/font-awesome/less/path.less","hash":"fce36570fe54da40c1c61f20d62bf9751a81a27e","modified":1673077361146},{"_id":"public/libs/font-awesome/less/rotated-flipped.less","hash":"39ec6a3d98e5a55a2330935d139f95855c139dcf","modified":1673077361146},{"_id":"public/libs/font-awesome/less/mixins.less","hash":"9b53403a944d93c5d7238c8942534fccf7957cff","modified":1673077361146},{"_id":"public/libs/font-awesome/less/screen-reader.less","hash":"3fa86249735534461a08afa86b5d7d774de7ef3f","modified":1673077361146},{"_id":"public/libs/font-awesome/less/stacked.less","hash":"ee10b7a0bc941f8d0bbd092d4178b9fae9f1661f","modified":1673077361146},{"_id":"public/libs/font-awesome/less/variables.less","hash":"e0dab04318d43211435c82989fbc05d0876b2708","modified":1673077361146},{"_id":"public/libs/font-awesome/scss/font-awesome.scss","hash":"6bfc7e75fd344628b06d85f7fa4d48b106334584","modified":1673077361146},{"_id":"public/libs/highlight/styles/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1673077361146},{"_id":"public/libs/highlight/styles/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1673077361146},{"_id":"public/libs/highlight/styles/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1673077361146},{"_id":"public/doc/hexocoder.png","hash":"ea153f39e3a46d4c592c5568f98a5dda518bc309","modified":1673077361146},{"_id":"public/doc/phone2.png","hash":"fc07230267ff31ad80f9f28df5cba5c7ab4f5658","modified":1673077361146},{"_id":"public/img/black.jpg","hash":"0f672e41b6d73bc2da9a885d3283fe2eb13f507a","modified":1673077361146},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1673077361146},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1673077361146},{"_id":"public/css/styles.css","hash":"d45adbe22eb8406e988012cb7efbf805f2c43d12","modified":1673077361146},{"_id":"public/js/js.js","hash":"c7118df2b6611e94ef5f83e75bea5f3f4fc26bbc","modified":1673077361146},{"_id":"public/js/search.js","hash":"b6e33fab065a3428fecf75da6cc286188753e710","modified":1673077361146},{"_id":"public/libs/highlight/styles/a11y-light.css","hash":"3f5cde8e2278a6d52e6e4f30509588c80a3ad5a6","modified":1673077361146},{"_id":"public/libs/highlight/styles/a11y-dark.css","hash":"122f8c71ac1c35398e96bf209f20668195a9e144","modified":1673077361146},{"_id":"public/libs/highlight/styles/agate.css","hash":"8e122b0f00f5a7ec4e6dc492bf1560441eeef7f0","modified":1673077361146},{"_id":"public/libs/highlight/styles/an-old-hope.css","hash":"124d4856bbd6e2cfc164914080724f1a59b9899c","modified":1673077361146},{"_id":"public/libs/highlight/styles/arduino-light.css","hash":"141b53b2e2de6a321a695d816a836666c5e2c5e6","modified":1673077361146},{"_id":"public/libs/highlight/styles/androidstudio.css","hash":"958baa24814c06a625612a3b2b478d54bc1bf1b1","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-cave-dark.css","hash":"f397d4418ce88b998841fd9135242461ba1a79b5","modified":1673077361146},{"_id":"public/libs/highlight/styles/ascetic.css","hash":"6358377b5c25667886aca0d605cbc497cf02405f","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-dune-dark.css","hash":"081d73e454db140cd41b2bb595be297cfcab25e0","modified":1673077361146},{"_id":"public/libs/highlight/styles/arta.css","hash":"17b23b9fa57ef7a05a6aaeea9b5feb5442a8e584","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-cave-light.css","hash":"2933f0247ac6d84c2954dd4946e359853abbf70a","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-estuary-light.css","hash":"91ae4668c15a085ffce15ca21e93da445b5ecf3a","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-dune-light.css","hash":"7ba074de897e6a5e27d8b97f7cd06c1746474e72","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-estuary-dark.css","hash":"a0c46a0f955e3864f5e967ea93f5e61519a17be8","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-forest-dark.css","hash":"d8a4dc060b3fc719aa2f7d7b3f1019a3964b8101","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-forest-light.css","hash":"8a78a4eea0f32d094d1f9e316d59e990ba739d97","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-heath-dark.css","hash":"b93c2241ff123e62d4edb3dfc20410e4d1da3e78","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-lakeside-dark.css","hash":"fa707b252d5d5caccc0589374522bed47b7ca100","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-savanna-dark.css","hash":"09d45a218f87b8cb55b5ca7f4e9d76ea89a9404a","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-plateau-dark.css","hash":"240f79f4e1fd63485c13900875b64c5a0d1bd06d","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-lakeside-light.css","hash":"8ba595b9ba6e8be6dc029bf80caab38e85aed686","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-heath-light.css","hash":"172b98f783d213a20211ec6aca9a3840ba524f55","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-plateau-light.css","hash":"9731db1052f23351c983210701edd3f5ceed343f","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-savanna-light.css","hash":"6bd3a62c32558476d436bd389500e5fbeb693d67","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-seaside-light.css","hash":"3e6b9e2a3a5de455490b8224401f19702df4cde9","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-sulphurpool-dark.css","hash":"1f006f8bd28e2ffbb73f708769605ba766787fff","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-sulphurpool-light.css","hash":"0319c3eea893601b79b6c57652ef49b9222cc9de","modified":1673077361146},{"_id":"public/libs/highlight/styles/atelier-seaside-dark.css","hash":"b2800804a21f729a3d0a16b3aadc17679fd0639c","modified":1673077361146},{"_id":"public/libs/highlight/styles/atom-one-dark-reasonable.css","hash":"90e194ba1c1fe2ca1b5f40b5eb7c29f40ab66ff4","modified":1673077361146},{"_id":"public/libs/highlight/styles/atom-one-dark.css","hash":"a6d28e1c04cee20cd874fc7ac0903d8e2e4bd54e","modified":1673077361146},{"_id":"public/libs/highlight/styles/atom-one-light.css","hash":"eda63d8cce440dbf3bb823e10577a134e9941deb","modified":1673077361146},{"_id":"public/libs/highlight/styles/codepen-embed.css","hash":"c4520e45d18259817b8942d17971f27c94f0fb09","modified":1673077361146},{"_id":"public/libs/highlight/styles/brown-paper.css","hash":"a6817d890e58f80ce79d87620791dae821a70fff","modified":1673077361146},{"_id":"public/libs/highlight/styles/darcula.css","hash":"617241bc95a5dbbd741820bf296155b90e22d61b","modified":1673077361146},{"_id":"public/libs/highlight/styles/color-brewer.css","hash":"96332573db854e7b7411caa94ba29b238fede2d3","modified":1673077361146},{"_id":"public/libs/highlight/styles/dark.css","hash":"fc77519d4f5d731054c5d4b7e7bbdbb510833271","modified":1673077361146},{"_id":"public/libs/highlight/styles/default.css","hash":"fba68624d1b34a5543fe0bf4b2af2ac1ddf65e74","modified":1673077361146},{"_id":"public/libs/highlight/styles/darkula.css","hash":"0be948bb84acc05f93a1e5e9b48fe34cf61673a0","modified":1673077361146},{"_id":"public/libs/highlight/styles/docco.css","hash":"1be7be09a1b927c22c7f11451becdb335145bdd2","modified":1673077361146},{"_id":"public/libs/highlight/styles/dracula.css","hash":"2633f2e84680e9f381e9ac1df344b542e28f9774","modified":1673077361146},{"_id":"public/libs/highlight/styles/foundation.css","hash":"29d960268ca944b5537ff2d2e70d620339dcd5d5","modified":1673077361146},{"_id":"public/libs/highlight/styles/github-gist.css","hash":"8cfbcbf4c0491e44e6b073c95a04cc401cb11ab2","modified":1673077361146},{"_id":"public/libs/highlight/styles/github.css","hash":"ee593952684a791317ee8b77ad096e729dec649e","modified":1673077361146},{"_id":"public/libs/highlight/styles/far.css","hash":"67e0658b2376e91e4894636a3522a30c2aec42de","modified":1673077361146},{"_id":"public/libs/highlight/styles/gml.css","hash":"0f3f5502247b00ce37dc2b362a6984305001dd50","modified":1673077361146},{"_id":"public/libs/highlight/styles/googlecode.css","hash":"fed3d439d0c305b337dd9c0f68dcbfa51429f445","modified":1673077361146},{"_id":"public/libs/highlight/styles/gradient-dark.css","hash":"e49b73bab4446ec2dbc0befb860a1fdc27bf1b42","modified":1673077361146},{"_id":"public/libs/highlight/styles/grayscale.css","hash":"5688658c28fc5799517e8f3c224ae3da3797ba44","modified":1673077361146},{"_id":"public/libs/highlight/styles/hybrid.css","hash":"1e2d54598b5f948b597059909d4bd158b7df021f","modified":1673077361146},{"_id":"public/libs/highlight/styles/gruvbox-dark.css","hash":"aaf90d076e34bc44016462d70f83985e0e55c8dc","modified":1673077361146},{"_id":"public/libs/highlight/styles/gruvbox-light.css","hash":"084699ab0aa326fede86e38bf41ebe49edde3a90","modified":1673077361146},{"_id":"public/libs/highlight/styles/ir-black.css","hash":"95aad65ba77183500ce0f7ad62a7535b647ee20c","modified":1673077361146},{"_id":"public/libs/highlight/styles/idea.css","hash":"164649ae1e7c891a0d88cca075521af28656e2a1","modified":1673077361146},{"_id":"public/libs/highlight/styles/isbl-editor-dark.css","hash":"73d2282192e403868998cff2e77093ace8a6e5fb","modified":1673077361146},{"_id":"public/libs/highlight/styles/isbl-editor-light.css","hash":"41baadd11cf10bab67128dd104f704fdd149318e","modified":1673077361146},{"_id":"public/libs/highlight/styles/hopscotch.css","hash":"3d258ff6f84900ad9abbe43f4ec8b8152c72e887","modified":1673077361146},{"_id":"public/libs/highlight/styles/kimbie.dark.css","hash":"58ed061c204fbc09d221ee9135d66bad976e5fc3","modified":1673077361146},{"_id":"public/libs/highlight/styles/kimbie.light.css","hash":"b7aa9b1b21a25dfefcac7649a328962f84c47913","modified":1673077361146},{"_id":"public/libs/highlight/styles/lightfair.css","hash":"3bdc4517354b7acc495562d8b4937c7a40a89f06","modified":1673077361146},{"_id":"public/libs/highlight/styles/mono-blue.css","hash":"3163f08756efa9e68e87addf20750e5650cdb8e4","modified":1673077361146},{"_id":"public/libs/highlight/styles/monokai-sublime.css","hash":"e4f3df87cbfa634c86b489e9cc43acf44d415986","modified":1673077361146},{"_id":"public/libs/highlight/styles/magula.css","hash":"8f5cfb7c23c705de7c95577563eb79beb49b68f6","modified":1673077361146},{"_id":"public/libs/highlight/styles/monokai.css","hash":"99ab7678d541bc02a8d38de83a289c5e549a20ce","modified":1673077361146},{"_id":"public/libs/highlight/styles/nord.css","hash":"98dfcd6eee4968fb4c634784cb048a98169b1bc8","modified":1673077361146},{"_id":"public/libs/highlight/styles/night-owl.css","hash":"d067142aeb74bfdcdec4acebb3241b3e79461bda","modified":1673077361146},{"_id":"public/libs/highlight/styles/obsidian.css","hash":"6ed475813fe4886a58b236297862ff2f181e66f7","modified":1673077361146},{"_id":"public/libs/highlight/styles/ocean.css","hash":"fce6858e1c5eb9d2857cb5b5d24069c5994cfc91","modified":1673077361146},{"_id":"public/libs/highlight/styles/paraiso-dark.css","hash":"8f5445327ce3c83b62f6bf4c1a0d87fa6f036341","modified":1673077361146},{"_id":"public/libs/highlight/styles/pojoaque.css","hash":"4e1e6a431212f5043a550474a1acda63362cdd6f","modified":1673077361146},{"_id":"public/libs/highlight/styles/qtcreator_light.css","hash":"9a2a19ac2f6e6a7d5edd7fae67b7de4a3957e878","modified":1673077361146},{"_id":"public/libs/highlight/styles/paraiso-light.css","hash":"6eb3ab7a3337f9cad3a2e5fa6bf7dd83685228d8","modified":1673077361146},{"_id":"public/libs/highlight/styles/qtcreator_dark.css","hash":"213a40d203c4986cdbcb1bdf7d0b9013b29041ba","modified":1673077361146},{"_id":"public/libs/highlight/styles/railscasts.css","hash":"a6d2043478fae5915926914cbd96fe9b706d98a6","modified":1673077361146},{"_id":"public/libs/highlight/styles/purebasic.css","hash":"e6bb7a57221bed7a601dc9d8d41d9b1425e2dea6","modified":1673077361146},{"_id":"public/libs/highlight/styles/routeros.css","hash":"fc5db7c8f18d6b31ad92df21a51e7867d459af19","modified":1673077361146},{"_id":"public/libs/highlight/styles/rainbow.css","hash":"1b2d98ccdda36aa926d0e6d069b673fdacd2d33e","modified":1673077361146},{"_id":"public/libs/highlight/styles/shades-of-purple.css","hash":"4d5b44a1615173d02b223ba2cce220ab70e09650","modified":1673077361146},{"_id":"public/libs/highlight/styles/school-book.css","hash":"6c4198b6ffde866f5e2fe9172aee094065f9774a","modified":1673077361146},{"_id":"public/libs/highlight/styles/sunburst.css","hash":"8309eab2e5b1765dbee81a626baacbdad869b76a","modified":1673077361146},{"_id":"public/libs/highlight/styles/solarized-light.css","hash":"6b70caf1e84d096b1bc6318d5dae78d69e5dd1d3","modified":1673077361146},{"_id":"public/libs/highlight/styles/tomorrow-night-blue.css","hash":"cd257d7d6a37cd5a09419b5f5f9d34b6b282423f","modified":1673077361146},{"_id":"public/libs/highlight/styles/tomorrow-night-bright.css","hash":"04f0af30fdda5e5d6ebdeef5a860b6b7e49cfe89","modified":1673077361146},{"_id":"public/libs/highlight/styles/solarized-dark.css","hash":"d02fc2dcbeec4b7af2cadec4bbbfc5b016aed4c7","modified":1673077361146},{"_id":"public/libs/highlight/styles/tomorrow-night-eighties.css","hash":"d82b84bcda0588105dbbc0e8e8ba5e62c208a061","modified":1673077361146},{"_id":"public/libs/highlight/styles/tomorrow.css","hash":"163593ad70770d0296c5e643fa62e58e63f1b340","modified":1673077361146},{"_id":"public/libs/highlight/styles/tomorrow-night.css","hash":"86264dd861d35a8b135f9fcb8ff2675e9fa69c16","modified":1673077361146},{"_id":"public/libs/highlight/styles/vs.css","hash":"2ac5e89ceb3d5a0e0fdab1ed6d9a411ec7d221aa","modified":1673077361146},{"_id":"public/libs/highlight/styles/xcode.css","hash":"d8a1f18e5344c2edf97921ec21a54b02745997e9","modified":1673077361146},{"_id":"public/libs/highlight/styles/xt256.css","hash":"d9e0f7d8ab5cfd627ce085c16e7a90e1ad495516","modified":1673077361146},{"_id":"public/css/style.css","hash":"59d89864124aec9c62ec1f195ffe6e89fb3b417a","modified":1673077361146},{"_id":"public/libs/highlight/highlight.pack.js","hash":"e5a87508b4ce2f7e00c8f792251a0837879a6311","modified":1673077361146},{"_id":"public/libs/jquery.min.js","hash":"37b1db88b57438f1072a8ebc7559c909c9d3a682","modified":1673077361146},{"_id":"public/libs/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1673077361146},{"_id":"public/libs/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1673077361146},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1673077361146},{"_id":"public/libs/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1673077361146},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1673077361146},{"_id":"public/libs/highlight/styles/zenburn.css","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1673077361146},{"_id":"public/libs/highlight/styles/vs2015.css","hash":"3c7fa677de2a785d90fc6c3f7520ac1b11bfd37a","modified":1673077361146},{"_id":"public/doc/phone1.png","hash":"8d603fa0b6b451454865eb1c1e339c0f48ff1ca8","modified":1673077361146},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1673077361146},{"_id":"public/doc/light.png","hash":"806fdb2c3385249af7da6826ebca35f9f4d5f8b8","modified":1673077361146},{"_id":"public/doc/lady2.png","hash":"6559d5e81365503aa68bea61267d838377a4beee","modified":1673077361146},{"_id":"public/doc/gentle.png","hash":"7e78a423c871b9451229c707d44328a60ed26247","modified":1673077361146},{"_id":"public/doc/lady1.png","hash":"222d757c3655250ef64d36a5cb201c34209b46c5","modified":1673077361146},{"_id":"public/img/white.jpg","hash":"d24f1917a9ca3f3077b31c68e418cc7a3f3810fd","modified":1673077361146},{"_id":"themes/Coder/source/404.md","hash":"6ac8b6ae5f185255eb6a8517fc55c87b745c2cd2","modified":1673077520493},{"_id":"public/404.html","hash":"f6b09b38aa7534afaa3f6cd66dee05e794a3266c","modified":1673079617889},{"_id":"source/404.md","hash":"6ac8b6ae5f185255eb6a8517fc55c87b745c2cd2","modified":1673077520493},{"_id":"source/_posts/img/1064302-20161230090438195-1243745647.png","hash":"f862f55bf919fb7dccfac5a54cd5b13407976a2a","modified":1653384522754},{"_id":"source/_posts/img/20220127145730.png","hash":"91c9f51cfd9e71becb620c7f049841a415bd2962","modified":1653384522824},{"_id":"source/_posts/img/20220127145154.png","hash":"75a87c6dfefe258b7cb0caeede8122df362945f1","modified":1653384522824},{"_id":"source/_posts/DO、DTO、VO.md","hash":"3e8099eaa61d25a09d1db6613bf6551e4b40c4fa","modified":1653385135859},{"_id":"source/_posts/JavaWeb之如何把前端的数据快速转成实体类.md","hash":"e14eb617d92a28e7f9ffaf18deadac9cafc52a7b","modified":1649424657202},{"_id":"source/_posts/Java基本数据类型传递与引用传递区别详解.md","hash":"ce20a3e2a2f21299fd6c4574e05501c74af0e261","modified":1624258324924},{"_id":"source/_posts/Java工具类.md","hash":"3a5d68c08cbb87d194c943145f9b35a6b1b5b286","modified":1664678245604},{"_id":"source/_posts/Java常用类.md","hash":"ed54bf46b2ee6f5c1d7a5cc4c0315603ecec5fd6","modified":1668609159400},{"_id":"source/_posts/Java本地方法.md","hash":"98589944abee258f45061df29bfbfd59c7841851","modified":1666012090617},{"_id":"source/_posts/Markdwon2HTML.md","hash":"621ef139a48f131b6527a561fe9caf0d0a226444","modified":1653827912053},{"_id":"source/_posts/SSM整合.md","hash":"1bfbf27dd0219df23e0ba4e232f79d29dc825323","modified":1650015377555},{"_id":"source/_posts/一键运行脚本.md","hash":"107d1c5ddd509450c7845a05b6458f2aaf3a1765","modified":1649814719507},{"_id":"source/_posts/axios封装.md","hash":"8d4ab978e1f54a0ab50dbcaf3bcd345d04a375fe","modified":1673078473884},{"_id":"source/_posts/七牛云OSS使用方法.md","hash":"edb6b25e2f11b74851e45ffcdcf43decf99c0733","modified":1652858363423},{"_id":"source/_posts/使用AOP打印日志信息.md","hash":"7561a52ab9bb68252f353ae63b7d7b0872bbfe06","modified":1652858315760},{"_id":"source/_posts/使用Markdown来写PPT.md","hash":"17be69fd1b76e886d45f311fc4f80d2d5f3c1859","modified":1654921184754},{"_id":"source/_posts/前端请求方式.md","hash":"a0feb48b50625cb18355cf3d3a28522ff438dbae","modified":1661851650150},{"_id":"source/_posts/前后端分离，简单JWT登录实现.md","hash":"5b813f5afd6c2deae0334fe7de8a1a496947aedf","modified":1673078899064},{"_id":"source/_posts/创建自定义maven-archetype.md","hash":"04fda96098a41b172adc62a0a1c99691b3b317c3","modified":1656150887080},{"_id":"source/_posts/前端跨域问题.md","hash":"b2eb7993e5b981a4ebb71f8bad2ff645ca7f7fc9","modified":1653385318710},{"_id":"source/_posts/如何用SpringSecurity自定义验证码？.md","hash":"ae96ec864e405133b261729175b2a2ced28d6cc8","modified":1673078916717},{"_id":"source/_posts/控制台输出彩色文字.md","hash":"b060d441008355353169e7c428c64c1075b06156","modified":1673078885383},{"_id":"source/_posts/登录方案.md","hash":"d0d5089960ef70ca7cc02cb91fc3694b84f63527","modified":1653385288375},{"_id":"source/_posts/设计模式之单例模式.md","hash":"2bbe0675fe1a4b38aef83743005a48a35e31ec48","modified":1653309120266},{"_id":"source/_posts/设计模式之工厂模式.md","hash":"8201bd2cafa5fdd7818ee7a4fbad67f2a032484c","modified":1653055025544},{"_id":"source/_posts/设计模式之代理模式.md","hash":"e50f019c6adbb75f3a7ac733cb3ca28f7d08baa6","modified":1653309051125},{"_id":"source/_posts/设计模式之建造者模式.md","hash":"7f94a50d2b73935453f68197d683f28ec00f1135","modified":1655125366437},{"_id":"source/_posts/设计模式之策略模式.md","hash":"4d2ff501f6214baef37e34c84752344526e125d4","modified":1653309016329},{"_id":"source/_posts/设计模式之观察者模式.md","hash":"327ade73922921f44e59cb8c6a11552ca7ce502f","modified":1653397449178},{"_id":"source/_posts/设计模式之模板方法模式.md","hash":"c423cd86713adf17cad4edbb319133c1a7e076b3","modified":1653308889246},{"_id":"source/_posts/设计模式之责任链模式.md","hash":"2b09712ee7b20487ba9838e7a347727050199835","modified":1653059334380},{"_id":"source/_posts/设计模式之适配器模式.md","hash":"862d167839e013495be91616a5a33cbf6d209812","modified":1655286582614},{"_id":"source/_posts/软件设计的七大原则.md","hash":"a5e19db5c6c9702ed014afed84c8256467b37a56","modified":1652858251108},{"_id":"source/_posts/img/20220212141909.png","hash":"d1debbc023aaa8e556429b557a064fb8e5047860","modified":1653384522824},{"_id":"source/_posts/页面数据分页.md","hash":"8eced404ac71af34052fe0699d86470997e26842","modified":1644216839804},{"_id":"source/_posts/img/20220130183438.png","hash":"e350c2d92cf2d29ece31a4d87c1ddf2b5dcabee0","modified":1653384522824},{"_id":"source/_posts/img/20220219202630.png","hash":"62b5025e407b2a5d081d33b5008cbdc658da089c","modified":1653384522839},{"_id":"source/_posts/img/20220303183714.png","hash":"aa01a417629fbfced6d4d3b00937e7c80f72fdd6","modified":1653384522839},{"_id":"source/_posts/img/20220303193109.png","hash":"93a457d7a611d2934bc72c4f1906d8cc3bfc6897","modified":1653384522839},{"_id":"source/_posts/img/20220303193312.png","hash":"ac7f983fb89bd1125bf3de5413cfbee7aea82fe4","modified":1653384522839},{"_id":"source/_posts/img/20220303190752.png","hash":"03d488cc6734469d7e3c5c7ed8f6c43a0bb9669a","modified":1653384522839},{"_id":"source/_posts/img/20220303193212.png","hash":"7e49da64da4d6dbeb41ccab7c79a357372565723","modified":1653384522839},{"_id":"source/_posts/img/20220303193339.png","hash":"348dc63ce229cc79233daee6d148231232cdc8c3","modified":1653384522839},{"_id":"source/_posts/img/20220307180102.png","hash":"b1536b2ec6eee5093325a60080363f93eba30f62","modified":1653384522839},{"_id":"source/_posts/img/20220307180036.png","hash":"e5185bd4573d7f1c14c593d51da1c1148f44fd9a","modified":1653384522839},{"_id":"source/_posts/img/20220307180318.png","hash":"2d1f5341339ee9fe1256c232648095df3c986739","modified":1653384522839},{"_id":"source/_posts/img/20220326115001.png","hash":"26f8dff86d0137fa63bf1006248018852db8f5e3","modified":1653384522855},{"_id":"source/_posts/img/20220331211352.png","hash":"a5bc81d9e7c362de7f10e08f96fe60f26b7b3d1c","modified":1653384522855},{"_id":"source/_posts/img/20220509201454.png","hash":"6ba27e7771d4ac7dcb6a459bb5296de8bf25bf13","modified":1653384522855},{"_id":"source/_posts/img/24973821-909f156c4f27aac5.jpg","hash":"cc4852d7711353a7a0dcb6fcaa0aeaea729c56b8","modified":1653384522871},{"_id":"source/_posts/img/24973821-40527e38310e180a.png","hash":"387dc4869d852724db18d4fb943a61b2ccc466d2","modified":1653384522871},{"_id":"source/_posts/img/24973821-a35817840c4ebfcf.jpg","hash":"ab67ad4b4edc9c7952e36337bb7d727fee0836f5","modified":1653384522871},{"_id":"source/_posts/img/3ce3effbd7154941b77ea27d6f918f34.png","hash":"0d967dc795a46688ae1a687433219b49b1217d9a","modified":1653384522877},{"_id":"source/_posts/img/4b4e58e33eba4107870e2c37e9668f35.png","hash":"fb494521333ef5218e1c8af1932bbdfbefc3f9c6","modified":1653384522877},{"_id":"source/_posts/img/3dabfc579e6d49d99777b37de41bc311.png","hash":"e31ac3da31a9b985bb27a0ea807ad2bec93d8609","modified":1653384522877},{"_id":"source/_posts/img/51504a85b85e4e709bbaacddbabd18ec.png","hash":"5013dd60b0be03c059357924c39f6cee39caac74","modified":1653384522877},{"_id":"source/_posts/img/Snipaste_2022-05-04_14-47-54.jpg","hash":"089ee0d5bb7f77f8fabe00a44ade38e1a4dc57a2","modified":1653384522877},{"_id":"source/_posts/img/6be66d0ab29d41cda1d949231196f8dd.png","hash":"e29b67f18f16194b82754ef72fb59efc2fbf1d29","modified":1653384522877},{"_id":"source/_posts/img/9b01a0243009409598cd5809bf5a7313.png","hash":"efd11718ed92afbcf3575be7d220516af5338c68","modified":1653384522877},{"_id":"source/_posts/img/78a791dcf93a46b385639c2dfd9c6c4a.png","hash":"066e10bd2ed91cdfb9f2930c6705ca81296cba4c","modified":1653384522877},{"_id":"source/_posts/img/afd93b0cd7fd456a9ba689de6096c8b3.png","hash":"163a18f0e3496511f83033d15f317e71c35e023e","modified":1653384522893},{"_id":"source/_posts/img/image-20211214145824903.png","hash":"22f7ef230f5b87ebdc11bd168ede2e504ee2cadd","modified":1653384522893},{"_id":"source/_posts/img/image-20211214144425527.png","hash":"7d505d1225f2d491f3b01f650f6b116a32b8eeb9","modified":1653384522893},{"_id":"source/_posts/img/image-20211215094003288.png","hash":"bbec682ba624ab9c4e8c9b4d9db4c7f2fc2c075c","modified":1653384522893},{"_id":"source/_posts/img/cc3b2b01df5b47f682b0a45dd70f6ece.png","hash":"3e6f52f83e58e835fafb496d60c200da2075ebc8","modified":1653384522893},{"_id":"source/_posts/img/image-20211219121555979.png","hash":"c9436b354345829ba55e788a39ade2de666fc43f","modified":1653384522893},{"_id":"source/_posts/img/image-20211216123945882.png","hash":"b07a534d31f7b47bed5e621d0e59012d220674cb","modified":1653384522893},{"_id":"source/_posts/img/image-20220124135019115.png","hash":"cbb43c0af20fe3fd133df817a2e841c654a6cc1f","modified":1653384522893},{"_id":"source/_posts/img/image-20220124135009608.png","hash":"c041484b4d924850602d2a58fe984b9841e05eb7","modified":1653384522893},{"_id":"source/_posts/img/image-20211222110249727.png","hash":"a22c0cb4c59da96514ad3ffecea7156dbdd3fed8","modified":1653384522893},{"_id":"source/_posts/img/image-20220125134210980.png","hash":"6ab91621665fcffd0595f8d6b59e899cc08e15db","modified":1653384522893},{"_id":"source/_posts/img/image-20220124140143217.png","hash":"9b4f1b9ea06e3265034724c3125bdd5c341fb0de","modified":1653384522893},{"_id":"source/_posts/img/image-20220125142925063.png","hash":"1c98a8acf2c5ce8585b59228a5952d24e627f144","modified":1653384522908},{"_id":"source/_posts/img/image-20220125142728539.png","hash":"5381d7beff42deb3da871aa2fb9240bf07292276","modified":1653384522908},{"_id":"source/_posts/img/img002.png","hash":"abc85d0ff790b9a884ab0df6df85789a0058ace9","modified":1653384522908},{"_id":"source/_posts/img/img005.png","hash":"7acec319390cabef997a3a9d10d7947e88eb6730","modified":1653384522908},{"_id":"source/_posts/img/typora-icon.png","hash":"3b68d3490cb59ddd21bbca7669f206e2a5c9ba33","modified":1653384523071},{"_id":"source/_posts/img/typora-icon2.png","hash":"711f92a7ce36c13006b9f13079ff398448deff30","modified":1653384523071},{"_id":"source/_posts/img/20220219202229.png","hash":"90e394e3658ce025ad9cfb78d9d6cd07fe194e54","modified":1653384522824},{"_id":"source/_posts/img/20220213160113.png","hash":"943276c8820e403c3b0f55097798915087936d0b","modified":1653384522824},{"_id":"source/_posts/img/20220219203006.png","hash":"4fa9b35024f1f24891c35be6419adbaf80009a48","modified":1653384522839},{"_id":"source/_posts/img/20220307180452.png","hash":"408a0bb45368677447123eee72659237f55302e0","modified":1653384522839},{"_id":"source/_posts/img/24973821-1ede633e89c9d5db.jpg","hash":"820434a3709a4f965e393d1ae148763e7928808e","modified":1653384522871},{"_id":"source/_posts/img/20220507212126.png","hash":"5dda2e6daba2b7569261f6f3e6eb5e7d3ed9402a","modified":1653384522855},{"_id":"source/_posts/img/24973821-45ab22b587004531.jpg","hash":"f3fa4451a441b0d9c26a496f5e99744d0c4da5bd","modified":1653384522871},{"_id":"source/_posts/img/24973821-c47ca39b4b7d3da7.jpg","hash":"bed21fc7e7cadafeab8a6a67490e9175eb7bde1e","modified":1653384522871},{"_id":"source/_posts/img/24973821-faa5e3669a7352f0.jpg","hash":"a9d21189671b1000d1eee34d2d45189fa7bf4f3d","modified":1653384522877},{"_id":"source/_posts/img/image-20211214151515385.png","hash":"7e019eb38c184b0f8c3aa02bab95755ae1cdd211","modified":1653384522893},{"_id":"source/_posts/img/image-20220124134952163.png","hash":"6e1484447387cb160b749a423762763df0911d7c","modified":1653384522893},{"_id":"source/_posts/img/image-20220125134407787.png","hash":"9a7a7007b2884a5a35030e8e5199fbbf85c5cad1","modified":1653384522893},{"_id":"source/_posts/img/image-20220125134900597.png","hash":"36e249623463a0e0b44bfcf7a9501ee95ed70813","modified":1653384522908},{"_id":"source/_posts/img/image-20220125141414947.png","hash":"fa6d3e93a384394791f84379efe5305fcfdff22e","modified":1653384522908},{"_id":"source/_posts/img/javascript.jpg","hash":"a44c672a0c42e99e32c2ff1eb5c33907062f29c9","modified":1653384522908},{"_id":"source/_posts/img/javaweb的三层架构.jpg","hash":"5ff118cfc065167d9a51ef0d80ecda4d303476ec","modified":1653384522908},{"_id":"source/_posts/img/tomcat-servlet.png","hash":"d6bbbf1d711ae54b0b8f8d34278294ad807ffdee","modified":1653384523071},{"_id":"source/_posts/img/20220307180013.png","hash":"17639674c964c2cab69a0b0df7d096c4d488c1c6","modified":1653384522839},{"_id":"source/_posts/img/20220422195135.png","hash":"48cf46ac6faf2aa603cc438f41506ffd37efced4","modified":1653384522855},{"_id":"source/_posts/img/20220330210524.png","hash":"697d0604830fcf997280afd8cb9ea396c73af2c9","modified":1653384522855},{"_id":"source/_posts/img/20220429112109.png","hash":"56f6c4c4bb4bba3788c4feb103b41f5601b506d9","modified":1653384522855},{"_id":"source/_posts/img/20220213161921.png","hash":"43cf28aae2ffe894bbd584bb5875319751863b43","modified":1653384522824},{"_id":"source/_posts/img/24973821-da9db0cac7f7ce13.png","hash":"ea31f375737af25718c6824012e1f7234f29becd","modified":1653384522877},{"_id":"source/_posts/img/20220315085432.png","hash":"2e0385323cd2624bc47fc1697cc51e4068d61361","modified":1653384522855},{"_id":"source/_posts/img/a336f5375cea4efa939652dfd59b4f0f.png","hash":"b2eb518867d8ca6c6de7cce6c55437f6f7236912","modified":1653384522877},{"_id":"source/_posts/img/image-20220125143540299.png","hash":"c00ae4dad586c3fb661de41cf4d327c29a214758","modified":1653384522908},{"_id":"source/_posts/img/20220422195038.png","hash":"1c32cb8359e6e87e42d05ee55a97a6e6be0a52f2","modified":1653384522855},{"_id":"public/2023/01/07/软件设计的七大原则/index.html","hash":"2d31f9eac2938dea208a0b9d065acc881758981c","modified":1673078418823},{"_id":"public/2023/01/07/如何用SpringSecurity自定义验证码？/index.html","hash":"07b32fe15fd7ddd5f8714a7645a460aa91782ac1","modified":1673079617889},{"_id":"public/2023/01/07/控制台输出彩色文字/index.html","hash":"71f9611a9d84e7bbd7c667c10c305e9aacb295f0","modified":1673079617889},{"_id":"public/2023/01/07/七牛云OSS使用方法/index.html","hash":"85caa7f1872bdc926dc1f1ccd3e4ee8d8818c3ea","modified":1673078418823},{"_id":"public/2023/01/07/创建自定义maven-archetype/index.html","hash":"279f11fbf6c982c15cbdae99b24618294921006f","modified":1673078418823},{"_id":"public/2023/01/07/登录方案/index.html","hash":"75ac0b56ef8b6e8cb092fa381a522c682fd3885e","modified":1673078418823},{"_id":"public/2023/01/07/axios封装/index.html","hash":"196e5da4a6b9960bb2badff98234f030b4be29ab","modified":1673078660172},{"_id":"public/2023/01/07/DO、DTO、VO/index.html","hash":"1c09c258f1416ce3b84f8d01a1a29cf2df311bc0","modified":1673078418823},{"_id":"public/2023/01/07/一键运行脚本/index.html","hash":"88910177a2a1b89a23e71b757eb52dd705692ee4","modified":1673078418823},{"_id":"public/2023/01/07/使用Markdown来写PPT/index.html","hash":"0293651bc1befd26e37188702119cc0565a603a3","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之观察者模式/index.html","hash":"b7ab2981baa06b879c76c1b509900163eccd2084","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之工厂模式/index.html","hash":"94bdb888d4fdc83dbce0781432aebf477ca853eb","modified":1673078418823},{"_id":"public/page/2/index.html","hash":"30a53dd1a969f0e217b842448dd11fb62418c4b6","modified":1673078660172},{"_id":"public/page/3/index.html","hash":"cf9cd8122c1af6b08a4440c508d33d29142a8227","modified":1673078418823},{"_id":"public/page/4/index.html","hash":"92db63e2ee4b678ef25f9e6c0b0ec70439071295","modified":1673078418823},{"_id":"public/archives/page/2/index.html","hash":"87ebb5d9566bc629f8cf143aec6d656f5b94226f","modified":1673078926814},{"_id":"public/archives/page/3/index.html","hash":"cf9cd8122c1af6b08a4440c508d33d29142a8227","modified":1673078418823},{"_id":"public/archives/page/4/index.html","hash":"92db63e2ee4b678ef25f9e6c0b0ec70439071295","modified":1673078418823},{"_id":"public/archives/2023/page/2/index.html","hash":"87ebb5d9566bc629f8cf143aec6d656f5b94226f","modified":1673078926814},{"_id":"public/archives/2023/page/3/index.html","hash":"cf9cd8122c1af6b08a4440c508d33d29142a8227","modified":1673078418823},{"_id":"public/archives/2023/page/4/index.html","hash":"92db63e2ee4b678ef25f9e6c0b0ec70439071295","modified":1673078418823},{"_id":"public/archives/2023/01/page/2/index.html","hash":"87ebb5d9566bc629f8cf143aec6d656f5b94226f","modified":1673078926814},{"_id":"public/archives/2023/01/page/3/index.html","hash":"cf9cd8122c1af6b08a4440c508d33d29142a8227","modified":1673078418823},{"_id":"public/archives/2023/01/page/4/index.html","hash":"92db63e2ee4b678ef25f9e6c0b0ec70439071295","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之代理模式/index.html","hash":"fe2268f65540aa4417ea32e7494a438a2d1495d7","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之策略模式/index.html","hash":"7b61b06a1af1e66ac65a240660ad67023bab5fd1","modified":1673078418823},{"_id":"public/2023/01/07/前后端分离，简单JWT登录实现/index.html","hash":"dc746dbabf568490ec138c03c8ec57ca82d6ce0c","modified":1673079617889},{"_id":"public/2023/01/07/前端请求方式/index.html","hash":"20862f4b9738cac41a22b6f724629652e7518930","modified":1673078418823},{"_id":"public/2023/01/07/前端跨域问题/index.html","hash":"fab3f8b2a8ba7e48ffd404552af21170987b11d7","modified":1673078418823},{"_id":"public/2023/01/07/Markdwon2HTML/index.html","hash":"5985dd16259140bc4549479fec37f41ac30d23cd","modified":1673078418823},{"_id":"public/2023/01/07/SSM整合/index.html","hash":"40f159eca0c8d0f1bcc7973e9868d682bbdac076","modified":1673078418823},{"_id":"public/2023/01/07/Java基本数据类型传递与引用传递区别详解/index.html","hash":"71adb01ca4a4db2c217577d966b36a623dc37657","modified":1673078418823},{"_id":"public/2023/01/07/Java常用类/index.html","hash":"72f94d3acd5c13a3156471170dc6fdacd49f38a3","modified":1673078418823},{"_id":"public/2023/01/07/Java工具类/index.html","hash":"0519ebf3c79dd57692aac3877ec7cadf9226f4a4","modified":1673078418823},{"_id":"public/2023/01/07/JavaWeb之如何把前端的数据快速转成实体类/index.html","hash":"95b8dab634863ddbf71b45e48d003bade96ad99d","modified":1673078418823},{"_id":"public/2023/01/07/Java本地方法/index.html","hash":"7d3158ed588554b75f20d55ec1bc5095376c7263","modified":1673078418823},{"_id":"public/2023/01/07/页面数据分页/index.html","hash":"3f66ed615708b4e19e98793217fa758d82af719d","modified":1673078418823},{"_id":"public/2023/01/07/使用AOP打印日志信息/index.html","hash":"3be2f7403a34fb667301946bc7a43c2c60f77918","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之适配器模式/index.html","hash":"d5f349e2828ac230631e3b37f35b33bdc472e449","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之责任链模式/index.html","hash":"ecb779c313673ac655c6b21e184d4df6c24d120f","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之建造者模式/index.html","hash":"e84ca3129c2098303db60e6ecccf47d4cce5c7c5","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之模板方法模式/index.html","hash":"657201d4a2bc1949418bc31e9670d6e48c3f6f67","modified":1673078418823},{"_id":"public/2023/01/07/设计模式之单例模式/index.html","hash":"dc1aa95bb119d54f8cf7fabc8d01e87bc269675a","modified":1673078418823},{"_id":"themes/coder/.gitignore","hash":"1f96d470191f31429690dfc9ba9ac590cc51b9b2","modified":1673077187733},{"_id":"themes/coder/LICENSE","hash":"be2a34f973f6ebdf952038c78dc7b8e9feb77c82","modified":1673077187733},{"_id":"themes/coder/README-zh.md","hash":"e79528f7d034908ae8a9b3c84dd3003726dceaae","modified":1673077187733},{"_id":"themes/coder/README.md","hash":"b9cc81dcda4fcc366d2446f743ddde81718c3650","modified":1673077187733},{"_id":"themes/coder/_config.yml","hash":"13ba2df7db06a65ca65518e82c9449ce0fbe7511","modified":1673077603520},{"_id":"themes/coder/layout/404.ejs","hash":"6d7c3bed0a89cf2b7e10390cf5e1eddd9ff299f2","modified":1673077187733},{"_id":"themes/coder/languages/zh-Hans.yml","hash":"8ef5fab22087fe42528a2eb9e5d4a7e0990c8178","modified":1673077187733},{"_id":"themes/coder/languages/en.yml","hash":"96cdb1d02d4c3e1d87774b53f5ea5f92f03444e5","modified":1673077187733},{"_id":"themes/coder/layout/index.ejs","hash":"612a8d73c3e0ab3f48274a24a05192fcf6344bc1","modified":1673077187749},{"_id":"themes/coder/layout/layout.ejs","hash":"86db41fcfc371c483660a28d5f0c7d31dddbc1eb","modified":1673077187749},{"_id":"themes/coder/layout/post.ejs","hash":"e851ddfb59529061bb7990f70af7802383b8c7be","modified":1673077187749},{"_id":"themes/coder/layout/_partial/footer.ejs","hash":"c31172bf91ad4ccb31278542e915a752002aa6a9","modified":1673077187733},{"_id":"themes/coder/layout/_partial/head.ejs","hash":"da31e6a02ec57e9a6cb3231d311df3d2fb7b3731","modified":1673077187733},{"_id":"themes/coder/layout/_partial/nav.ejs","hash":"78be51b5cd68180cd6cf149d47ca4e6768f1fc0a","modified":1673077187749},{"_id":"themes/coder/source/css/style.styl","hash":"b780c869984081544d7bc21aef7fbb0256ae4a67","modified":1673077187749},{"_id":"themes/coder/source/css/styles.css","hash":"2d8cd97746a9f09b32e6a64ccbe6f399e4f7b39d","modified":1673077187749},{"_id":"themes/coder/source/img/favicon.ico","hash":"2c1a70dccdb443cb9cba247793905eb3369e4e00","modified":1673077187765},{"_id":"themes/coder/source/img/male.png","hash":"aa4746d97a2afbd04731848292674ad051de20f9","modified":1673077187765},{"_id":"themes/coder/source/img/female.png","hash":"50546f7b2b2c9588ebdd9676cf8ef0db0e356a01","modified":1673077187765},{"_id":"themes/coder/source/js/search.js","hash":"6777241041a58970f7a7d51db5250873c3d41fcf","modified":1673077187780},{"_id":"themes/coder/source/js/js.js","hash":"4bed1f240dfaf68eb4b8096e61585baa0b880f46","modified":1673077187780},{"_id":"themes/coder/source/css/_partial/index.styl","hash":"353c9bd955862ec8e3c3562ec08bbecdaf236ae1","modified":1673077187749},{"_id":"themes/coder/source/css/_partial/markdown.styl","hash":"7a98410e213a44b9f4c5a43c6934fba27ce061d9","modified":1673077187749},{"_id":"themes/coder/source/css/_partial/post.styl","hash":"67a62dc01c24dfba049cd5f23e4f4c3273285b81","modified":1673077187749},{"_id":"themes/coder/source/libs/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1673077187780},{"_id":"themes/coder/source/libs/highlight/highlight.pack.js","hash":"e5a7c1d00853fec211145a352482cbcfa1319a06","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1673077187780},{"_id":"themes/coder/source/libs/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1673077187780},{"_id":"themes/coder/source/libs/highlight/styles/a11y-dark.css","hash":"545a32473c016e7928809c90abb88d8b3d66c0e0","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/a11y-light.css","hash":"d68397e4cad57ab370b185eb37bddf9e4dff67a0","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/agate.css","hash":"267d7a729d7106899d887940bd62f01a7f8810a8","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/an-old-hope.css","hash":"a1deffdb4283bb21cb9c6eeca221d76cdb275377","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/androidstudio.css","hash":"bd1d92a769b5e54f65ed659be012a5da7b933f67","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/arduino-light.css","hash":"8bc12b6d47c3901e4fa8bd054e57c39bd82e9431","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/arta.css","hash":"0c83871a3be547414936f040d1b651796ed432e9","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/ascetic.css","hash":"1b3f8c010d93271fe0b8973b24a83cccb43d2ab5","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/atelier-cave-light.css","hash":"8e8a3cd5611034e8cb1cf17ae598cb146feae0e5","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/atelier-cave-dark.css","hash":"0fe44a5e2e47a6d5f808f343be5e0ee38a157513","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/atelier-dune-dark.css","hash":"371fbf41c919b2cf66dbd64db24fc9a9f270f0ca","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/atelier-dune-light.css","hash":"978c280fbb391ab34ec798ff63d27ccf0622ffc5","modified":1673077187802},{"_id":"themes/coder/source/libs/highlight/styles/atelier-estuary-dark.css","hash":"6cd190c8e9645ec6cc3aa897f2076c9a2a65fbf4","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-estuary-light.css","hash":"eaf8d2305631471a5c69039f5f666ec7cdb0991e","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-forest-dark.css","hash":"8d9cece07b6ea31e01fec11987b42ffc5bfb8c3f","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-lakeside-dark.css","hash":"6f9102332449833997b2e72e8658fb9de212bc48","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-heath-dark.css","hash":"707c60a91e0390b4d481710e5cab28441b1a6d20","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-heath-light.css","hash":"9b034e416e989edba7d2c2fd57ed706dc2059c4e","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-forest-light.css","hash":"cdfdc19fd6e33879b2212cf41d5159484d72b1ac","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-lakeside-light.css","hash":"180699d969cb62743bc8e4cf4dc5b88ea1c6ed9b","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-plateau-dark.css","hash":"4d69e5501ec2a7b81810466837ec731a81590d4d","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-savanna-light.css","hash":"fd76c75ef1f1ab693ccd09e973204cc80dae18cd","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-plateau-light.css","hash":"f8e768bd2b111a4dffb6100391b647f6d9b1f445","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-seaside-dark.css","hash":"f44bb322aab7a93f0c52a39e878670b7d6c2a8b8","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-savanna-dark.css","hash":"3768ba3e44fc1038adb09ff3adfbe4c8d807c338","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-seaside-light.css","hash":"dd9657b37f5fd62a288972380193db4249bcdf96","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-sulphurpool-dark.css","hash":"f6dc59deaf5dc1a87229e207f18b0def15a235cd","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atelier-sulphurpool-light.css","hash":"4783dd049a048c7858603984b61b5f7db920c44d","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atom-one-dark.css","hash":"91671ed42c0ce1363843144a9666d34faddb7e27","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/brown-paper.css","hash":"9a030da7dc781e1461b15186f2b01ea684ee9ad2","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atom-one-dark-reasonable.css","hash":"c8cb7465e3e3737236647e8b2e60997dc0371d5a","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/atom-one-light.css","hash":"526e305a190476a2b28a244ca928aabdcc686c34","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/codepen-embed.css","hash":"a4ce8f56fa8ec5078f597db441ebeace6264a508","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/color-brewer.css","hash":"317e097d8b2e0fd3e7c64d97bb93caa8e9e23b9d","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/dark.css","hash":"d4b6d04ed87e2ef4fcd359052c0220b70060a0f3","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/darcula.css","hash":"d8cfee505ad671575e677d5e06a3b512dd51043e","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/default.css","hash":"51a2a0d9be7a0039923a62558b7d1bc1956e965a","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/darkula.css","hash":"d004ba64216234a53c84fa55baefdc8b371bb4d9","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/docco.css","hash":"9495b22865033719a0701b8e3557a843611204db","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/dracula.css","hash":"896157dc66de96b3e8ac2c2d032ac1f79f42ac42","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/far.css","hash":"3c9b37b9d4f992042165069792ea373ce299fa31","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/foundation.css","hash":"f94e2addc3003507c8beb57448052e265145ee85","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/github-gist.css","hash":"e8ff6a6effd153a280262787181c272d46f99184","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/github.css","hash":"6f28691831ef118939d2e109a205b425a5249b90","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/gml.css","hash":"080fb556b587e0d5c0f5b8a6ffeca62c05d05aff","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/googlecode.css","hash":"8ea1780e834b7f40c962744cb4ef533f9b805f9b","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/gradient-dark.css","hash":"9444591399f57e1d3c3a7a10bc52770fb604c717","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/grayscale.css","hash":"b2074d4f1ffa928a9948a9edecf8e4ec513999e6","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/gruvbox-dark.css","hash":"bfe2f24aef069669dc44dba54f14b0005667d700","modified":1673077187818},{"_id":"themes/coder/source/libs/highlight/styles/hopscotch.css","hash":"f2244187e01d79f9b18d214851972debecb241f0","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/hybrid.css","hash":"c1cf52abb1248498794739cea51d6ecbd7539c69","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/gruvbox-light.css","hash":"4e5445d5eaa82f1787e91682e544fea3be3b4bb9","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/idea.css","hash":"cfdc18180d926095d8322f36f041a2cf43445eef","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/ir-black.css","hash":"c8ee27f6873ee1e52c394b373bc8be49d059a46c","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/isbl-editor-dark.css","hash":"b0df11c36bcd12e46f3b710a693bf3cc2a462d42","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/isbl-editor-light.css","hash":"28eb1fe4c9bc3d1d3f043d8363032ed54c3c2eb1","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/kimbie.dark.css","hash":"8fb1f4307f136010545bb095fd9a4bd298bd9dee","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/kimbie.light.css","hash":"6c95f1dc95fe047eff53b52231a8f552ec17713d","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/lightfair.css","hash":"2aefc7e5dced38ac63aeb805c412091de7aec4d7","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/magula.css","hash":"7c42d8be4abbccaf5a91cd69a65ad11b58a03f11","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/mono-blue.css","hash":"7e2884e42730cf5ce6c3ed605954f085924d442c","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/monokai.css","hash":"519e52e47fcb021bfa65d8070bab2463c985b7b8","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/monokai-sublime.css","hash":"0d16b61fd8723b61ebbb4ae85936b7222089cd5c","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/night-owl.css","hash":"cac2e69ffa06497ef853bb1743a128901d8d3105","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/nord.css","hash":"f0caf7fcfb391aa4842360ddbb2303c30e72a1ad","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/obsidian.css","hash":"c8f452d1dd3c24ed1fd31a8a542976a98768f0ee","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/ocean.css","hash":"05261db4eab97828f1e0e2d8dac3c17b46c5135b","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/paraiso-dark.css","hash":"54a74080b472d4f02ec892383df7243a9fc0325c","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/paraiso-light.css","hash":"ec682ddb4f6c6022e86bbc3b21fee2db17534dfa","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/pojoaque.css","hash":"147fa0862896e6954bc6800e573d0dc009d0bd76","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/purebasic.css","hash":"2a49a847571d1b9747cb6a14acd5f4e5b5c8328d","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/qtcreator_dark.css","hash":"f6247839bf5f054c1c67675c9a2009c9dd882a54","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/qtcreator_light.css","hash":"64a3df679ec5c1189fc4f4c046da13ccfde61088","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/railscasts.css","hash":"1bb2dd8ccba3e33aa3fd419bad757b0710ca7bf3","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/rainbow.css","hash":"34ebae47223dc8e1b6464880fa83e217a5774199","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/routeros.css","hash":"9d3b69b223ad1f8f3301de71d2ca008e0271c392","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/school-book.css","hash":"5dd8a8a51ab511b981404b7c1a7d0daf94d6340f","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/shades-of-purple.css","hash":"dbcc7f797f40730ea9943613221c66653285bad4","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/solarized-dark.css","hash":"97bba4362e3001a93f1b111a140895cbe6047a81","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/solarized-light.css","hash":"fe6779c179c3e6136384e463fdc6d3b08ff88ba7","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/sunburst.css","hash":"bcbe342ac0be63bb2e8545f426e13c1751a70923","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow-night-blue.css","hash":"8fc2bd599487fa428895af9c15278b629205a005","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow-night-bright.css","hash":"db7f477d609bfd0d264f69fdee32d28b2b3771ec","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow-night-eighties.css","hash":"12449d31f223502297086943f1bfeeac5f28c4c1","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow-night.css","hash":"51486c77fab70d7615e814787531d1a7db22a65a","modified":1673077187834},{"_id":"themes/coder/source/libs/highlight/styles/tomorrow.css","hash":"e98fd167fe9c5668165f28dd6c0ecb59b3293f67","modified":1673077187849},{"_id":"themes/coder/source/libs/highlight/styles/vs.css","hash":"7f91ad5a66ffbc8db2af542bd2db0e84bcf22587","modified":1673077187849},{"_id":"themes/coder/source/libs/highlight/styles/vs2015.css","hash":"9d3b1fab804f5447f9ee0d45c9079ae201f6c498","modified":1673077187849},{"_id":"themes/coder/source/libs/highlight/styles/xcode.css","hash":"113def1c0c88ef96df0722223b158cb068e32041","modified":1673077187849},{"_id":"themes/coder/source/libs/highlight/styles/xt256.css","hash":"30265e64715ab4c0ed868b39663f9418dbfbdc67","modified":1673077187849},{"_id":"themes/coder/source/libs/highlight/styles/zenburn.css","hash":"92941a6ae73b74f44ad7c559c5548c44073c644a","modified":1673077187849},{"_id":"themes/coder/source/libs/font-awesome/less/animated.less","hash":"472ec14f388c90a7201861e77faec317d038fd9c","modified":1673077187796},{"_id":"themes/coder/source/libs/font-awesome/less/bordered-pulled.less","hash":"66dc98ad0e4151e8938350f1ee3d0932348b37e8","modified":1673077187796},{"_id":"themes/coder/source/libs/font-awesome/less/core.less","hash":"5f436a1afd7f1de7dde20ed8c2fd84812b8acf12","modified":1673077187796},{"_id":"themes/coder/source/libs/font-awesome/less/fixed-width.less","hash":"a9552c8a91766a6d926c43c4c0f74acb62aaf719","modified":1673077187796},{"_id":"themes/coder/source/libs/font-awesome/less/font-awesome.less","hash":"06bd9cd5c5a646b1c631ba7b1edb77f60d84a91b","modified":1673077187796},{"_id":"themes/coder/source/libs/font-awesome/less/icons.less","hash":"e7492081853b880643f96e28659218b92c6e660a","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/less/larger.less","hash":"d9610d7f83b0aaf3fdd5fa048117bd8620adf346","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/less/list.less","hash":"2b203f3bacd6eaa58d0aa11efb9fb661b884eeb9","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/less/mixins.less","hash":"9b53403a944d93c5d7238c8942534fccf7957cff","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/less/path.less","hash":"fce36570fe54da40c1c61f20d62bf9751a81a27e","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/less/rotated-flipped.less","hash":"39ec6a3d98e5a55a2330935d139f95855c139dcf","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/less/screen-reader.less","hash":"3fa86249735534461a08afa86b5d7d774de7ef3f","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/less/stacked.less","hash":"ee10b7a0bc941f8d0bbd092d4178b9fae9f1661f","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/less/variables.less","hash":"e0dab04318d43211435c82989fbc05d0876b2708","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_animated.scss","hash":"c3d081abee1076d36a289afc6488e676bc59f023","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_bordered-pulled.scss","hash":"39353047bbcce4f3f706666df1547e64546932a0","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_core.scss","hash":"2dce8814642ef0ee86c65f3d29818c17fd8951f9","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_icons.scss","hash":"303a6e9e04e91a132612f094b34cccfc90c63bec","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_fixed-width.scss","hash":"f4af333866ff3c0da59493fc7077965c6e9d46ac","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_larger.scss","hash":"c5cf379c23025aa001f850bd560a87a92e4f711d","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_list.scss","hash":"8e9c5708bd91364a749f93555ba65af3c49ff1a6","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_mixins.scss","hash":"25b2361e654e3512c1f6024f3a8d593413611a58","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_path.scss","hash":"011339ce07bb12a5736edd7fdbed0b7f3c63bf72","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_rotated-flipped.scss","hash":"fd48d098af52ffff6f829e7f5a2250a9c3cfc87f","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_screen-reader.scss","hash":"ebe3fe40059e5a2a3a3c0c0f587a2e2bc23fd1b2","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_stacked.scss","hash":"c4fe90e7781e8b229bf2657312ba61ecf1026cab","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/_variables.scss","hash":"8e450f7064c308a124fe82ded322db59fbbeb59f","modified":1673077187802},{"_id":"themes/coder/source/libs/font-awesome/scss/font-awesome.scss","hash":"6bfc7e75fd344628b06d85f7fa4d48b106334584","modified":1673077187802},{"_id":"themes/coder/source/doc/hexocoder.png","hash":"ea153f39e3a46d4c592c5568f98a5dda518bc309","modified":1673077187749},{"_id":"themes/coder/source/img/black.jpg","hash":"0f672e41b6d73bc2da9a885d3283fe2eb13f507a","modified":1673077187765},{"_id":"themes/coder/source/doc/phone2.png","hash":"fc07230267ff31ad80f9f28df5cba5c7ab4f5658","modified":1673077187765},{"_id":"themes/coder/source/libs/jquery.min.js","hash":"44d980c8f4d21057018d80398d574fa72aea1bc7","modified":1673077187849},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1673077187796},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1673077187796},{"_id":"themes/coder/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1673077187780},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1673077187780},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1673077187796},{"_id":"themes/coder/source/doc/phone1.png","hash":"8d603fa0b6b451454865eb1c1e339c0f48ff1ca8","modified":1673077187765},{"_id":"themes/coder/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1673077187796},{"_id":"themes/coder/source/doc/light.png","hash":"806fdb2c3385249af7da6826ebca35f9f4d5f8b8","modified":1673077187765},{"_id":"themes/coder/source/doc/lady2.png","hash":"6559d5e81365503aa68bea61267d838377a4beee","modified":1673077187765},{"_id":"themes/coder/source/doc/gentle.png","hash":"7e78a423c871b9451229c707d44328a60ed26247","modified":1673077187749},{"_id":"themes/coder/source/doc/lady1.png","hash":"222d757c3655250ef64d36a5cb201c34209b46c5","modified":1673077187765},{"_id":"themes/coder/source/img/white.jpg","hash":"d24f1917a9ca3f3077b31c68e418cc7a3f3810fd","modified":1673077187780}],"Category":[],"Data":[],"Page":[{"title":"404","type":"404","layout":"404","_content":"","source":"404.md","raw":"---\ntitle: 404\ntype: \"404\"\nlayout: \"404\"\n---","date":"2023-01-07T07:45:20.493Z","updated":"2023-01-07T07:45:20.493Z","path":"404.html","_id":"clclndcbi00003sw055t02py7","comments":1,"content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"如何用SpringSecurity自定义验证码？","_content":"\n# 如何用SpringSecurity自定义验证码？\n\n## 导入依赖\n* 这里使用Google的验证码\n* 因为Google官方的maven坐标导入不了，使用的是镜像\n\n```xml\n<dependency>\n\t<groupId>com.github.penggle</groupId>\n\t<artifactId>kaptcha</artifactId>\n\t<version>2.3.2</version>\n</dependency>\n```\n\n## 设置图片验证码路径\n* 谷歌提供了一个默认的Servlet`com.google.code.kaptcha.servlet.KaptchaServlet`\n* 设置路径\n\n```java\n@Configuration\npublic class ServletConfig {\n    @Bean\n    public ServletRegistrationBean<KaptchaServlet> servletRegistrationBean() {\n        KaptchaServlet kaptchaServlet = new KaptchaServlet();\n        return new ServletRegistrationBean<>(kaptchaServlet,\"/captcha.jpg\");\n    }\n}\n```\n\n## 自定义filter\n* 自定义一个filter来校验验证码\n\n```java\n@Component\npublic class CheckCaptchaFilter extends OncePerRequestFilter {\n\n\t// 谷歌的默认验证码session key\n    private static final String CAPTCAH_SESSION_KEY = Constants.KAPTCHA_SESSION_KEY;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n        String realRequestUrl = request.getRequestURI().substring(request.getContextPath().length());\n        // 不是登录请求，放行\n        if (!\"/login\".equals(realRequestUrl)) {\n            filterChain.doFilter(request,response);\n            return;\n        }\n        // 获取默认的 captcha\n        String sessionCaptcha = (String) request.getSession().getAttribute(CAPTCAH_SESSION_KEY);\n        String captcha = request.getParameter(\"captcha\");\n        if (sessionCaptcha == null || captcha == null) {\n            response.sendRedirect(request.getContextPath() + \"/login.html\");\n            return;\n        }\n        if(sessionCaptcha.equalsIgnoreCase(captcha)) {\n            // 验证码正确，清除验证码session\n            request.getSession().removeAttribute(CAPTCAH_SESSION_KEY);\n            filterChain.doFilter(request,response);\n        } else {\n//            throw new RuntimeException(\"验证码错误\");\n            response.sendRedirect(request.getContextPath() + \"/login.html\");\n        }\n\n    }\n\n}\n\n```\n\n## Filter添加\n* 把自定义的filter添加到Security的过滤器链中\n* 应当在身份验证过滤器之前`UsernamePasswordAuthenticationFilter`\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    private CheckCaptchaFilter checkCaptchaFilter;\n\n     // 省略.....\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n       \n       // 省略.....\n\n        http.addFilterBefore(checkCaptchaFilter, UsernamePasswordAuthenticationFilter.class);\n    }\n}\n```","source":"_posts/如何用SpringSecurity自定义验证码？.md","raw":"---\ntitle: 如何用SpringSecurity自定义验证码？\n---\n\n# 如何用SpringSecurity自定义验证码？\n\n## 导入依赖\n* 这里使用Google的验证码\n* 因为Google官方的maven坐标导入不了，使用的是镜像\n\n```xml\n<dependency>\n\t<groupId>com.github.penggle</groupId>\n\t<artifactId>kaptcha</artifactId>\n\t<version>2.3.2</version>\n</dependency>\n```\n\n## 设置图片验证码路径\n* 谷歌提供了一个默认的Servlet`com.google.code.kaptcha.servlet.KaptchaServlet`\n* 设置路径\n\n```java\n@Configuration\npublic class ServletConfig {\n    @Bean\n    public ServletRegistrationBean<KaptchaServlet> servletRegistrationBean() {\n        KaptchaServlet kaptchaServlet = new KaptchaServlet();\n        return new ServletRegistrationBean<>(kaptchaServlet,\"/captcha.jpg\");\n    }\n}\n```\n\n## 自定义filter\n* 自定义一个filter来校验验证码\n\n```java\n@Component\npublic class CheckCaptchaFilter extends OncePerRequestFilter {\n\n\t// 谷歌的默认验证码session key\n    private static final String CAPTCAH_SESSION_KEY = Constants.KAPTCHA_SESSION_KEY;\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n        String realRequestUrl = request.getRequestURI().substring(request.getContextPath().length());\n        // 不是登录请求，放行\n        if (!\"/login\".equals(realRequestUrl)) {\n            filterChain.doFilter(request,response);\n            return;\n        }\n        // 获取默认的 captcha\n        String sessionCaptcha = (String) request.getSession().getAttribute(CAPTCAH_SESSION_KEY);\n        String captcha = request.getParameter(\"captcha\");\n        if (sessionCaptcha == null || captcha == null) {\n            response.sendRedirect(request.getContextPath() + \"/login.html\");\n            return;\n        }\n        if(sessionCaptcha.equalsIgnoreCase(captcha)) {\n            // 验证码正确，清除验证码session\n            request.getSession().removeAttribute(CAPTCAH_SESSION_KEY);\n            filterChain.doFilter(request,response);\n        } else {\n//            throw new RuntimeException(\"验证码错误\");\n            response.sendRedirect(request.getContextPath() + \"/login.html\");\n        }\n\n    }\n\n}\n\n```\n\n## Filter添加\n* 把自定义的filter添加到Security的过滤器链中\n* 应当在身份验证过滤器之前`UsernamePasswordAuthenticationFilter`\n\n```java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    private CheckCaptchaFilter checkCaptchaFilter;\n\n     // 省略.....\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n       \n       // 省略.....\n\n        http.addFilterBefore(checkCaptchaFilter, UsernamePasswordAuthenticationFilter.class);\n    }\n}\n```","slug":"如何用SpringSecurity自定义验证码？","published":1,"date":"2023-01-07T08:00:06.960Z","updated":"2023-01-07T08:08:36.717Z","_id":"clclo130s0000usw05igc9qaw","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"如何用SpringSecurity自定义验证码？\"><a href=\"#如何用SpringSecurity自定义验证码？\" class=\"headerlink\" title=\"如何用SpringSecurity自定义验证码？\"></a>如何用SpringSecurity自定义验证码？</h1><h2 id=\"导入依赖\"><a href=\"#导入依赖\" class=\"headerlink\" title=\"导入依赖\"></a>导入依赖</h2><ul>\n<li>这里使用Google的验证码</li>\n<li>因为Google官方的maven坐标导入不了，使用的是镜像</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.penggle<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>kaptcha<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置图片验证码路径\"><a href=\"#设置图片验证码路径\" class=\"headerlink\" title=\"设置图片验证码路径\"></a>设置图片验证码路径</h2><ul>\n<li>谷歌提供了一个默认的Servlet<code>com.google.code.kaptcha.servlet.KaptchaServlet</code></li>\n<li>设置路径</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServletConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ServletRegistrationBean&lt;KaptchaServlet&gt; <span class=\"title function_\">servletRegistrationBean</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">KaptchaServlet</span> <span class=\"variable\">kaptchaServlet</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">KaptchaServlet</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServletRegistrationBean</span>&lt;&gt;(kaptchaServlet,<span class=\"string\">&quot;/captcha.jpg&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义filter\"><a href=\"#自定义filter\" class=\"headerlink\" title=\"自定义filter\"></a>自定义filter</h2><ul>\n<li>自定义一个filter来校验验证码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CheckCaptchaFilter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 谷歌的默认验证码session key</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">CAPTCAH_SESSION_KEY</span> <span class=\"operator\">=</span> Constants.KAPTCHA_SESSION_KEY;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">realRequestUrl</span> <span class=\"operator\">=</span> request.getRequestURI().substring(request.getContextPath().length());</span><br><span class=\"line\">        <span class=\"comment\">// 不是登录请求，放行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"string\">&quot;/login&quot;</span>.equals(realRequestUrl)) &#123;</span><br><span class=\"line\">            filterChain.doFilter(request,response);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 获取默认的 captcha</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sessionCaptcha</span> <span class=\"operator\">=</span> (String) request.getSession().getAttribute(CAPTCAH_SESSION_KEY);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">captcha</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;captcha&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sessionCaptcha == <span class=\"literal\">null</span> || captcha == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            response.sendRedirect(request.getContextPath() + <span class=\"string\">&quot;/login.html&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sessionCaptcha.equalsIgnoreCase(captcha)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 验证码正确，清除验证码session</span></span><br><span class=\"line\">            request.getSession().removeAttribute(CAPTCAH_SESSION_KEY);</span><br><span class=\"line\">            filterChain.doFilter(request,response);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//            throw new RuntimeException(&quot;验证码错误&quot;);</span></span><br><span class=\"line\">            response.sendRedirect(request.getContextPath() + <span class=\"string\">&quot;/login.html&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Filter添加\"><a href=\"#Filter添加\" class=\"headerlink\" title=\"Filter添加\"></a>Filter添加</h2><ul>\n<li>把自定义的filter添加到Security的过滤器链中</li>\n<li>应当在身份验证过滤器之前<code>UsernamePasswordAuthenticationFilter</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> CheckCaptchaFilter checkCaptchaFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">// 省略.....</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\">// 省略.....</span></span><br><span class=\"line\"></span><br><span class=\"line\">        http.addFilterBefore(checkCaptchaFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何用SpringSecurity自定义验证码？\"><a href=\"#如何用SpringSecurity自定义验证码？\" class=\"headerlink\" title=\"如何用SpringSecurity自定义验证码？\"></a>如何用SpringSecurity自定义验证码？</h1><h2 id=\"导入依赖\"><a href=\"#导入依赖\" class=\"headerlink\" title=\"导入依赖\"></a>导入依赖</h2><ul>\n<li>这里使用Google的验证码</li>\n<li>因为Google官方的maven坐标导入不了，使用的是镜像</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.penggle<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>kaptcha<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置图片验证码路径\"><a href=\"#设置图片验证码路径\" class=\"headerlink\" title=\"设置图片验证码路径\"></a>设置图片验证码路径</h2><ul>\n<li>谷歌提供了一个默认的Servlet<code>com.google.code.kaptcha.servlet.KaptchaServlet</code></li>\n<li>设置路径</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServletConfig</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ServletRegistrationBean&lt;KaptchaServlet&gt; <span class=\"title function_\">servletRegistrationBean</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">KaptchaServlet</span> <span class=\"variable\">kaptchaServlet</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">KaptchaServlet</span>();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServletRegistrationBean</span>&lt;&gt;(kaptchaServlet,<span class=\"string\">&quot;/captcha.jpg&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自定义filter\"><a href=\"#自定义filter\" class=\"headerlink\" title=\"自定义filter\"></a>自定义filter</h2><ul>\n<li>自定义一个filter来校验验证码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CheckCaptchaFilter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 谷歌的默认验证码session key</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">CAPTCAH_SESSION_KEY</span> <span class=\"operator\">=</span> Constants.KAPTCHA_SESSION_KEY;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">realRequestUrl</span> <span class=\"operator\">=</span> request.getRequestURI().substring(request.getContextPath().length());</span><br><span class=\"line\">        <span class=\"comment\">// 不是登录请求，放行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"string\">&quot;/login&quot;</span>.equals(realRequestUrl)) &#123;</span><br><span class=\"line\">            filterChain.doFilter(request,response);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 获取默认的 captcha</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sessionCaptcha</span> <span class=\"operator\">=</span> (String) request.getSession().getAttribute(CAPTCAH_SESSION_KEY);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">captcha</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;captcha&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sessionCaptcha == <span class=\"literal\">null</span> || captcha == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            response.sendRedirect(request.getContextPath() + <span class=\"string\">&quot;/login.html&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sessionCaptcha.equalsIgnoreCase(captcha)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 验证码正确，清除验证码session</span></span><br><span class=\"line\">            request.getSession().removeAttribute(CAPTCAH_SESSION_KEY);</span><br><span class=\"line\">            filterChain.doFilter(request,response);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//            throw new RuntimeException(&quot;验证码错误&quot;);</span></span><br><span class=\"line\">            response.sendRedirect(request.getContextPath() + <span class=\"string\">&quot;/login.html&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Filter添加\"><a href=\"#Filter添加\" class=\"headerlink\" title=\"Filter添加\"></a>Filter添加</h2><ul>\n<li>把自定义的filter添加到Security的过滤器链中</li>\n<li>应当在身份验证过滤器之前<code>UsernamePasswordAuthenticationFilter</code></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SecurityConfig</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> CheckCaptchaFilter checkCaptchaFilter;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"comment\">// 省略.....</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(HttpSecurity http)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\">// 省略.....</span></span><br><span class=\"line\"></span><br><span class=\"line\">        http.addFilterBefore(checkCaptchaFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"控制台输出彩色文字","_content":"\n# 控制台输出彩色文字\n\n## 1. Java\n\n### 1.1 转义\n\n* 在IDEA控制台、linux环境下生效，windows的cmd不生效\n\n```java\npublic void test05() {\n    System.out.println(\"\\033[31;3m微信到账：1亿元\\033[0m\");\n}\n```\n```\n字体颜色： 黄色：33  绿色：32  青色：36  红色：31  黑色：30  蓝色：34  白色：37\n\n背景颜色： 黄色：43  绿色：42  青色：46  红色：41  黑色：40  蓝色：44  白色：47\n\n字体效果：删除线：9  下划线：4  斜体：3  默认：0  反显：7 或 8  粗体：1\n\n温馨提示：Java控制台无法输出背景色！\n\nJava彩色字体格式：\"\\033[你的字体颜色;字体效果m你的字符（输出的字符）\\033[0m\"\n```\n\n### 1.2 jansi\n```xml\n<dependency>\n    <groupId>org.fusesource.jansi</groupId>\n    <artifactId>jansi</artifactId>\n    <version>2.4.0</version>\n</dependency>\n```\n\n* 在windows和linux环境生效，在idea不生效\n* 不执行`AnsiConsole.systemInstall();`将在idea生效，但在windows不生效\n\n```java\npublic void test05() {\n  \tAnsiConsole.systemInstall();\n    Ansi content = ansi().eraseScreen().fg(Ansi.Color.GREEN).a(\"Hello\").reset();\n    System.out.println(content);\n    AnsiConsole.systemUninstall();\n}\n```\n\n* 加入判断\n\n```java\npublic void test05() {\n    boolean runInIDEA = CheckRunInIDEA();\n    if (!runInIDEA) {\n        AnsiConsole.systemInstall();\n    }\n    Ansi content = ansi().eraseScreen().fg(Ansi.Color.GREEN).a(\"Hello\").reset();\n    System.out.println(content);\n    if (!runInIDEA) {\n        AnsiConsole.systemUninstall();\n    }\n}\n\nprivate static boolean CheckRunInIDEA() {\n    try {\n        Class.forName(\"com.intellij.rt.execution.application.AppMainV2\");\n        return true;\n    } catch (ClassNotFoundException ignored) {\n        return false;\n    }\n}\n```\n\n## 2. C\n* 上面的转义在C语言同样生效，同样的在windows的cmd不生效\n* 用`windows.h`\n* <https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin>\n* <https://baike.baidu.com/item/GetStdHandle/6909878?fr=aladdin>\n* <https://www.jb51.net/article/207562.htm>\n\n```c\n#include <stdio.h>\n#include <Windows.h>\nint PrintColorText(const char *Text, WORD Attributes) {\n    int\tnRet = 0;\n    //注意：GetStdHandle()返回的不是一个duplicate handle，而是真正的输出缓冲区的句柄！\n    //所以不要试图关闭它，否则就再也不能向缓冲区输出任何东西了。\n    HANDLE\thOut = GetStdHandle(STD_OUTPUT_HANDLE);\n    if (hOut != INVALID_HANDLE_VALUE)\t{\n        if (SetConsoleTextAttribute(hOut, Attributes))\n        {\n            nRet = printf(Text);\n        }\n        //恢复白色文字，黑色背景\n        SetConsoleTextAttribute(hOut, FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_RED);\n    }\n    return nRet;\n}\nint main()\n{\n    // 黄色文字，无背景\n    PrintColorText(\"Hello, world.\\n\", FOREGROUND_RED | FOREGROUND_GREEN);\n    printf(\"Hello, world.\\n\");\n    return 0;\n}\n```\n","source":"_posts/控制台输出彩色文字.md","raw":"---\ntitle: 控制台输出彩色文字\n---\n\n# 控制台输出彩色文字\n\n## 1. Java\n\n### 1.1 转义\n\n* 在IDEA控制台、linux环境下生效，windows的cmd不生效\n\n```java\npublic void test05() {\n    System.out.println(\"\\033[31;3m微信到账：1亿元\\033[0m\");\n}\n```\n```\n字体颜色： 黄色：33  绿色：32  青色：36  红色：31  黑色：30  蓝色：34  白色：37\n\n背景颜色： 黄色：43  绿色：42  青色：46  红色：41  黑色：40  蓝色：44  白色：47\n\n字体效果：删除线：9  下划线：4  斜体：3  默认：0  反显：7 或 8  粗体：1\n\n温馨提示：Java控制台无法输出背景色！\n\nJava彩色字体格式：\"\\033[你的字体颜色;字体效果m你的字符（输出的字符）\\033[0m\"\n```\n\n### 1.2 jansi\n```xml\n<dependency>\n    <groupId>org.fusesource.jansi</groupId>\n    <artifactId>jansi</artifactId>\n    <version>2.4.0</version>\n</dependency>\n```\n\n* 在windows和linux环境生效，在idea不生效\n* 不执行`AnsiConsole.systemInstall();`将在idea生效，但在windows不生效\n\n```java\npublic void test05() {\n  \tAnsiConsole.systemInstall();\n    Ansi content = ansi().eraseScreen().fg(Ansi.Color.GREEN).a(\"Hello\").reset();\n    System.out.println(content);\n    AnsiConsole.systemUninstall();\n}\n```\n\n* 加入判断\n\n```java\npublic void test05() {\n    boolean runInIDEA = CheckRunInIDEA();\n    if (!runInIDEA) {\n        AnsiConsole.systemInstall();\n    }\n    Ansi content = ansi().eraseScreen().fg(Ansi.Color.GREEN).a(\"Hello\").reset();\n    System.out.println(content);\n    if (!runInIDEA) {\n        AnsiConsole.systemUninstall();\n    }\n}\n\nprivate static boolean CheckRunInIDEA() {\n    try {\n        Class.forName(\"com.intellij.rt.execution.application.AppMainV2\");\n        return true;\n    } catch (ClassNotFoundException ignored) {\n        return false;\n    }\n}\n```\n\n## 2. C\n* 上面的转义在C语言同样生效，同样的在windows的cmd不生效\n* 用`windows.h`\n* <https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin>\n* <https://baike.baidu.com/item/GetStdHandle/6909878?fr=aladdin>\n* <https://www.jb51.net/article/207562.htm>\n\n```c\n#include <stdio.h>\n#include <Windows.h>\nint PrintColorText(const char *Text, WORD Attributes) {\n    int\tnRet = 0;\n    //注意：GetStdHandle()返回的不是一个duplicate handle，而是真正的输出缓冲区的句柄！\n    //所以不要试图关闭它，否则就再也不能向缓冲区输出任何东西了。\n    HANDLE\thOut = GetStdHandle(STD_OUTPUT_HANDLE);\n    if (hOut != INVALID_HANDLE_VALUE)\t{\n        if (SetConsoleTextAttribute(hOut, Attributes))\n        {\n            nRet = printf(Text);\n        }\n        //恢复白色文字，黑色背景\n        SetConsoleTextAttribute(hOut, FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_RED);\n    }\n    return nRet;\n}\nint main()\n{\n    // 黄色文字，无背景\n    PrintColorText(\"Hello, world.\\n\", FOREGROUND_RED | FOREGROUND_GREEN);\n    printf(\"Hello, world.\\n\");\n    return 0;\n}\n```\n","slug":"控制台输出彩色文字","published":1,"date":"2023-01-07T08:00:06.859Z","updated":"2023-01-07T08:08:05.383Z","_id":"clclo130x0001usw06j3q2byr","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"控制台输出彩色文字\"><a href=\"#控制台输出彩色文字\" class=\"headerlink\" title=\"控制台输出彩色文字\"></a>控制台输出彩色文字</h1><h2 id=\"1-Java\"><a href=\"#1-Java\" class=\"headerlink\" title=\"1. Java\"></a>1. Java</h2><h3 id=\"1-1-转义\"><a href=\"#1-1-转义\" class=\"headerlink\" title=\"1.1 转义\"></a>1.1 转义</h3><ul>\n<li>在IDEA控制台、linux环境下生效，windows的cmd不生效</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test05</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;\\033[31;3m微信到账：1亿元\\033[0m&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字体颜色： 黄色：33  绿色：32  青色：36  红色：31  黑色：30  蓝色：34  白色：37</span><br><span class=\"line\"></span><br><span class=\"line\">背景颜色： 黄色：43  绿色：42  青色：46  红色：41  黑色：40  蓝色：44  白色：47</span><br><span class=\"line\"></span><br><span class=\"line\">字体效果：删除线：9  下划线：4  斜体：3  默认：0  反显：7 或 8  粗体：1</span><br><span class=\"line\"></span><br><span class=\"line\">温馨提示：Java控制台无法输出背景色！</span><br><span class=\"line\"></span><br><span class=\"line\">Java彩色字体格式：&quot;\\033[你的字体颜色;字体效果m你的字符（输出的字符）\\033[0m&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-jansi\"><a href=\"#1-2-jansi\" class=\"headerlink\" title=\"1.2 jansi\"></a>1.2 jansi</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.fusesource.jansi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jansi<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在windows和linux环境生效，在idea不生效</li>\n<li>不执行<code>AnsiConsole.systemInstall();</code>将在idea生效，但在windows不生效</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test05</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  \tAnsiConsole.systemInstall();</span><br><span class=\"line\">    <span class=\"type\">Ansi</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> ansi().eraseScreen().fg(Ansi.Color.GREEN).a(<span class=\"string\">&quot;Hello&quot;</span>).reset();</span><br><span class=\"line\">    System.out.println(content);</span><br><span class=\"line\">    AnsiConsole.systemUninstall();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>加入判断</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test05</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">runInIDEA</span> <span class=\"operator\">=</span> CheckRunInIDEA();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!runInIDEA) &#123;</span><br><span class=\"line\">        AnsiConsole.systemInstall();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">Ansi</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> ansi().eraseScreen().fg(Ansi.Color.GREEN).a(<span class=\"string\">&quot;Hello&quot;</span>).reset();</span><br><span class=\"line\">    System.out.println(content);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!runInIDEA) &#123;</span><br><span class=\"line\">        AnsiConsole.systemUninstall();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">CheckRunInIDEA</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.intellij.rt.execution.application.AppMainV2&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException ignored) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-C\"><a href=\"#2-C\" class=\"headerlink\" title=\"2. C\"></a>2. C</h2><ul>\n<li>上面的转义在C语言同样生效，同样的在windows的cmd不生效</li>\n<li>用<code>windows.h</code></li>\n<li><a href=\"https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin\">https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin</a></li>\n<li><a href=\"https://baike.baidu.com/item/GetStdHandle/6909878?fr=aladdin\">https://baike.baidu.com/item/GetStdHandle/6909878?fr=aladdin</a></li>\n<li><a href=\"https://www.jb51.net/article/207562.htm\">https://www.jb51.net/article/207562.htm</a></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">PrintColorText</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *Text, WORD Attributes)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span>\tnRet = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//注意：GetStdHandle()返回的不是一个duplicate handle，而是真正的输出缓冲区的句柄！</span></span><br><span class=\"line\">    <span class=\"comment\">//所以不要试图关闭它，否则就再也不能向缓冲区输出任何东西了。</span></span><br><span class=\"line\">    HANDLE\thOut = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (hOut != INVALID_HANDLE_VALUE)\t&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (SetConsoleTextAttribute(hOut, Attributes))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            nRet = <span class=\"built_in\">printf</span>(Text);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//恢复白色文字，黑色背景</span></span><br><span class=\"line\">        SetConsoleTextAttribute(hOut, FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_RED);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nRet;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 黄色文字，无背景</span></span><br><span class=\"line\">    PrintColorText(<span class=\"string\">&quot;Hello, world.\\n&quot;</span>, FOREGROUND_RED | FOREGROUND_GREEN);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello, world.\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"控制台输出彩色文字\"><a href=\"#控制台输出彩色文字\" class=\"headerlink\" title=\"控制台输出彩色文字\"></a>控制台输出彩色文字</h1><h2 id=\"1-Java\"><a href=\"#1-Java\" class=\"headerlink\" title=\"1. Java\"></a>1. Java</h2><h3 id=\"1-1-转义\"><a href=\"#1-1-转义\" class=\"headerlink\" title=\"1.1 转义\"></a>1.1 转义</h3><ul>\n<li>在IDEA控制台、linux环境下生效，windows的cmd不生效</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test05</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;\\033[31;3m微信到账：1亿元\\033[0m&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字体颜色： 黄色：33  绿色：32  青色：36  红色：31  黑色：30  蓝色：34  白色：37</span><br><span class=\"line\"></span><br><span class=\"line\">背景颜色： 黄色：43  绿色：42  青色：46  红色：41  黑色：40  蓝色：44  白色：47</span><br><span class=\"line\"></span><br><span class=\"line\">字体效果：删除线：9  下划线：4  斜体：3  默认：0  反显：7 或 8  粗体：1</span><br><span class=\"line\"></span><br><span class=\"line\">温馨提示：Java控制台无法输出背景色！</span><br><span class=\"line\"></span><br><span class=\"line\">Java彩色字体格式：&quot;\\033[你的字体颜色;字体效果m你的字符（输出的字符）\\033[0m&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-jansi\"><a href=\"#1-2-jansi\" class=\"headerlink\" title=\"1.2 jansi\"></a>1.2 jansi</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.fusesource.jansi<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jansi<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在windows和linux环境生效，在idea不生效</li>\n<li>不执行<code>AnsiConsole.systemInstall();</code>将在idea生效，但在windows不生效</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test05</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  \tAnsiConsole.systemInstall();</span><br><span class=\"line\">    <span class=\"type\">Ansi</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> ansi().eraseScreen().fg(Ansi.Color.GREEN).a(<span class=\"string\">&quot;Hello&quot;</span>).reset();</span><br><span class=\"line\">    System.out.println(content);</span><br><span class=\"line\">    AnsiConsole.systemUninstall();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>加入判断</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test05</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">runInIDEA</span> <span class=\"operator\">=</span> CheckRunInIDEA();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!runInIDEA) &#123;</span><br><span class=\"line\">        AnsiConsole.systemInstall();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">Ansi</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> ansi().eraseScreen().fg(Ansi.Color.GREEN).a(<span class=\"string\">&quot;Hello&quot;</span>).reset();</span><br><span class=\"line\">    System.out.println(content);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!runInIDEA) &#123;</span><br><span class=\"line\">        AnsiConsole.systemUninstall();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">boolean</span> <span class=\"title function_\">CheckRunInIDEA</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Class.forName(<span class=\"string\">&quot;com.intellij.rt.execution.application.AppMainV2&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException ignored) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-C\"><a href=\"#2-C\" class=\"headerlink\" title=\"2. C\"></a>2. C</h2><ul>\n<li>上面的转义在C语言同样生效，同样的在windows的cmd不生效</li>\n<li>用<code>windows.h</code></li>\n<li><a href=\"https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin\">https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin</a></li>\n<li><a href=\"https://baike.baidu.com/item/GetStdHandle/6909878?fr=aladdin\">https://baike.baidu.com/item/GetStdHandle/6909878?fr=aladdin</a></li>\n<li><a href=\"https://www.jb51.net/article/207562.htm\">https://www.jb51.net/article/207562.htm</a></li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;Windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">PrintColorText</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *Text, WORD Attributes)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span>\tnRet = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//注意：GetStdHandle()返回的不是一个duplicate handle，而是真正的输出缓冲区的句柄！</span></span><br><span class=\"line\">    <span class=\"comment\">//所以不要试图关闭它，否则就再也不能向缓冲区输出任何东西了。</span></span><br><span class=\"line\">    HANDLE\thOut = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (hOut != INVALID_HANDLE_VALUE)\t&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (SetConsoleTextAttribute(hOut, Attributes))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            nRet = <span class=\"built_in\">printf</span>(Text);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//恢复白色文字，黑色背景</span></span><br><span class=\"line\">        SetConsoleTextAttribute(hOut, FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_RED);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nRet;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 黄色文字，无背景</span></span><br><span class=\"line\">    PrintColorText(<span class=\"string\">&quot;Hello, world.\\n&quot;</span>, FOREGROUND_RED | FOREGROUND_GREEN);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello, world.\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"前后端分离，简单JWT登录实现","_content":"\n# 前后端分离，简单JWT登录实现\n\n[toc]\n\n## JWT登录流程\n![](https://img-blog.csdnimg.cn/img_convert/900b3e81f832b2f08c2e8aabb540536a.png)\n\n* 前端vue+axios+router\n* 后端springboot+mybatisplus\n\n## 1. 用户认证处理\n\n```java\n@Service\n@Transactional\npublic class AdminServiceImpl implements AdminService {\n\n    @Autowired\n    private AdminMapper adminMapper;\n\n    @Override\n    public ResponseResult adminLogin(Admin loginAdmin) {\n    \t// 从数据库查出用户信息\n        LambdaQueryWrapper<Admin> queryWrapper = new LambdaQueryWrapper<>();\n        queryWrapper.eq(Admin::getUsername,loginAdmin.getUsername());\n        Admin admin = adminMapper.selectOne(queryWrapper);\n        // 用户不存在，直接认证失败\n        if (admin == null) {\n            return new ResponseResult(ResponseResult.FORBIDDEN,\"登录失败\");\n        }\n        // 用户名与密码校验\n        if (admin.getUsername().equals(loginAdmin.getUsername())\n                && admin.getPassword().equals(loginAdmin.getPassword())) {\n            // 校验成功，生成jwt返回数据\n            String jwt = JwtUtil.createJWT(String.valueOf(loginAdmin.getId()), 1000L * 60 * 60 * 24);\n            Map<String,String> map = new HashMap<>();\n            map.put(\"token\",jwt);\n            return new ResponseResult(ResponseResult.OK,\"登录成功\",map);\n        }\n        // 密码校验失败\n        return new ResponseResult(ResponseResult.FORBIDDEN,\"登录失败\");\n    }\n}\n```\n## 2. 前端登录\n```js\nlogin({ username: this.username, password: this.password }).then(response => {\n      let data = response.data;\n      // 登录成功\n      if (data.code == 200) {\n        message.success(data.msg)\n        // 保存token到localstorage\n        window.localStorage.setItem(\"token\", data.data.token)\n       \t// 用户信息保存\n        window.localStorage.setItem(\"username\", this.username)\n        // 跳转到主页\n        this.$router.push(\"/admin\");\n      } else {\n        message.error(data.msg)\n      }\n    }\n  );\n```\n\n## 3. 前端请求处理\n\n* 前端每次发出请求时，请求头要携带之前**登录成功**保存的token\n* 这里用axios拦截器示例\n\n```js\nconst http = axios.create({\n    baseURL: 'http://localhost:8080',\n    // timeout: 4000\n})\n\n// 配置请求拦截器\nhttp.interceptors.request.use(\n    config => {\n        config.headers = {\n            // 每次请求前带上Token\n            token: window.localStorage.getItem(\"token\")\n        }\n        return config;\n    },\n    err => Promise.reject(err)\n);\n\n// 配置响应拦截器，主要做登录过期的处理，后端在解析token失效时返回401\nhttp.interceptors.response.use(res => {\n    // 登录过期，跳转到登录页面\n    if (res.data.code == 401) {\n        message.error(res.data.msg)\n        router.push(\"/admin/login\")\n    }\n    return res;\n}, err => {\n    return Promise.reject(err)\n});\n```\n\n## 4. 后端请求处理\n* 每次接收到请求，要校验token是否合法\n* 这里用拦截器示例\n\n```java\n\npublic class RequestCheckTokenInterceptor implements HandlerInterceptor {\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        response.setContentType(\"text/html; charset=utf-8\");\n\t\t// OPTIONS为预检请求，直接放行\n        if (\"OPTIONS\".equals(request.getMethod().toUpperCase())) {\n            return true;\n        }\n\t\t// 获取token\n        String token = request.getHeader(\"token\");\n        // 如果没有token直接拦截，返回错误信息\n        if (token == null) {\n        \t// 这里直接用的jackson\n            ObjectMapper mapper = new ObjectMapper();\n            String result = mapper.writeValueAsString(new ResponseResult(ResponseResult.UNAUTHORIZED, \"登录失效\"));\n            response.getWriter().print(result);\n            return false;\n        }\n        try {\n            Claims claims = JwtUtil.parseJWT(token);\n        } catch (Exception e) {\n        \t// token解析失败\n            e.printStackTrace();\n            // token不合法 拦截，返回错误信息\n            ObjectMapper mapper = new ObjectMapper();\n            String result = mapper.writeValueAsString(new ResponseResult(ResponseResult.UNAUTHORIZED, \"登录失效\"));\n            response.getWriter().print(result);\n            return false;\n        }\n        return true;\n    }\n    \n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n    }\n    \n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n    }\n}\n```\n\n## 5. 前端页面跳转处理\n\n* 前端在跳转页面前，应当也要校验登录状态信息\n* 这里用vue router的全局路由守卫示例\n\n```js\n// 全局路由导航守卫\nrouter.beforeEach((to, from) => {\n    // console.log(to); // 去哪儿\n    // console.log(from); // 从哪儿来\n    if (to.meta.requiresAuth == true) {\n        let token = getToken()\n        if (token == null || token == \"\") {\n            message.warning(\"登录失效\")\n            router.push(\"/admin/login\")\n            return false;\n        }\n        // 校验Token合法性\n        checkLoginState().then(response => {\n            let data = response.date\n            if (data.code == 200) {\n                return true\n            } else {\n                message.warning(data.msg)\n                router.push(\"/admin/login\")\n                return false;\n            }\n        })\n\n    }\n    return true;\n});\n```\n\n## 6. 退出登录\n\n* 可以看这篇文章：<https://blog.csdn.net/a1098766713/article/details/102914354>\n* 这里使用最简单的方法\n\n```js\nlogout() {\n   // 无为而治\n   window.localStorage.removeItem(\"token\")\n   window.localStorage.removeItem(\"username\")\n   this.$router.push(\"/admin/login\");\n },\n```\n\n## 7. 本文关联代码\n### 7.1 前端\n* request.js\n\n```js\nimport axios from 'axios'\n\nimport { getToken, message } from '@/utils'\n\nimport router from '@/router'\n\nconst http = axios.create({\n    baseURL: 'http://localhost:8080',\n    // timeout: 4000\n})\n\n// 配置请求拦截器\nhttp.interceptors.request.use(\n    config => {\n        config.headers = {\n            // 每次请求前带上Token\n            token: getToken()\n        }\n        return config;\n    },\n    err => Promise.reject(err)\n);\n\n// 配置响应拦截器\nhttp.interceptors.response.use(res => {\n    // console.log(\"响应拦截\");\n    // 登录过期\n    if (res.data.code == 401) {\n        message.error(res.data.msg)\n        router.push(\"/admin/login\")\n    }\n    return res;\n}, err => {\n    return Promise.reject(err)\n});\n\nexport const get = (url, param) => {\n    return http.get(url, param)\n}\nexport const post = (url, param) => {\n    return http.post(url, param)\n}\nexport const put = (url, param) => {\n    return http.put(url, param)\n}\nexport const del = (url, param) => {\n    return http.delete(url, param)\n}\n```\n\n* api.js\n\n```js\nimport axios from 'axios'\nimport { post,get,put,del } from './request'\n\n// 后台管理登录\nexport const login = param => post(\"/admin/login\",param)\n\n// 校验登录状态\nexport const checkLoginState = () => get(\"/admin/checkLoginState\")\n```\n\n* utils.js\n\n```js\nimport { ElMessage } from \"element-plus\";\n\nexport const message = {\n    error: msg => {\n        ElMessage({\n            showClose: true,\n            message: msg,\n            type: \"error\",\n        });\n    },\n    success: msg => {\n        ElMessage({\n            showClose: true,\n            message: msg,\n            type: \"success\",\n        });\n    },\n    warning: msg => {\n        ElMessage({\n            showClose: true,\n            message: msg,\n            type: \"warning\",\n        });\n    }\n}\n```\n\n### 7.2 后端\n\n* ResponseResult.java\n\n```java\npublic class ResponseResult {\n\n    /**\n     * 表明该请求被成功地完成，所请求的资源发送到客户端\n     */\n    public static final Integer OK = 200;\n    /**\n     * 请求要求身份验证，常见对于需要登录而用户未登录的情况。\n     */\n    public static final Integer UNAUTHORIZED = 401;\n    /**\n     * 服务器拒绝请求，常见于机密信息或复制其它登录用户链接访问服务器的情况。\n     */\n    public static final Integer FORBIDDEN = 403;\n    /**\n     * 服务器无法取得所请求的网页，请求资源不存在。\n     */\n    public static final Integer NOT_FOUND = 404;\n    /**\n     * 服务器内部错误。\n     */\n    public static final Integer SERVER_ERROR = 500;\n\n    private Integer code;\n    private String msg = \"\";\n    private Object data = new int[0];\n\n    public ResponseResult() {\n    }\n\n    public ResponseResult(Integer code) {\n        this.code = code;\n    }\n\n    public ResponseResult(Integer code, String msg) {\n        this.code = code;\n        this.msg = msg;\n    }\n\n    public ResponseResult(Integer code, Object data) {\n        this.code = code;\n        this.data = data;\n    }\n\n    public ResponseResult(Integer code, String msg, Object data) {\n        this.code = code;\n        this.msg = msg;\n        this.data = data;\n    }\n\n\n    public Integer getCode() {\n        return code;\n    }\n\n    public void setCode(Integer code) {\n        this.code = code;\n    }\n\n    public String getMsg() {\n        return msg;\n    }\n\n    public void setMsg(String msg) {\n        this.msg = msg;\n    }\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n\n    @Override\n    public String toString() {\n        return \"Result{\" +\n                \"code=\" + code +\n                \", msg='\" + msg + '\\'' +\n                \", data=\" + data +\n                '}';\n    }\n}\n```\n\n* JwtUtil.java\n* 依赖于jjwt\n\n```java\n/**\n * JWT工具类\n */\npublic class JwtUtil {\n\n    //有效期为\n    public static final Long JWT_TTL = 60 * 60 *1000L;// 60 * 60 *1000  一个小时\n    //设置秘钥明文\n    public static final String JWT_KEY = \"shfciksadasfa21435ggdlhvjanv\";\n\n    public static String getUUID(){\n        return UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n    }\n\n    /**\n     * 生成jtw\n     * @param subject token中要存放的数据（json格式）\n     * @return\n     */\n    public static String createJWT(String subject) {\n        JwtBuilder builder = getJwtBuilder(subject, null, getUUID());// 设置过期时间\n        return builder.compact();\n    }\n\n    /**\n     * 生成jtw\n     * @param subject token中要存放的数据（json格式）\n     * @param ttlMillis token超时时间\n     * @return\n     */\n    public static String createJWT(String subject, Long ttlMillis) {\n        JwtBuilder builder = getJwtBuilder(subject, ttlMillis, getUUID());// 设置过期时间\n        return builder.compact();\n    }\n\n    /**\n     * 创建token\n     * @param id\n     * @param subject\n     * @param ttlMillis\n     * @return\n     */\n    public static String createJWT(String id, String subject, Long ttlMillis) {\n        JwtBuilder builder = getJwtBuilder(subject, ttlMillis, id);// 设置过期时间\n        return builder.compact();\n    }\n\n\n    private static JwtBuilder getJwtBuilder(String subject, Long ttlMillis, String uuid) {\n        SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.HS256;\n        SecretKey secretKey = generalKey();\n        long nowMillis = System.currentTimeMillis();\n        Date now = new Date(nowMillis);\n        if(ttlMillis==null){\n            ttlMillis=JwtUtil.JWT_TTL;\n        }\n        long expMillis = nowMillis + ttlMillis;\n        Date expDate = new Date(expMillis);\n        return Jwts.builder()\n                .setId(uuid)              //唯一的ID\n                .setSubject(subject)   // 主题  可以是JSON数据\n                .setIssuer(\"huanyv\")     // 签发者\n                .setIssuedAt(now)      // 签发时间\n                .signWith(signatureAlgorithm, secretKey) //使用HS256对称加密算法签名, 第二个参数为秘钥\n                .setExpiration(expDate);\n    }\n\n\n\n    /**\n     * 生成加密后的秘钥 secretKey\n     * @return\n     */\n    public static SecretKey generalKey() {\n        byte[] encodedKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);\n        SecretKey key = new SecretKeySpec(encodedKey, 0, encodedKey.length, \"AES\");\n        return key;\n    }\n\n    /**\n     * 解析\n     *\n     * @param jwt\n     * @return\n     * @throws Exception\n     */\n    public static Claims parseJWT(String jwt) throws Exception {\n        SecretKey secretKey = generalKey();\n        return Jwts.parser()\n                .setSigningKey(secretKey)\n                .parseClaimsJws(jwt)\n                .getBody();\n    }\n}\n```\n\n```xml\n <dependency>\n     <groupId>io.jsonwebtoken</groupId>\n     <artifactId>jjwt</artifactId>\n     <version>0.9.0</version>\n </dependency>\n```","source":"_posts/前后端分离，简单JWT登录实现.md","raw":"---\ntitle: 前后端分离，简单JWT登录实现\n---\n\n# 前后端分离，简单JWT登录实现\n\n[toc]\n\n## JWT登录流程\n![](https://img-blog.csdnimg.cn/img_convert/900b3e81f832b2f08c2e8aabb540536a.png)\n\n* 前端vue+axios+router\n* 后端springboot+mybatisplus\n\n## 1. 用户认证处理\n\n```java\n@Service\n@Transactional\npublic class AdminServiceImpl implements AdminService {\n\n    @Autowired\n    private AdminMapper adminMapper;\n\n    @Override\n    public ResponseResult adminLogin(Admin loginAdmin) {\n    \t// 从数据库查出用户信息\n        LambdaQueryWrapper<Admin> queryWrapper = new LambdaQueryWrapper<>();\n        queryWrapper.eq(Admin::getUsername,loginAdmin.getUsername());\n        Admin admin = adminMapper.selectOne(queryWrapper);\n        // 用户不存在，直接认证失败\n        if (admin == null) {\n            return new ResponseResult(ResponseResult.FORBIDDEN,\"登录失败\");\n        }\n        // 用户名与密码校验\n        if (admin.getUsername().equals(loginAdmin.getUsername())\n                && admin.getPassword().equals(loginAdmin.getPassword())) {\n            // 校验成功，生成jwt返回数据\n            String jwt = JwtUtil.createJWT(String.valueOf(loginAdmin.getId()), 1000L * 60 * 60 * 24);\n            Map<String,String> map = new HashMap<>();\n            map.put(\"token\",jwt);\n            return new ResponseResult(ResponseResult.OK,\"登录成功\",map);\n        }\n        // 密码校验失败\n        return new ResponseResult(ResponseResult.FORBIDDEN,\"登录失败\");\n    }\n}\n```\n## 2. 前端登录\n```js\nlogin({ username: this.username, password: this.password }).then(response => {\n      let data = response.data;\n      // 登录成功\n      if (data.code == 200) {\n        message.success(data.msg)\n        // 保存token到localstorage\n        window.localStorage.setItem(\"token\", data.data.token)\n       \t// 用户信息保存\n        window.localStorage.setItem(\"username\", this.username)\n        // 跳转到主页\n        this.$router.push(\"/admin\");\n      } else {\n        message.error(data.msg)\n      }\n    }\n  );\n```\n\n## 3. 前端请求处理\n\n* 前端每次发出请求时，请求头要携带之前**登录成功**保存的token\n* 这里用axios拦截器示例\n\n```js\nconst http = axios.create({\n    baseURL: 'http://localhost:8080',\n    // timeout: 4000\n})\n\n// 配置请求拦截器\nhttp.interceptors.request.use(\n    config => {\n        config.headers = {\n            // 每次请求前带上Token\n            token: window.localStorage.getItem(\"token\")\n        }\n        return config;\n    },\n    err => Promise.reject(err)\n);\n\n// 配置响应拦截器，主要做登录过期的处理，后端在解析token失效时返回401\nhttp.interceptors.response.use(res => {\n    // 登录过期，跳转到登录页面\n    if (res.data.code == 401) {\n        message.error(res.data.msg)\n        router.push(\"/admin/login\")\n    }\n    return res;\n}, err => {\n    return Promise.reject(err)\n});\n```\n\n## 4. 后端请求处理\n* 每次接收到请求，要校验token是否合法\n* 这里用拦截器示例\n\n```java\n\npublic class RequestCheckTokenInterceptor implements HandlerInterceptor {\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        response.setContentType(\"text/html; charset=utf-8\");\n\t\t// OPTIONS为预检请求，直接放行\n        if (\"OPTIONS\".equals(request.getMethod().toUpperCase())) {\n            return true;\n        }\n\t\t// 获取token\n        String token = request.getHeader(\"token\");\n        // 如果没有token直接拦截，返回错误信息\n        if (token == null) {\n        \t// 这里直接用的jackson\n            ObjectMapper mapper = new ObjectMapper();\n            String result = mapper.writeValueAsString(new ResponseResult(ResponseResult.UNAUTHORIZED, \"登录失效\"));\n            response.getWriter().print(result);\n            return false;\n        }\n        try {\n            Claims claims = JwtUtil.parseJWT(token);\n        } catch (Exception e) {\n        \t// token解析失败\n            e.printStackTrace();\n            // token不合法 拦截，返回错误信息\n            ObjectMapper mapper = new ObjectMapper();\n            String result = mapper.writeValueAsString(new ResponseResult(ResponseResult.UNAUTHORIZED, \"登录失效\"));\n            response.getWriter().print(result);\n            return false;\n        }\n        return true;\n    }\n    \n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n    }\n    \n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n    }\n}\n```\n\n## 5. 前端页面跳转处理\n\n* 前端在跳转页面前，应当也要校验登录状态信息\n* 这里用vue router的全局路由守卫示例\n\n```js\n// 全局路由导航守卫\nrouter.beforeEach((to, from) => {\n    // console.log(to); // 去哪儿\n    // console.log(from); // 从哪儿来\n    if (to.meta.requiresAuth == true) {\n        let token = getToken()\n        if (token == null || token == \"\") {\n            message.warning(\"登录失效\")\n            router.push(\"/admin/login\")\n            return false;\n        }\n        // 校验Token合法性\n        checkLoginState().then(response => {\n            let data = response.date\n            if (data.code == 200) {\n                return true\n            } else {\n                message.warning(data.msg)\n                router.push(\"/admin/login\")\n                return false;\n            }\n        })\n\n    }\n    return true;\n});\n```\n\n## 6. 退出登录\n\n* 可以看这篇文章：<https://blog.csdn.net/a1098766713/article/details/102914354>\n* 这里使用最简单的方法\n\n```js\nlogout() {\n   // 无为而治\n   window.localStorage.removeItem(\"token\")\n   window.localStorage.removeItem(\"username\")\n   this.$router.push(\"/admin/login\");\n },\n```\n\n## 7. 本文关联代码\n### 7.1 前端\n* request.js\n\n```js\nimport axios from 'axios'\n\nimport { getToken, message } from '@/utils'\n\nimport router from '@/router'\n\nconst http = axios.create({\n    baseURL: 'http://localhost:8080',\n    // timeout: 4000\n})\n\n// 配置请求拦截器\nhttp.interceptors.request.use(\n    config => {\n        config.headers = {\n            // 每次请求前带上Token\n            token: getToken()\n        }\n        return config;\n    },\n    err => Promise.reject(err)\n);\n\n// 配置响应拦截器\nhttp.interceptors.response.use(res => {\n    // console.log(\"响应拦截\");\n    // 登录过期\n    if (res.data.code == 401) {\n        message.error(res.data.msg)\n        router.push(\"/admin/login\")\n    }\n    return res;\n}, err => {\n    return Promise.reject(err)\n});\n\nexport const get = (url, param) => {\n    return http.get(url, param)\n}\nexport const post = (url, param) => {\n    return http.post(url, param)\n}\nexport const put = (url, param) => {\n    return http.put(url, param)\n}\nexport const del = (url, param) => {\n    return http.delete(url, param)\n}\n```\n\n* api.js\n\n```js\nimport axios from 'axios'\nimport { post,get,put,del } from './request'\n\n// 后台管理登录\nexport const login = param => post(\"/admin/login\",param)\n\n// 校验登录状态\nexport const checkLoginState = () => get(\"/admin/checkLoginState\")\n```\n\n* utils.js\n\n```js\nimport { ElMessage } from \"element-plus\";\n\nexport const message = {\n    error: msg => {\n        ElMessage({\n            showClose: true,\n            message: msg,\n            type: \"error\",\n        });\n    },\n    success: msg => {\n        ElMessage({\n            showClose: true,\n            message: msg,\n            type: \"success\",\n        });\n    },\n    warning: msg => {\n        ElMessage({\n            showClose: true,\n            message: msg,\n            type: \"warning\",\n        });\n    }\n}\n```\n\n### 7.2 后端\n\n* ResponseResult.java\n\n```java\npublic class ResponseResult {\n\n    /**\n     * 表明该请求被成功地完成，所请求的资源发送到客户端\n     */\n    public static final Integer OK = 200;\n    /**\n     * 请求要求身份验证，常见对于需要登录而用户未登录的情况。\n     */\n    public static final Integer UNAUTHORIZED = 401;\n    /**\n     * 服务器拒绝请求，常见于机密信息或复制其它登录用户链接访问服务器的情况。\n     */\n    public static final Integer FORBIDDEN = 403;\n    /**\n     * 服务器无法取得所请求的网页，请求资源不存在。\n     */\n    public static final Integer NOT_FOUND = 404;\n    /**\n     * 服务器内部错误。\n     */\n    public static final Integer SERVER_ERROR = 500;\n\n    private Integer code;\n    private String msg = \"\";\n    private Object data = new int[0];\n\n    public ResponseResult() {\n    }\n\n    public ResponseResult(Integer code) {\n        this.code = code;\n    }\n\n    public ResponseResult(Integer code, String msg) {\n        this.code = code;\n        this.msg = msg;\n    }\n\n    public ResponseResult(Integer code, Object data) {\n        this.code = code;\n        this.data = data;\n    }\n\n    public ResponseResult(Integer code, String msg, Object data) {\n        this.code = code;\n        this.msg = msg;\n        this.data = data;\n    }\n\n\n    public Integer getCode() {\n        return code;\n    }\n\n    public void setCode(Integer code) {\n        this.code = code;\n    }\n\n    public String getMsg() {\n        return msg;\n    }\n\n    public void setMsg(String msg) {\n        this.msg = msg;\n    }\n\n    public Object getData() {\n        return data;\n    }\n\n    public void setData(Object data) {\n        this.data = data;\n    }\n\n    @Override\n    public String toString() {\n        return \"Result{\" +\n                \"code=\" + code +\n                \", msg='\" + msg + '\\'' +\n                \", data=\" + data +\n                '}';\n    }\n}\n```\n\n* JwtUtil.java\n* 依赖于jjwt\n\n```java\n/**\n * JWT工具类\n */\npublic class JwtUtil {\n\n    //有效期为\n    public static final Long JWT_TTL = 60 * 60 *1000L;// 60 * 60 *1000  一个小时\n    //设置秘钥明文\n    public static final String JWT_KEY = \"shfciksadasfa21435ggdlhvjanv\";\n\n    public static String getUUID(){\n        return UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n    }\n\n    /**\n     * 生成jtw\n     * @param subject token中要存放的数据（json格式）\n     * @return\n     */\n    public static String createJWT(String subject) {\n        JwtBuilder builder = getJwtBuilder(subject, null, getUUID());// 设置过期时间\n        return builder.compact();\n    }\n\n    /**\n     * 生成jtw\n     * @param subject token中要存放的数据（json格式）\n     * @param ttlMillis token超时时间\n     * @return\n     */\n    public static String createJWT(String subject, Long ttlMillis) {\n        JwtBuilder builder = getJwtBuilder(subject, ttlMillis, getUUID());// 设置过期时间\n        return builder.compact();\n    }\n\n    /**\n     * 创建token\n     * @param id\n     * @param subject\n     * @param ttlMillis\n     * @return\n     */\n    public static String createJWT(String id, String subject, Long ttlMillis) {\n        JwtBuilder builder = getJwtBuilder(subject, ttlMillis, id);// 设置过期时间\n        return builder.compact();\n    }\n\n\n    private static JwtBuilder getJwtBuilder(String subject, Long ttlMillis, String uuid) {\n        SignatureAlgorithm signatureAlgorithm = SignatureAlgorithm.HS256;\n        SecretKey secretKey = generalKey();\n        long nowMillis = System.currentTimeMillis();\n        Date now = new Date(nowMillis);\n        if(ttlMillis==null){\n            ttlMillis=JwtUtil.JWT_TTL;\n        }\n        long expMillis = nowMillis + ttlMillis;\n        Date expDate = new Date(expMillis);\n        return Jwts.builder()\n                .setId(uuid)              //唯一的ID\n                .setSubject(subject)   // 主题  可以是JSON数据\n                .setIssuer(\"huanyv\")     // 签发者\n                .setIssuedAt(now)      // 签发时间\n                .signWith(signatureAlgorithm, secretKey) //使用HS256对称加密算法签名, 第二个参数为秘钥\n                .setExpiration(expDate);\n    }\n\n\n\n    /**\n     * 生成加密后的秘钥 secretKey\n     * @return\n     */\n    public static SecretKey generalKey() {\n        byte[] encodedKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);\n        SecretKey key = new SecretKeySpec(encodedKey, 0, encodedKey.length, \"AES\");\n        return key;\n    }\n\n    /**\n     * 解析\n     *\n     * @param jwt\n     * @return\n     * @throws Exception\n     */\n    public static Claims parseJWT(String jwt) throws Exception {\n        SecretKey secretKey = generalKey();\n        return Jwts.parser()\n                .setSigningKey(secretKey)\n                .parseClaimsJws(jwt)\n                .getBody();\n    }\n}\n```\n\n```xml\n <dependency>\n     <groupId>io.jsonwebtoken</groupId>\n     <artifactId>jjwt</artifactId>\n     <version>0.9.0</version>\n </dependency>\n```","slug":"前后端分离，简单JWT登录实现","published":1,"date":"2023-01-07T08:00:06.960Z","updated":"2023-01-07T08:08:19.064Z","_id":"clclo130x0002usw06t7z14tm","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"前后端分离，简单JWT登录实现\"><a href=\"#前后端分离，简单JWT登录实现\" class=\"headerlink\" title=\"前后端分离，简单JWT登录实现\"></a>前后端分离，简单JWT登录实现</h1><p>[toc]</p>\n<h2 id=\"JWT登录流程\"><a href=\"#JWT登录流程\" class=\"headerlink\" title=\"JWT登录流程\"></a>JWT登录流程</h2><p><img src=\"https://img-blog.csdnimg.cn/img_convert/900b3e81f832b2f08c2e8aabb540536a.png\"></p>\n<ul>\n<li>前端vue+axios+router</li>\n<li>后端springboot+mybatisplus</li>\n</ul>\n<h2 id=\"1-用户认证处理\"><a href=\"#1-用户认证处理\" class=\"headerlink\" title=\"1. 用户认证处理\"></a>1. 用户认证处理</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AdminServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AdminService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AdminMapper adminMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">adminLogin</span><span class=\"params\">(Admin loginAdmin)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">// 从数据库查出用户信息</span></span><br><span class=\"line\">        LambdaQueryWrapper&lt;Admin&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(Admin::getUsername,loginAdmin.getUsername());</span><br><span class=\"line\">        <span class=\"type\">Admin</span> <span class=\"variable\">admin</span> <span class=\"operator\">=</span> adminMapper.selectOne(queryWrapper);</span><br><span class=\"line\">        <span class=\"comment\">// 用户不存在，直接认证失败</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (admin == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.FORBIDDEN,<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 用户名与密码校验</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (admin.getUsername().equals(loginAdmin.getUsername())</span><br><span class=\"line\">                &amp;&amp; admin.getPassword().equals(loginAdmin.getPassword())) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 校验成功，生成jwt返回数据</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">jwt</span> <span class=\"operator\">=</span> JwtUtil.createJWT(String.valueOf(loginAdmin.getId()), <span class=\"number\">1000L</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span>);</span><br><span class=\"line\">            Map&lt;String,String&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">            map.put(<span class=\"string\">&quot;token&quot;</span>,jwt);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.OK,<span class=\"string\">&quot;登录成功&quot;</span>,map);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 密码校验失败</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.FORBIDDEN,<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-前端登录\"><a href=\"#2-前端登录\" class=\"headerlink\" title=\"2. 前端登录\"></a>2. 前端登录</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">login</span>(&#123; <span class=\"attr\">username</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">username</span>, <span class=\"attr\">password</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">password</span> &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> data = response.<span class=\"property\">data</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 登录成功</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (data.<span class=\"property\">code</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">        message.<span class=\"title function_\">success</span>(data.<span class=\"property\">msg</span>)</span><br><span class=\"line\">        <span class=\"comment\">// 保存token到localstorage</span></span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;token&quot;</span>, data.<span class=\"property\">data</span>.<span class=\"property\">token</span>)</span><br><span class=\"line\">       \t<span class=\"comment\">// 用户信息保存</span></span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;username&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">username</span>)</span><br><span class=\"line\">        <span class=\"comment\">// 跳转到主页</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        message.<span class=\"title function_\">error</span>(data.<span class=\"property\">msg</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-前端请求处理\"><a href=\"#3-前端请求处理\" class=\"headerlink\" title=\"3. 前端请求处理\"></a>3. 前端请求处理</h2><ul>\n<li>前端每次发出请求时，请求头要携带之前<strong>登录成功</strong>保存的token</li>\n<li>这里用axios拦截器示例</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> http = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">baseURL</span>: <span class=\"string\">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// timeout: 4000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置请求拦截器</span></span><br><span class=\"line\">http.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">        config.<span class=\"property\">headers</span> = &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 每次请求前带上Token</span></span><br><span class=\"line\">            <span class=\"attr\">token</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;token&quot;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> config;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置响应拦截器，主要做登录过期的处理，后端在解析token失效时返回401</span></span><br><span class=\"line\">http.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 登录过期，跳转到登录页面</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.<span class=\"property\">data</span>.<span class=\"property\">code</span> == <span class=\"number\">401</span>) &#123;</span><br><span class=\"line\">        message.<span class=\"title function_\">error</span>(res.<span class=\"property\">data</span>.<span class=\"property\">msg</span>)</span><br><span class=\"line\">        router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-后端请求处理\"><a href=\"#4-后端请求处理\" class=\"headerlink\" title=\"4. 后端请求处理\"></a>4. 后端请求处理</h2><ul>\n<li>每次接收到请求，要校验token是否合法</li>\n<li>这里用拦截器示例</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RequestCheckTokenInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">HandlerInterceptor</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">preHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        response.setContentType(<span class=\"string\">&quot;text/html; charset=utf-8&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// OPTIONS为预检请求，直接放行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;OPTIONS&quot;</span>.equals(request.getMethod().toUpperCase())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取token</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> request.getHeader(<span class=\"string\">&quot;token&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 如果没有token直接拦截，返回错误信息</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (token == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        \t<span class=\"comment\">// 这里直接用的jackson</span></span><br><span class=\"line\">            <span class=\"type\">ObjectMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> mapper.writeValueAsString(<span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.UNAUTHORIZED, <span class=\"string\">&quot;登录失效&quot;</span>));</span><br><span class=\"line\">            response.getWriter().print(result);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> JwtUtil.parseJWT(token);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        \t<span class=\"comment\">// token解析失败</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"comment\">// token不合法 拦截，返回错误信息</span></span><br><span class=\"line\">            <span class=\"type\">ObjectMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> mapper.writeValueAsString(<span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.UNAUTHORIZED, <span class=\"string\">&quot;登录失效&quot;</span>));</span><br><span class=\"line\">            response.getWriter().print(result);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">postHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterCompletion</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-前端页面跳转处理\"><a href=\"#5-前端页面跳转处理\" class=\"headerlink\" title=\"5. 前端页面跳转处理\"></a>5. 前端页面跳转处理</h2><ul>\n<li>前端在跳转页面前，应当也要校验登录状态信息</li>\n<li>这里用vue router的全局路由守卫示例</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 全局路由导航守卫</span></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(to); // 去哪儿</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(from); // 从哪儿来</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (to.<span class=\"property\">meta</span>.<span class=\"property\">requiresAuth</span> == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> token = <span class=\"title function_\">getToken</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (token == <span class=\"literal\">null</span> || token == <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            message.<span class=\"title function_\">warning</span>(<span class=\"string\">&quot;登录失效&quot;</span>)</span><br><span class=\"line\">            router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 校验Token合法性</span></span><br><span class=\"line\">        <span class=\"title function_\">checkLoginState</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> data = response.<span class=\"property\">date</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (data.<span class=\"property\">code</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                message.<span class=\"title function_\">warning</span>(data.<span class=\"property\">msg</span>)</span><br><span class=\"line\">                router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-退出登录\"><a href=\"#6-退出登录\" class=\"headerlink\" title=\"6. 退出登录\"></a>6. 退出登录</h2><ul>\n<li>可以看这篇文章：<a href=\"https://blog.csdn.net/a1098766713/article/details/102914354\">https://blog.csdn.net/a1098766713/article/details/102914354</a></li>\n<li>这里使用最简单的方法</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">logout</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// 无为而治</span></span><br><span class=\"line\">   <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&quot;token&quot;</span>)</span><br><span class=\"line\">   <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>);</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-本文关联代码\"><a href=\"#7-本文关联代码\" class=\"headerlink\" title=\"7. 本文关联代码\"></a>7. 本文关联代码</h2><h3 id=\"7-1-前端\"><a href=\"#7-1-前端\" class=\"headerlink\" title=\"7.1 前端\"></a>7.1 前端</h3><ul>\n<li>request.js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getToken, message &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> http = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">baseURL</span>: <span class=\"string\">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// timeout: 4000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置请求拦截器</span></span><br><span class=\"line\">http.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">        config.<span class=\"property\">headers</span> = &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 每次请求前带上Token</span></span><br><span class=\"line\">            <span class=\"attr\">token</span>: <span class=\"title function_\">getToken</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> config;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置响应拦截器</span></span><br><span class=\"line\">http.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(&quot;响应拦截&quot;);</span></span><br><span class=\"line\">    <span class=\"comment\">// 登录过期</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.<span class=\"property\">data</span>.<span class=\"property\">code</span> == <span class=\"number\">401</span>) &#123;</span><br><span class=\"line\">        message.<span class=\"title function_\">error</span>(res.<span class=\"property\">data</span>.<span class=\"property\">msg</span>)</span><br><span class=\"line\">        router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">get</span> = (<span class=\"params\">url, param</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"title function_\">get</span>(url, param)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">post</span> = (<span class=\"params\">url, param</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"title function_\">post</span>(url, param)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">put</span> = (<span class=\"params\">url, param</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"title function_\">put</span>(url, param)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">del</span> = (<span class=\"params\">url, param</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"title function_\">delete</span>(url, param)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>api.js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; post,get,put,del &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./request&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 后台管理登录</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">login</span> = param =&gt; <span class=\"title function_\">post</span>(<span class=\"string\">&quot;/admin/login&quot;</span>,param)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 校验登录状态</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">checkLoginState</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">get</span>(<span class=\"string\">&quot;/admin/checkLoginState&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>utils.js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">ElMessage</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;element-plus&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> message = &#123;</span><br><span class=\"line\">    <span class=\"attr\">error</span>: <span class=\"function\"><span class=\"params\">msg</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title class_\">ElMessage</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">showClose</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: msg,</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&quot;error&quot;</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"params\">msg</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title class_\">ElMessage</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">showClose</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: msg,</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&quot;success&quot;</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">warning</span>: <span class=\"function\"><span class=\"params\">msg</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title class_\">ElMessage</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">showClose</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: msg,</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-2-后端\"><a href=\"#7-2-后端\" class=\"headerlink\" title=\"7.2 后端\"></a>7.2 后端</h3><ul>\n<li>ResponseResult.java</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ResponseResult</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 表明该请求被成功地完成，所请求的资源发送到客户端</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">OK</span> <span class=\"operator\">=</span> <span class=\"number\">200</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 请求要求身份验证，常见对于需要登录而用户未登录的情况。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">UNAUTHORIZED</span> <span class=\"operator\">=</span> <span class=\"number\">401</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 服务器拒绝请求，常见于机密信息或复制其它登录用户链接访问服务器的情况。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">FORBIDDEN</span> <span class=\"operator\">=</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 服务器无法取得所请求的网页，请求资源不存在。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">NOT_FOUND</span> <span class=\"operator\">=</span> <span class=\"number\">404</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 服务器内部错误。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">SERVER_ERROR</span> <span class=\"operator\">=</span> <span class=\"number\">500</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Object</span> <span class=\"variable\">data</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, Object data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, String msg, Object data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCode</span><span class=\"params\">(Integer code)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getMsg</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMsg</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">getData</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setData</span><span class=\"params\">(Object data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Result&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;code=&quot;</span> + code +</span><br><span class=\"line\">                <span class=\"string\">&quot;, msg=&#x27;&quot;</span> + msg + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, data=&quot;</span> + data +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>JwtUtil.java</li>\n<li>依赖于jjwt</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * JWT工具类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtUtil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//有效期为</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Long</span> <span class=\"variable\">JWT_TTL</span> <span class=\"operator\">=</span> <span class=\"number\">60</span> * <span class=\"number\">60</span> *<span class=\"number\">1000L</span>;<span class=\"comment\">// 60 * 60 *1000  一个小时</span></span><br><span class=\"line\">    <span class=\"comment\">//设置秘钥明文</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">JWT_KEY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;shfciksadasfa21435ggdlhvjanv&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getUUID</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> UUID.randomUUID().toString().replaceAll(<span class=\"string\">&quot;-&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成jtw</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject token中要存放的数据（json格式）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, <span class=\"literal\">null</span>, getUUID());<span class=\"comment\">// 设置过期时间</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成jtw</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject token中要存放的数据（json格式）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ttlMillis token超时时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject, Long ttlMillis)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, ttlMillis, getUUID());<span class=\"comment\">// 设置过期时间</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ttlMillis</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String id, String subject, Long ttlMillis)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, ttlMillis, id);<span class=\"comment\">// 设置过期时间</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JwtBuilder <span class=\"title function_\">getJwtBuilder</span><span class=\"params\">(String subject, Long ttlMillis, String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">SignatureAlgorithm</span> <span class=\"variable\">signatureAlgorithm</span> <span class=\"operator\">=</span> SignatureAlgorithm.HS256;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">nowMillis</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(nowMillis);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ttlMillis==<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            ttlMillis=JwtUtil.JWT_TTL;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">expMillis</span> <span class=\"operator\">=</span> nowMillis + ttlMillis;</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">expDate</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(expMillis);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.builder()</span><br><span class=\"line\">                .setId(uuid)              <span class=\"comment\">//唯一的ID</span></span><br><span class=\"line\">                .setSubject(subject)   <span class=\"comment\">// 主题  可以是JSON数据</span></span><br><span class=\"line\">                .setIssuer(<span class=\"string\">&quot;huanyv&quot;</span>)     <span class=\"comment\">// 签发者</span></span><br><span class=\"line\">                .setIssuedAt(now)      <span class=\"comment\">// 签发时间</span></span><br><span class=\"line\">                .signWith(signatureAlgorithm, secretKey) <span class=\"comment\">//使用HS256对称加密算法签名, 第二个参数为秘钥</span></span><br><span class=\"line\">                .setExpiration(expDate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成加密后的秘钥 secretKey</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SecretKey <span class=\"title function_\">generalKey</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] encodedKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecretKeySpec</span>(encodedKey, <span class=\"number\">0</span>, encodedKey.length, <span class=\"string\">&quot;AES&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> key;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解析</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jwt</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Exception</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Claims <span class=\"title function_\">parseJWT</span><span class=\"params\">(String jwt)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.parser()</span><br><span class=\"line\">                .setSigningKey(secretKey)</span><br><span class=\"line\">                .parseClaimsJws(jwt)</span><br><span class=\"line\">                .getBody();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.jsonwebtoken<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jjwt<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前后端分离，简单JWT登录实现\"><a href=\"#前后端分离，简单JWT登录实现\" class=\"headerlink\" title=\"前后端分离，简单JWT登录实现\"></a>前后端分离，简单JWT登录实现</h1><p>[toc]</p>\n<h2 id=\"JWT登录流程\"><a href=\"#JWT登录流程\" class=\"headerlink\" title=\"JWT登录流程\"></a>JWT登录流程</h2><p><img src=\"https://img-blog.csdnimg.cn/img_convert/900b3e81f832b2f08c2e8aabb540536a.png\"></p>\n<ul>\n<li>前端vue+axios+router</li>\n<li>后端springboot+mybatisplus</li>\n</ul>\n<h2 id=\"1-用户认证处理\"><a href=\"#1-用户认证处理\" class=\"headerlink\" title=\"1. 用户认证处理\"></a>1. 用户认证处理</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AdminServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">AdminService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AdminMapper adminMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">adminLogin</span><span class=\"params\">(Admin loginAdmin)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">// 从数据库查出用户信息</span></span><br><span class=\"line\">        LambdaQueryWrapper&lt;Admin&gt; queryWrapper = <span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(Admin::getUsername,loginAdmin.getUsername());</span><br><span class=\"line\">        <span class=\"type\">Admin</span> <span class=\"variable\">admin</span> <span class=\"operator\">=</span> adminMapper.selectOne(queryWrapper);</span><br><span class=\"line\">        <span class=\"comment\">// 用户不存在，直接认证失败</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (admin == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.FORBIDDEN,<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 用户名与密码校验</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (admin.getUsername().equals(loginAdmin.getUsername())</span><br><span class=\"line\">                &amp;&amp; admin.getPassword().equals(loginAdmin.getPassword())) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 校验成功，生成jwt返回数据</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">jwt</span> <span class=\"operator\">=</span> JwtUtil.createJWT(String.valueOf(loginAdmin.getId()), <span class=\"number\">1000L</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span>);</span><br><span class=\"line\">            Map&lt;String,String&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">            map.put(<span class=\"string\">&quot;token&quot;</span>,jwt);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.OK,<span class=\"string\">&quot;登录成功&quot;</span>,map);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 密码校验失败</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.FORBIDDEN,<span class=\"string\">&quot;登录失败&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-前端登录\"><a href=\"#2-前端登录\" class=\"headerlink\" title=\"2. 前端登录\"></a>2. 前端登录</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">login</span>(&#123; <span class=\"attr\">username</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">username</span>, <span class=\"attr\">password</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">password</span> &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> data = response.<span class=\"property\">data</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 登录成功</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (data.<span class=\"property\">code</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">        message.<span class=\"title function_\">success</span>(data.<span class=\"property\">msg</span>)</span><br><span class=\"line\">        <span class=\"comment\">// 保存token到localstorage</span></span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;token&quot;</span>, data.<span class=\"property\">data</span>.<span class=\"property\">token</span>)</span><br><span class=\"line\">       \t<span class=\"comment\">// 用户信息保存</span></span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;username&quot;</span>, <span class=\"variable language_\">this</span>.<span class=\"property\">username</span>)</span><br><span class=\"line\">        <span class=\"comment\">// 跳转到主页</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        message.<span class=\"title function_\">error</span>(data.<span class=\"property\">msg</span>)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-前端请求处理\"><a href=\"#3-前端请求处理\" class=\"headerlink\" title=\"3. 前端请求处理\"></a>3. 前端请求处理</h2><ul>\n<li>前端每次发出请求时，请求头要携带之前<strong>登录成功</strong>保存的token</li>\n<li>这里用axios拦截器示例</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> http = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">baseURL</span>: <span class=\"string\">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// timeout: 4000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置请求拦截器</span></span><br><span class=\"line\">http.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">        config.<span class=\"property\">headers</span> = &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 每次请求前带上Token</span></span><br><span class=\"line\">            <span class=\"attr\">token</span>: <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;token&quot;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> config;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置响应拦截器，主要做登录过期的处理，后端在解析token失效时返回401</span></span><br><span class=\"line\">http.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 登录过期，跳转到登录页面</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.<span class=\"property\">data</span>.<span class=\"property\">code</span> == <span class=\"number\">401</span>) &#123;</span><br><span class=\"line\">        message.<span class=\"title function_\">error</span>(res.<span class=\"property\">data</span>.<span class=\"property\">msg</span>)</span><br><span class=\"line\">        router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-后端请求处理\"><a href=\"#4-后端请求处理\" class=\"headerlink\" title=\"4. 后端请求处理\"></a>4. 后端请求处理</h2><ul>\n<li>每次接收到请求，要校验token是否合法</li>\n<li>这里用拦截器示例</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RequestCheckTokenInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">HandlerInterceptor</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">preHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        response.setContentType(<span class=\"string\">&quot;text/html; charset=utf-8&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// OPTIONS为预检请求，直接放行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;OPTIONS&quot;</span>.equals(request.getMethod().toUpperCase())) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 获取token</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> request.getHeader(<span class=\"string\">&quot;token&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 如果没有token直接拦截，返回错误信息</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (token == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        \t<span class=\"comment\">// 这里直接用的jackson</span></span><br><span class=\"line\">            <span class=\"type\">ObjectMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> mapper.writeValueAsString(<span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.UNAUTHORIZED, <span class=\"string\">&quot;登录失效&quot;</span>));</span><br><span class=\"line\">            response.getWriter().print(result);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> JwtUtil.parseJWT(token);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        \t<span class=\"comment\">// token解析失败</span></span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"comment\">// token不合法 拦截，返回错误信息</span></span><br><span class=\"line\">            <span class=\"type\">ObjectMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> mapper.writeValueAsString(<span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseResult.UNAUTHORIZED, <span class=\"string\">&quot;登录失效&quot;</span>));</span><br><span class=\"line\">            response.getWriter().print(result);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">postHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterCompletion</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-前端页面跳转处理\"><a href=\"#5-前端页面跳转处理\" class=\"headerlink\" title=\"5. 前端页面跳转处理\"></a>5. 前端页面跳转处理</h2><ul>\n<li>前端在跳转页面前，应当也要校验登录状态信息</li>\n<li>这里用vue router的全局路由守卫示例</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 全局路由导航守卫</span></span><br><span class=\"line\">router.<span class=\"title function_\">beforeEach</span>(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(to); // 去哪儿</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(from); // 从哪儿来</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (to.<span class=\"property\">meta</span>.<span class=\"property\">requiresAuth</span> == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> token = <span class=\"title function_\">getToken</span>()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (token == <span class=\"literal\">null</span> || token == <span class=\"string\">&quot;&quot;</span>) &#123;</span><br><span class=\"line\">            message.<span class=\"title function_\">warning</span>(<span class=\"string\">&quot;登录失效&quot;</span>)</span><br><span class=\"line\">            router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 校验Token合法性</span></span><br><span class=\"line\">        <span class=\"title function_\">checkLoginState</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> data = response.<span class=\"property\">date</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (data.<span class=\"property\">code</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                message.<span class=\"title function_\">warning</span>(data.<span class=\"property\">msg</span>)</span><br><span class=\"line\">                router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-退出登录\"><a href=\"#6-退出登录\" class=\"headerlink\" title=\"6. 退出登录\"></a>6. 退出登录</h2><ul>\n<li>可以看这篇文章：<a href=\"https://blog.csdn.net/a1098766713/article/details/102914354\">https://blog.csdn.net/a1098766713/article/details/102914354</a></li>\n<li>这里使用最简单的方法</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">logout</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">   <span class=\"comment\">// 无为而治</span></span><br><span class=\"line\">   <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&quot;token&quot;</span>)</span><br><span class=\"line\">   <span class=\"variable language_\">window</span>.<span class=\"property\">localStorage</span>.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>);</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-本文关联代码\"><a href=\"#7-本文关联代码\" class=\"headerlink\" title=\"7. 本文关联代码\"></a>7. 本文关联代码</h2><h3 id=\"7-1-前端\"><a href=\"#7-1-前端\" class=\"headerlink\" title=\"7.1 前端\"></a>7.1 前端</h3><ul>\n<li>request.js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getToken, message &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/utils&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> router <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/router&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> http = axios.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">baseURL</span>: <span class=\"string\">&#x27;http://localhost:8080&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// timeout: 4000</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置请求拦截器</span></span><br><span class=\"line\">http.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">        config.<span class=\"property\">headers</span> = &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 每次请求前带上Token</span></span><br><span class=\"line\">            <span class=\"attr\">token</span>: <span class=\"title function_\">getToken</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> config;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 配置响应拦截器</span></span><br><span class=\"line\">http.<span class=\"property\">interceptors</span>.<span class=\"property\">response</span>.<span class=\"title function_\">use</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(&quot;响应拦截&quot;);</span></span><br><span class=\"line\">    <span class=\"comment\">// 登录过期</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res.<span class=\"property\">data</span>.<span class=\"property\">code</span> == <span class=\"number\">401</span>) &#123;</span><br><span class=\"line\">        message.<span class=\"title function_\">error</span>(res.<span class=\"property\">data</span>.<span class=\"property\">msg</span>)</span><br><span class=\"line\">        router.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;/admin/login&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;, <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">get</span> = (<span class=\"params\">url, param</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"title function_\">get</span>(url, param)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">post</span> = (<span class=\"params\">url, param</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"title function_\">post</span>(url, param)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">put</span> = (<span class=\"params\">url, param</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"title function_\">put</span>(url, param)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">del</span> = (<span class=\"params\">url, param</span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"title function_\">delete</span>(url, param)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>api.js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; post,get,put,del &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./request&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 后台管理登录</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">login</span> = param =&gt; <span class=\"title function_\">post</span>(<span class=\"string\">&quot;/admin/login&quot;</span>,param)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 校验登录状态</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">checkLoginState</span> = (<span class=\"params\"></span>) =&gt; <span class=\"title function_\">get</span>(<span class=\"string\">&quot;/admin/checkLoginState&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>utils.js</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">ElMessage</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;element-plus&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> message = &#123;</span><br><span class=\"line\">    <span class=\"attr\">error</span>: <span class=\"function\"><span class=\"params\">msg</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title class_\">ElMessage</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">showClose</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: msg,</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&quot;error&quot;</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"params\">msg</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title class_\">ElMessage</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">showClose</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: msg,</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&quot;success&quot;</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">warning</span>: <span class=\"function\"><span class=\"params\">msg</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title class_\">ElMessage</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">showClose</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: msg,</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&quot;warning&quot;</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-2-后端\"><a href=\"#7-2-后端\" class=\"headerlink\" title=\"7.2 后端\"></a>7.2 后端</h3><ul>\n<li>ResponseResult.java</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ResponseResult</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 表明该请求被成功地完成，所请求的资源发送到客户端</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">OK</span> <span class=\"operator\">=</span> <span class=\"number\">200</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 请求要求身份验证，常见对于需要登录而用户未登录的情况。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">UNAUTHORIZED</span> <span class=\"operator\">=</span> <span class=\"number\">401</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 服务器拒绝请求，常见于机密信息或复制其它登录用户链接访问服务器的情况。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">FORBIDDEN</span> <span class=\"operator\">=</span> <span class=\"number\">403</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 服务器无法取得所请求的网页，请求资源不存在。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">NOT_FOUND</span> <span class=\"operator\">=</span> <span class=\"number\">404</span>;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 服务器内部错误。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Integer</span> <span class=\"variable\">SERVER_ERROR</span> <span class=\"operator\">=</span> <span class=\"number\">500</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">Object</span> <span class=\"variable\">data</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, Object data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">ResponseResult</span><span class=\"params\">(Integer code, String msg, Object data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCode</span><span class=\"params\">(Integer code)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getMsg</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMsg</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">getData</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setData</span><span class=\"params\">(Object data)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.data = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Result&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;code=&quot;</span> + code +</span><br><span class=\"line\">                <span class=\"string\">&quot;, msg=&#x27;&quot;</span> + msg + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, data=&quot;</span> + data +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>JwtUtil.java</li>\n<li>依赖于jjwt</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * JWT工具类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JwtUtil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//有效期为</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Long</span> <span class=\"variable\">JWT_TTL</span> <span class=\"operator\">=</span> <span class=\"number\">60</span> * <span class=\"number\">60</span> *<span class=\"number\">1000L</span>;<span class=\"comment\">// 60 * 60 *1000  一个小时</span></span><br><span class=\"line\">    <span class=\"comment\">//设置秘钥明文</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">JWT_KEY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;shfciksadasfa21435ggdlhvjanv&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getUUID</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> UUID.randomUUID().toString().replaceAll(<span class=\"string\">&quot;-&quot;</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成jtw</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject token中要存放的数据（json格式）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, <span class=\"literal\">null</span>, getUUID());<span class=\"comment\">// 设置过期时间</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成jtw</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject token中要存放的数据（json格式）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ttlMillis token超时时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String subject, Long ttlMillis)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, ttlMillis, getUUID());<span class=\"comment\">// 设置过期时间</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 创建token</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> subject</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ttlMillis</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">createJWT</span><span class=\"params\">(String id, String subject, Long ttlMillis)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">JwtBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> getJwtBuilder(subject, ttlMillis, id);<span class=\"comment\">// 设置过期时间</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> builder.compact();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> JwtBuilder <span class=\"title function_\">getJwtBuilder</span><span class=\"params\">(String subject, Long ttlMillis, String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">SignatureAlgorithm</span> <span class=\"variable\">signatureAlgorithm</span> <span class=\"operator\">=</span> SignatureAlgorithm.HS256;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">nowMillis</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(nowMillis);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ttlMillis==<span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            ttlMillis=JwtUtil.JWT_TTL;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">expMillis</span> <span class=\"operator\">=</span> nowMillis + ttlMillis;</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">expDate</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(expMillis);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.builder()</span><br><span class=\"line\">                .setId(uuid)              <span class=\"comment\">//唯一的ID</span></span><br><span class=\"line\">                .setSubject(subject)   <span class=\"comment\">// 主题  可以是JSON数据</span></span><br><span class=\"line\">                .setIssuer(<span class=\"string\">&quot;huanyv&quot;</span>)     <span class=\"comment\">// 签发者</span></span><br><span class=\"line\">                .setIssuedAt(now)      <span class=\"comment\">// 签发时间</span></span><br><span class=\"line\">                .signWith(signatureAlgorithm, secretKey) <span class=\"comment\">//使用HS256对称加密算法签名, 第二个参数为秘钥</span></span><br><span class=\"line\">                .setExpiration(expDate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 生成加密后的秘钥 secretKey</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SecretKey <span class=\"title function_\">generalKey</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] encodedKey = Base64.getDecoder().decode(JwtUtil.JWT_KEY);</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SecretKeySpec</span>(encodedKey, <span class=\"number\">0</span>, encodedKey.length, <span class=\"string\">&quot;AES&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> key;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解析</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> jwt</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Exception</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Claims <span class=\"title function_\">parseJWT</span><span class=\"params\">(String jwt)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">SecretKey</span> <span class=\"variable\">secretKey</span> <span class=\"operator\">=</span> generalKey();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Jwts.parser()</span><br><span class=\"line\">                .setSigningKey(secretKey)</span><br><span class=\"line\">                .parseClaimsJws(jwt)</span><br><span class=\"line\">                .getBody();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.jsonwebtoken<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jjwt<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"如何进行参数校验","_content":"\n# 如何进行参数校验\n\n[TOC]\n\n## 1. 不好的参数校验\n\n* 对于用户输入的数据来说，不只前端要校验数据，后端也要对数进行校验，比如入参是否可以为空、入参长度是否满足你的期望长度\n* 比如你的数据库长度设置的`varchar(16)`，对方直接来了个36的，那么数据库直接异常\n* 如果以if判断来进行参数校验，代码就会非常的难看\n\n```java\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n    @PostMapping(\"/add\")\n    public ResponseEntity<String> add(User user) {\n        if(user.getName()==null) {\n            return ResponseResult.fail(\"用户名不可为空！\");\n        } else if(user.getName().length()<5 || user.getName().length()>15){\n            return ResponseResult.fail(\"用户名长度在 5-15 之间\");\n        }\n        if(user.getAge()< 1 || user.getAge()> 150) {\n            return ResponseResult.fail(\"你敢是乌龟吗？\");\n        }\n        // 参数合法\n        return ResponseEntity.ok(\"success\");\n    }\n}\n```\n\n* 针对这个问题，Java开者在Java API规范 (JSR303) 定义了Bean校验的标准validation-api，但没有提供实现。 \n* hibernate validation是对这个规范的实现，并增加了校验注解如@Email、@Length等。 \n* Spring Validation是对hibernate validation的二次封装，用于支持spring mvc参数自动校验。\n\n## 2. 开始\n\n* 引入依赖\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-validation</artifactId>\n</dependency>\n```\n\n* 对bean的属性添加校验注解\n* 可以单独使用一个DTO\n* 每个注解指定`message`属性，为错误信息提示\n* 有哪些常用的校验?(在下面)\n\n```java\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n    private Long id;\n\n    @NotBlank\n    private String username;\n\n    @NotBlank\n    private String password;\n\n    private String sex;\n\n    @Email\n    private String email;\n\n    @Pattern(regexp = \"^[0-9]{11}$\", message = \"手机号格式不正确\")\n    private String phone;\n}\n```\n\n* 在Controller的方法入参上使用`@Valid`注解，参数校验的值放在BindingResult中\n\n```java\n@Slf4j\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n    @PostMapping\n    public ResponseResult addUser(@Valid User user, BindingResult bindingResult) {\n\n\t\tif (bindingResult.hasErrors()) { // 数据格式出现错误\n\t\t    Map<String, String> map = bindingResult.getFieldErrors().stream()\n\t\t            .collect(Collectors.toMap(FieldError::getField, FieldError::getDefaultMessage));\n\t\t    return new ResponseResult(ResponseStatus.FAIL.getCode(), \"数据格式校验失败\", map) ;\n        }\n\n        log.info(\"用户信息：{}\",user);\n\n        return ResponseResult.success(\"添加成功！\");\n    }\n}\n```\n\n## 3. 统一异常处理\n\n* 在数据校验失败时会发出`BindException`异常，可以使用spring的统一异常处理器进行处理\n\n```java\n@Slf4j\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n    @PostMapping\n    public ResponseResult addUser(@Valid User user) {\n        log.info(\"用户信息：{}\",user);\n        return ResponseResult.success(\"添加成功！\");\n    }\n}\n```\n\n```java\n@RestControllerAdvice\npublic class CustomExceptionHandler {\n\n    @ExceptionHandler(BindException.class)\n    public ResponseResult validationException(BindException e) {\n\n        Map<String, String> map = e.getBindingResult().getFieldErrors().stream()\n                .collect(Collectors.toMap(FieldError::getField, FieldError::getDefaultMessage));\n        return new ResponseResult(ResponseStatus.FAIL.getCode(), \"数据格式校验失败\", map) ;\n    }\n\n}\n```\n\n## 4. 分组校验\n\n* 我们一般在数据增删改查时，通常增加时使用数据库的主键自增，也就是增加时主键必须为null，删改查时主键必须不为null\n* 这里同一bean中出现了两种校验场景，可以使用分组校验\n* 【分组】即为接口，接口中只是作为一个标识，无需任何代码\n\n```java\n// 添加时的组\npublic interface AddValid {\n}\n// 修改时的组\npublic interface UpdateValid {\n}\n```\n\n* 设置分组后，校验注解可以指定组\n* 没有设置groups属性的注解，使得分组校验时不会校验\n\n```java\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n\n    @Null(groups = {AddValid.class})\n    @NotNull(groups = {UpdateValid.class})\n    private Long id;\n\n    @NotBlank(groups = {AddValid.class, UpdateValid.class})\n    private String username;\n\n    @NotBlank(groups = {AddValid.class})\n//    @NotBlank\n    private String password;\n\n    private String sex;\n\n    @Email(groups = {AddValid.class, UpdateValid.class})\n    private String email;\n\n    @Pattern(regexp = \"^[0-9]{11}$\", message = \"手机号格式不正确\", groups = {AddValid.class, UpdateValid.class})\n    private String phone;\n}\n```\n\n* 使用分组校验，形参使用`@Validated`注解，value属性指定组\n\n```java\n@Slf4j\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n\n    @PostMapping\n    public ResponseResult addUser(@Validated({AddValid.class}) User user) {\n\n        log.info(\"用户信息：{}\",user);\n\n        return ResponseResult.success(\"添加成功！\");\n    }\n\n    @PutMapping\n    public ResponseResult updateUser(@Validated(UpdateValid.class) User user) {\n\n        log.info(\"用户信息：{}\",user);\n\n        return ResponseResult.success(\"修改成功\");\n    }\n}\n```\n\n## 5. 常用的校验注解\n\n* JSR303规范\n\n```java\n@AssertFalse            被注释的元素只能为false\n@AssertTrue             被注释的元素只能为true\n@DecimalMax             被注释的元素必须小于或等于{value}\n@DecimalMin             被注释的元素必须大于或等于{value}\n@Digits                 被注释的元素数字的值超出了允许范围(只允许在{integer}位整数和{fraction}位小数范围内)\n@Email                  被注释的元素不是一个合法的电子邮件地址\n@Future                 被注释的元素需要是一个将来的时间\n@FutureOrPresent        被注释的元素需要是一个将来或现在的时间\n@Max                    被注释的元素最大不能超过{value}\n@Min                    被注释的元素最小不能小于{value}\n@Negative               被注释的元素必须是负数\n@NegativeOrZero         被注释的元素必须是负数或零\n@NotBlank               被注释的元素不能为空、空白字符串\n@NotEmpty               被注释的元素不能为空\n@NotNull                被注释的元素不能为null\n@Null                   被注释的元素必须为null\n@Past                   被注释的元素需要是一个过去的时间\n@PastOrPresent          被注释的元素需要是一个过去或现在的时间\n@Pattern                被注释的元素需要匹配正则表达式\"{regexp}\"\n@Positive               被注释的元素必须是正数\n@PositiveOrZero         被注释的元素必须是正数或零\n@Size                   被注释的元素个数必须在{min}和{max}之间\n```\n\n* hibernate validation是对这个规范的实现，并增加了一些其他校验注解，如@Email，@Length，@Range等等\n\n```java\n@CreditCardNumber       被注释的元素不合法的信用卡号码\n@Currency               被注释的元素不合法的货币 (必须是{value}其中之一)\n@EAN                    被注释的元素不合法的{type}条形码\n@Email                  被注释的元素不是一个合法的电子邮件地址  (已过期)\n@Length                 被注释的元素长度需要在{min}和{max}之间\n@CodePointLength        被注释的元素长度需要在{min}和{max}之间\n@LuhnCheck              被注释的元素${validatedValue}的校验码不合法, Luhn模10校验和不匹配\n@Mod10Check             被注释的元素${validatedValue}的校验码不合法, 模10校验和不匹配\n@Mod11Check             被注释的元素${validatedValue}的校验码不合法, 模11校验和不匹配\n@ModCheck               被注释的元素${validatedValue}的校验码不合法, ${modType}校验和不匹配  (已过期)\n@NotBlank               被注释的元素不能为空  (已过期)\n@NotEmpty               被注释的元素不能为空  (已过期)\n@ParametersScriptAssert 被注释的元素执行脚本表达式\"{script}\"没有返回期望结果\n@Range                  被注释的元素需要在{min}和{max}之间\n@SafeHtml               被注释的元素可能有不安全的HTML内容\n@ScriptAssert           被注释的元素执行脚本表达式\"{script}\"没有返回期望结果\n@URL                    被注释的元素需要是一个合法的URL\n@DurationMax            被注释的元素必须小于${inclusive == true ? '或等于' : ''}${days == 0 ? '' : days += '天'}${hours == 0 ? '' : hours += '小时'}${minutes == 0 ? '' : minutes += '分钟'}${seconds == 0 ? '' : seconds += '秒'}${millis == 0 ? '' : millis += '毫秒'}${nanos == 0 ? '' : nanos += '纳秒'}\n@DurationMin            被注释的元素必须大于${inclusive == true ? '或等于' : ''}${days == 0 ? '' : days += '天'}${hours == 0 ? '' : hours += '小时'}${minutes == 0 ? '' : minutes += '分钟'}${seconds == 0 ? '' : seconds += '秒'}${millis == 0 ? '' : millis += '毫秒'}${nanos == 0 ? '' : nanos += '纳秒'}\n```\n\n## 6. 自定义validation\n\n* 定义注解\n\n```java\n@Target({ METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE })\n@Retention(RUNTIME)\n@Documented\n@Constraint(validatedBy = {TelephoneNumberValidator.class}) // 指定校验器\npublic @interface TelephoneNumber {\n    String message() default \"Invalid telephone number\";\n    Class<?>[] groups() default { };\n    Class<? extends Payload>[] payload() default { };\n}\n```\n\n* 定义校验器\n\n```java\npublic class TelephoneNumberValidator implements ConstraintValidator<TelephoneNumber, String> {\n    private static final String REGEX_TEL = \"0\\\\d{2,3}[-]?\\\\d{7,8}|0\\\\d{2,3}\\\\s?\\\\d{7,8}|13[0-9]\\\\d{8}|15[1089]\\\\d{8}\";\n\n    @Override\n    public boolean isValid(String s, ConstraintValidatorContext constraintValidatorContext) {\n        try {\n            return Pattern.matches(REGEX_TEL, s);\n        } catch (Exception e) {\n            return false;\n        }\n    }\n}\n```\n\n* 使用\n\n```java\n@Data\n@Builder\n@ApiModel(value = \"User\", subTypes = {AddressParam.class})\npublic class UserParam implements Serializable {\n\n    private static final long serialVersionUID = 1L;\n\n    @NotEmpty(message = \"{user.msg.userId.notEmpty}\", groups = {EditValidationGroup.class})\n    private String userId;\n\n    @TelephoneNumber(message = \"invalid telephone number\") // 这里\n    private String telephone;\n\n}\n```\n","source":"_posts/后端如何进行参数校验.md","raw":"---\ntitle: 如何进行参数校验\n---\n\n# 如何进行参数校验\n\n[TOC]\n\n## 1. 不好的参数校验\n\n* 对于用户输入的数据来说，不只前端要校验数据，后端也要对数进行校验，比如入参是否可以为空、入参长度是否满足你的期望长度\n* 比如你的数据库长度设置的`varchar(16)`，对方直接来了个36的，那么数据库直接异常\n* 如果以if判断来进行参数校验，代码就会非常的难看\n\n```java\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n    @PostMapping(\"/add\")\n    public ResponseEntity<String> add(User user) {\n        if(user.getName()==null) {\n            return ResponseResult.fail(\"用户名不可为空！\");\n        } else if(user.getName().length()<5 || user.getName().length()>15){\n            return ResponseResult.fail(\"用户名长度在 5-15 之间\");\n        }\n        if(user.getAge()< 1 || user.getAge()> 150) {\n            return ResponseResult.fail(\"你敢是乌龟吗？\");\n        }\n        // 参数合法\n        return ResponseEntity.ok(\"success\");\n    }\n}\n```\n\n* 针对这个问题，Java开者在Java API规范 (JSR303) 定义了Bean校验的标准validation-api，但没有提供实现。 \n* hibernate validation是对这个规范的实现，并增加了校验注解如@Email、@Length等。 \n* Spring Validation是对hibernate validation的二次封装，用于支持spring mvc参数自动校验。\n\n## 2. 开始\n\n* 引入依赖\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-validation</artifactId>\n</dependency>\n```\n\n* 对bean的属性添加校验注解\n* 可以单独使用一个DTO\n* 每个注解指定`message`属性，为错误信息提示\n* 有哪些常用的校验?(在下面)\n\n```java\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n    private Long id;\n\n    @NotBlank\n    private String username;\n\n    @NotBlank\n    private String password;\n\n    private String sex;\n\n    @Email\n    private String email;\n\n    @Pattern(regexp = \"^[0-9]{11}$\", message = \"手机号格式不正确\")\n    private String phone;\n}\n```\n\n* 在Controller的方法入参上使用`@Valid`注解，参数校验的值放在BindingResult中\n\n```java\n@Slf4j\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n    @PostMapping\n    public ResponseResult addUser(@Valid User user, BindingResult bindingResult) {\n\n\t\tif (bindingResult.hasErrors()) { // 数据格式出现错误\n\t\t    Map<String, String> map = bindingResult.getFieldErrors().stream()\n\t\t            .collect(Collectors.toMap(FieldError::getField, FieldError::getDefaultMessage));\n\t\t    return new ResponseResult(ResponseStatus.FAIL.getCode(), \"数据格式校验失败\", map) ;\n        }\n\n        log.info(\"用户信息：{}\",user);\n\n        return ResponseResult.success(\"添加成功！\");\n    }\n}\n```\n\n## 3. 统一异常处理\n\n* 在数据校验失败时会发出`BindException`异常，可以使用spring的统一异常处理器进行处理\n\n```java\n@Slf4j\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n    @PostMapping\n    public ResponseResult addUser(@Valid User user) {\n        log.info(\"用户信息：{}\",user);\n        return ResponseResult.success(\"添加成功！\");\n    }\n}\n```\n\n```java\n@RestControllerAdvice\npublic class CustomExceptionHandler {\n\n    @ExceptionHandler(BindException.class)\n    public ResponseResult validationException(BindException e) {\n\n        Map<String, String> map = e.getBindingResult().getFieldErrors().stream()\n                .collect(Collectors.toMap(FieldError::getField, FieldError::getDefaultMessage));\n        return new ResponseResult(ResponseStatus.FAIL.getCode(), \"数据格式校验失败\", map) ;\n    }\n\n}\n```\n\n## 4. 分组校验\n\n* 我们一般在数据增删改查时，通常增加时使用数据库的主键自增，也就是增加时主键必须为null，删改查时主键必须不为null\n* 这里同一bean中出现了两种校验场景，可以使用分组校验\n* 【分组】即为接口，接口中只是作为一个标识，无需任何代码\n\n```java\n// 添加时的组\npublic interface AddValid {\n}\n// 修改时的组\npublic interface UpdateValid {\n}\n```\n\n* 设置分组后，校验注解可以指定组\n* 没有设置groups属性的注解，使得分组校验时不会校验\n\n```java\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n\n    @Null(groups = {AddValid.class})\n    @NotNull(groups = {UpdateValid.class})\n    private Long id;\n\n    @NotBlank(groups = {AddValid.class, UpdateValid.class})\n    private String username;\n\n    @NotBlank(groups = {AddValid.class})\n//    @NotBlank\n    private String password;\n\n    private String sex;\n\n    @Email(groups = {AddValid.class, UpdateValid.class})\n    private String email;\n\n    @Pattern(regexp = \"^[0-9]{11}$\", message = \"手机号格式不正确\", groups = {AddValid.class, UpdateValid.class})\n    private String phone;\n}\n```\n\n* 使用分组校验，形参使用`@Validated`注解，value属性指定组\n\n```java\n@Slf4j\n@RestController\n@RequestMapping(\"/user\")\npublic class UserController {\n\n\n    @PostMapping\n    public ResponseResult addUser(@Validated({AddValid.class}) User user) {\n\n        log.info(\"用户信息：{}\",user);\n\n        return ResponseResult.success(\"添加成功！\");\n    }\n\n    @PutMapping\n    public ResponseResult updateUser(@Validated(UpdateValid.class) User user) {\n\n        log.info(\"用户信息：{}\",user);\n\n        return ResponseResult.success(\"修改成功\");\n    }\n}\n```\n\n## 5. 常用的校验注解\n\n* JSR303规范\n\n```java\n@AssertFalse            被注释的元素只能为false\n@AssertTrue             被注释的元素只能为true\n@DecimalMax             被注释的元素必须小于或等于{value}\n@DecimalMin             被注释的元素必须大于或等于{value}\n@Digits                 被注释的元素数字的值超出了允许范围(只允许在{integer}位整数和{fraction}位小数范围内)\n@Email                  被注释的元素不是一个合法的电子邮件地址\n@Future                 被注释的元素需要是一个将来的时间\n@FutureOrPresent        被注释的元素需要是一个将来或现在的时间\n@Max                    被注释的元素最大不能超过{value}\n@Min                    被注释的元素最小不能小于{value}\n@Negative               被注释的元素必须是负数\n@NegativeOrZero         被注释的元素必须是负数或零\n@NotBlank               被注释的元素不能为空、空白字符串\n@NotEmpty               被注释的元素不能为空\n@NotNull                被注释的元素不能为null\n@Null                   被注释的元素必须为null\n@Past                   被注释的元素需要是一个过去的时间\n@PastOrPresent          被注释的元素需要是一个过去或现在的时间\n@Pattern                被注释的元素需要匹配正则表达式\"{regexp}\"\n@Positive               被注释的元素必须是正数\n@PositiveOrZero         被注释的元素必须是正数或零\n@Size                   被注释的元素个数必须在{min}和{max}之间\n```\n\n* hibernate validation是对这个规范的实现，并增加了一些其他校验注解，如@Email，@Length，@Range等等\n\n```java\n@CreditCardNumber       被注释的元素不合法的信用卡号码\n@Currency               被注释的元素不合法的货币 (必须是{value}其中之一)\n@EAN                    被注释的元素不合法的{type}条形码\n@Email                  被注释的元素不是一个合法的电子邮件地址  (已过期)\n@Length                 被注释的元素长度需要在{min}和{max}之间\n@CodePointLength        被注释的元素长度需要在{min}和{max}之间\n@LuhnCheck              被注释的元素${validatedValue}的校验码不合法, Luhn模10校验和不匹配\n@Mod10Check             被注释的元素${validatedValue}的校验码不合法, 模10校验和不匹配\n@Mod11Check             被注释的元素${validatedValue}的校验码不合法, 模11校验和不匹配\n@ModCheck               被注释的元素${validatedValue}的校验码不合法, ${modType}校验和不匹配  (已过期)\n@NotBlank               被注释的元素不能为空  (已过期)\n@NotEmpty               被注释的元素不能为空  (已过期)\n@ParametersScriptAssert 被注释的元素执行脚本表达式\"{script}\"没有返回期望结果\n@Range                  被注释的元素需要在{min}和{max}之间\n@SafeHtml               被注释的元素可能有不安全的HTML内容\n@ScriptAssert           被注释的元素执行脚本表达式\"{script}\"没有返回期望结果\n@URL                    被注释的元素需要是一个合法的URL\n@DurationMax            被注释的元素必须小于${inclusive == true ? '或等于' : ''}${days == 0 ? '' : days += '天'}${hours == 0 ? '' : hours += '小时'}${minutes == 0 ? '' : minutes += '分钟'}${seconds == 0 ? '' : seconds += '秒'}${millis == 0 ? '' : millis += '毫秒'}${nanos == 0 ? '' : nanos += '纳秒'}\n@DurationMin            被注释的元素必须大于${inclusive == true ? '或等于' : ''}${days == 0 ? '' : days += '天'}${hours == 0 ? '' : hours += '小时'}${minutes == 0 ? '' : minutes += '分钟'}${seconds == 0 ? '' : seconds += '秒'}${millis == 0 ? '' : millis += '毫秒'}${nanos == 0 ? '' : nanos += '纳秒'}\n```\n\n## 6. 自定义validation\n\n* 定义注解\n\n```java\n@Target({ METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE })\n@Retention(RUNTIME)\n@Documented\n@Constraint(validatedBy = {TelephoneNumberValidator.class}) // 指定校验器\npublic @interface TelephoneNumber {\n    String message() default \"Invalid telephone number\";\n    Class<?>[] groups() default { };\n    Class<? extends Payload>[] payload() default { };\n}\n```\n\n* 定义校验器\n\n```java\npublic class TelephoneNumberValidator implements ConstraintValidator<TelephoneNumber, String> {\n    private static final String REGEX_TEL = \"0\\\\d{2,3}[-]?\\\\d{7,8}|0\\\\d{2,3}\\\\s?\\\\d{7,8}|13[0-9]\\\\d{8}|15[1089]\\\\d{8}\";\n\n    @Override\n    public boolean isValid(String s, ConstraintValidatorContext constraintValidatorContext) {\n        try {\n            return Pattern.matches(REGEX_TEL, s);\n        } catch (Exception e) {\n            return false;\n        }\n    }\n}\n```\n\n* 使用\n\n```java\n@Data\n@Builder\n@ApiModel(value = \"User\", subTypes = {AddressParam.class})\npublic class UserParam implements Serializable {\n\n    private static final long serialVersionUID = 1L;\n\n    @NotEmpty(message = \"{user.msg.userId.notEmpty}\", groups = {EditValidationGroup.class})\n    private String userId;\n\n    @TelephoneNumber(message = \"invalid telephone number\") // 这里\n    private String telephone;\n\n}\n```\n","slug":"后端如何进行参数校验","published":1,"date":"2023-01-06T12:41:46.353Z","updated":"2023-01-07T08:07:49.479Z","_id":"clclo130y0003usw05bb846ma","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"如何进行参数校验\"><a href=\"#如何进行参数校验\" class=\"headerlink\" title=\"如何进行参数校验\"></a>如何进行参数校验</h1><p>[TOC]</p>\n<h2 id=\"1-不好的参数校验\"><a href=\"#1-不好的参数校验\" class=\"headerlink\" title=\"1. 不好的参数校验\"></a>1. 不好的参数校验</h2><ul>\n<li>对于用户输入的数据来说，不只前端要校验数据，后端也要对数进行校验，比如入参是否可以为空、入参长度是否满足你的期望长度</li>\n<li>比如你的数据库长度设置的<code>varchar(16)</code>，对方直接来了个36的，那么数据库直接异常</li>\n<li>如果以if判断来进行参数校验，代码就会非常的难看</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/add&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseEntity&lt;String&gt; <span class=\"title function_\">add</span><span class=\"params\">(User user)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(user.getName()==<span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ResponseResult.fail(<span class=\"string\">&quot;用户名不可为空！&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(user.getName().length()&lt;<span class=\"number\">5</span> || user.getName().length()&gt;<span class=\"number\">15</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ResponseResult.fail(<span class=\"string\">&quot;用户名长度在 5-15 之间&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(user.getAge()&lt; <span class=\"number\">1</span> || user.getAge()&gt; <span class=\"number\">150</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ResponseResult.fail(<span class=\"string\">&quot;你敢是乌龟吗？&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 参数合法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseEntity.ok(<span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>针对这个问题，Java开者在Java API规范 (JSR303) 定义了Bean校验的标准validation-api，但没有提供实现。 </li>\n<li>hibernate validation是对这个规范的实现，并增加了校验注解如@Email、@Length等。 </li>\n<li>Spring Validation是对hibernate validation的二次封装，用于支持spring mvc参数自动校验。</li>\n</ul>\n<h2 id=\"2-开始\"><a href=\"#2-开始\" class=\"headerlink\" title=\"2. 开始\"></a>2. 开始</h2><ul>\n<li>引入依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-validation<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>对bean的属性添加校验注解</li>\n<li>可以单独使用一个DTO</li>\n<li>每个注解指定<code>message</code>属性，为错误信息提示</li>\n<li>有哪些常用的校验?(在下面)</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Email</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Pattern(regexp = &quot;^[0-9]&#123;11&#125;$&quot;, message = &quot;手机号格式不正确&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phone;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在Controller的方法入参上使用<code>@Valid</code>注解，参数校验的值放在BindingResult中</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">addUser</span><span class=\"params\">(<span class=\"meta\">@Valid</span> User user, BindingResult bindingResult)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (bindingResult.hasErrors()) &#123; <span class=\"comment\">// 数据格式出现错误</span></span><br><span class=\"line\">\t\t    Map&lt;String, String&gt; map = bindingResult.getFieldErrors().stream()</span><br><span class=\"line\">\t\t            .collect(Collectors.toMap(FieldError::getField, FieldError::getDefaultMessage));</span><br><span class=\"line\">\t\t    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseStatus.FAIL.getCode(), <span class=\"string\">&quot;数据格式校验失败&quot;</span>, map) ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;用户信息：&#123;&#125;&quot;</span>,user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseResult.success(<span class=\"string\">&quot;添加成功！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-统一异常处理\"><a href=\"#3-统一异常处理\" class=\"headerlink\" title=\"3. 统一异常处理\"></a>3. 统一异常处理</h2><ul>\n<li>在数据校验失败时会发出<code>BindException</code>异常，可以使用spring的统一异常处理器进行处理</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">addUser</span><span class=\"params\">(<span class=\"meta\">@Valid</span> User user)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;用户信息：&#123;&#125;&quot;</span>,user);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseResult.success(<span class=\"string\">&quot;添加成功！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestControllerAdvice</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomExceptionHandler</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler(BindException.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">validationException</span><span class=\"params\">(BindException e)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, String&gt; map = e.getBindingResult().getFieldErrors().stream()</span><br><span class=\"line\">                .collect(Collectors.toMap(FieldError::getField, FieldError::getDefaultMessage));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseStatus.FAIL.getCode(), <span class=\"string\">&quot;数据格式校验失败&quot;</span>, map) ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-分组校验\"><a href=\"#4-分组校验\" class=\"headerlink\" title=\"4. 分组校验\"></a>4. 分组校验</h2><ul>\n<li>我们一般在数据增删改查时，通常增加时使用数据库的主键自增，也就是增加时主键必须为null，删改查时主键必须不为null</li>\n<li>这里同一bean中出现了两种校验场景，可以使用分组校验</li>\n<li>【分组】即为接口，接口中只是作为一个标识，无需任何代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加时的组</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">AddValid</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 修改时的组</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UpdateValid</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置分组后，校验注解可以指定组</li>\n<li>没有设置groups属性的注解，使得分组校验时不会校验</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Null(groups = &#123;AddValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull(groups = &#123;UpdateValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(groups = &#123;AddValid.class, UpdateValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(groups = &#123;AddValid.class&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">//    @NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Email(groups = &#123;AddValid.class, UpdateValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Pattern(regexp = &quot;^[0-9]&#123;11&#125;$&quot;, message = &quot;手机号格式不正确&quot;, groups = &#123;AddValid.class, UpdateValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phone;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用分组校验，形参使用<code>@Validated</code>注解，value属性指定组</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">addUser</span><span class=\"params\">(<span class=\"meta\">@Validated(&#123;AddValid.class&#125;)</span> User user)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;用户信息：&#123;&#125;&quot;</span>,user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseResult.success(<span class=\"string\">&quot;添加成功！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PutMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">updateUser</span><span class=\"params\">(<span class=\"meta\">@Validated(UpdateValid.class)</span> User user)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;用户信息：&#123;&#125;&quot;</span>,user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseResult.success(<span class=\"string\">&quot;修改成功&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-常用的校验注解\"><a href=\"#5-常用的校验注解\" class=\"headerlink\" title=\"5. 常用的校验注解\"></a>5. 常用的校验注解</h2><ul>\n<li>JSR303规范</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@AssertFalse</span>            被注释的元素只能为<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\">@AssertTrue</span>             被注释的元素只能为<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\">@DecimalMax</span>             被注释的元素必须小于或等于&#123;value&#125;</span><br><span class=\"line\"><span class=\"meta\">@DecimalMin</span>             被注释的元素必须大于或等于&#123;value&#125;</span><br><span class=\"line\"><span class=\"meta\">@Digits</span>                 被注释的元素数字的值超出了允许范围(只允许在&#123;integer&#125;位整数和&#123;fraction&#125;位小数范围内)</span><br><span class=\"line\"><span class=\"meta\">@Email</span>                  被注释的元素不是一个合法的电子邮件地址</span><br><span class=\"line\"><span class=\"meta\">@Future</span>                 被注释的元素需要是一个将来的时间</span><br><span class=\"line\"><span class=\"meta\">@FutureOrPresent</span>        被注释的元素需要是一个将来或现在的时间</span><br><span class=\"line\"><span class=\"meta\">@Max</span>                    被注释的元素最大不能超过&#123;value&#125;</span><br><span class=\"line\"><span class=\"meta\">@Min</span>                    被注释的元素最小不能小于&#123;value&#125;</span><br><span class=\"line\"><span class=\"meta\">@Negative</span>               被注释的元素必须是负数</span><br><span class=\"line\"><span class=\"meta\">@NegativeOrZero</span>         被注释的元素必须是负数或零</span><br><span class=\"line\"><span class=\"meta\">@NotBlank</span>               被注释的元素不能为空、空白字符串</span><br><span class=\"line\"><span class=\"meta\">@NotEmpty</span>               被注释的元素不能为空</span><br><span class=\"line\"><span class=\"meta\">@NotNull</span>                被注释的元素不能为<span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"meta\">@Null</span>                   被注释的元素必须为<span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"meta\">@Past</span>                   被注释的元素需要是一个过去的时间</span><br><span class=\"line\"><span class=\"meta\">@PastOrPresent</span>          被注释的元素需要是一个过去或现在的时间</span><br><span class=\"line\"><span class=\"meta\">@Pattern</span>                被注释的元素需要匹配正则表达式<span class=\"string\">&quot;&#123;regexp&#125;&quot;</span></span><br><span class=\"line\"><span class=\"meta\">@Positive</span>               被注释的元素必须是正数</span><br><span class=\"line\"><span class=\"meta\">@PositiveOrZero</span>         被注释的元素必须是正数或零</span><br><span class=\"line\"><span class=\"meta\">@Size</span>                   被注释的元素个数必须在&#123;min&#125;和&#123;max&#125;之间</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>hibernate validation是对这个规范的实现，并增加了一些其他校验注解，如@Email，@Length，@Range等等</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CreditCardNumber</span>       被注释的元素不合法的信用卡号码</span><br><span class=\"line\"><span class=\"meta\">@Currency</span>               被注释的元素不合法的货币 (必须是&#123;value&#125;其中之一)</span><br><span class=\"line\"><span class=\"meta\">@EAN</span>                    被注释的元素不合法的&#123;type&#125;条形码</span><br><span class=\"line\"><span class=\"meta\">@Email</span>                  被注释的元素不是一个合法的电子邮件地址  (已过期)</span><br><span class=\"line\"><span class=\"meta\">@Length</span>                 被注释的元素长度需要在&#123;min&#125;和&#123;max&#125;之间</span><br><span class=\"line\"><span class=\"meta\">@CodePointLength</span>        被注释的元素长度需要在&#123;min&#125;和&#123;max&#125;之间</span><br><span class=\"line\"><span class=\"meta\">@LuhnCheck</span>              被注释的元素$&#123;validatedValue&#125;的校验码不合法, Luhn模<span class=\"number\">10</span>校验和不匹配</span><br><span class=\"line\"><span class=\"meta\">@Mod10Check</span>             被注释的元素$&#123;validatedValue&#125;的校验码不合法, 模<span class=\"number\">10</span>校验和不匹配</span><br><span class=\"line\"><span class=\"meta\">@Mod11Check</span>             被注释的元素$&#123;validatedValue&#125;的校验码不合法, 模<span class=\"number\">11</span>校验和不匹配</span><br><span class=\"line\"><span class=\"meta\">@ModCheck</span>               被注释的元素$&#123;validatedValue&#125;的校验码不合法, $&#123;modType&#125;校验和不匹配  (已过期)</span><br><span class=\"line\"><span class=\"meta\">@NotBlank</span>               被注释的元素不能为空  (已过期)</span><br><span class=\"line\"><span class=\"meta\">@NotEmpty</span>               被注释的元素不能为空  (已过期)</span><br><span class=\"line\"><span class=\"meta\">@ParametersScriptAssert</span> 被注释的元素执行脚本表达式<span class=\"string\">&quot;&#123;script&#125;&quot;</span>没有返回期望结果</span><br><span class=\"line\"><span class=\"meta\">@Range</span>                  被注释的元素需要在&#123;min&#125;和&#123;max&#125;之间</span><br><span class=\"line\"><span class=\"meta\">@SafeHtml</span>               被注释的元素可能有不安全的HTML内容</span><br><span class=\"line\"><span class=\"meta\">@ScriptAssert</span>           被注释的元素执行脚本表达式<span class=\"string\">&quot;&#123;script&#125;&quot;</span>没有返回期望结果</span><br><span class=\"line\"><span class=\"meta\">@URL</span>                    被注释的元素需要是一个合法的URL</span><br><span class=\"line\"><span class=\"meta\">@DurationMax</span>            被注释的元素必须小于$&#123;inclusive == <span class=\"literal\">true</span> ? <span class=\"string\">&#x27;或等于&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>&#125;$&#123;days == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : days += <span class=\"string\">&#x27;天&#x27;</span>&#125;$&#123;hours == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : hours += <span class=\"string\">&#x27;小时&#x27;</span>&#125;$&#123;minutes == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : minutes += <span class=\"string\">&#x27;分钟&#x27;</span>&#125;$&#123;seconds == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : seconds += <span class=\"string\">&#x27;秒&#x27;</span>&#125;$&#123;millis == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : millis += <span class=\"string\">&#x27;毫秒&#x27;</span>&#125;$&#123;nanos == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : nanos += <span class=\"string\">&#x27;纳秒&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">@DurationMin</span>            被注释的元素必须大于$&#123;inclusive == <span class=\"literal\">true</span> ? <span class=\"string\">&#x27;或等于&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>&#125;$&#123;days == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : days += <span class=\"string\">&#x27;天&#x27;</span>&#125;$&#123;hours == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : hours += <span class=\"string\">&#x27;小时&#x27;</span>&#125;$&#123;minutes == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : minutes += <span class=\"string\">&#x27;分钟&#x27;</span>&#125;$&#123;seconds == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : seconds += <span class=\"string\">&#x27;秒&#x27;</span>&#125;$&#123;millis == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : millis += <span class=\"string\">&#x27;毫秒&#x27;</span>&#125;$&#123;nanos == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : nanos += <span class=\"string\">&#x27;纳秒&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-自定义validation\"><a href=\"#6-自定义validation\" class=\"headerlink\" title=\"6. 自定义validation\"></a>6. 自定义validation</h2><ul>\n<li>定义注解</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(&#123; METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE &#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Constraint(validatedBy = &#123;TelephoneNumberValidator.class&#125;)</span> <span class=\"comment\">// 指定校验器</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> TelephoneNumber &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">message</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;Invalid telephone number&quot;</span>;</span><br><span class=\"line\">    Class&lt;?&gt;[] groups() <span class=\"keyword\">default</span> &#123; &#125;;</span><br><span class=\"line\">    Class&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">Payload</span>&gt;[] payload() <span class=\"keyword\">default</span> &#123; &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>定义校验器</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TelephoneNumberValidator</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ConstraintValidator</span>&lt;TelephoneNumber, String&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">REGEX_TEL</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;0\\\\d&#123;2,3&#125;[-]?\\\\d&#123;7,8&#125;|0\\\\d&#123;2,3&#125;\\\\s?\\\\d&#123;7,8&#125;|13[0-9]\\\\d&#123;8&#125;|15[1089]\\\\d&#123;8&#125;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isValid</span><span class=\"params\">(String s, ConstraintValidatorContext constraintValidatorContext)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Pattern.matches(REGEX_TEL, s);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@Builder</span></span><br><span class=\"line\"><span class=\"meta\">@ApiModel(value = &quot;User&quot;, subTypes = &#123;AddressParam.class&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserParam</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty(message = &quot;&#123;user.msg.userId.notEmpty&#125;&quot;, groups = &#123;EditValidationGroup.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TelephoneNumber(message = &quot;invalid telephone number&quot;)</span> <span class=\"comment\">// 这里</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String telephone;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何进行参数校验\"><a href=\"#如何进行参数校验\" class=\"headerlink\" title=\"如何进行参数校验\"></a>如何进行参数校验</h1><p>[TOC]</p>\n<h2 id=\"1-不好的参数校验\"><a href=\"#1-不好的参数校验\" class=\"headerlink\" title=\"1. 不好的参数校验\"></a>1. 不好的参数校验</h2><ul>\n<li>对于用户输入的数据来说，不只前端要校验数据，后端也要对数进行校验，比如入参是否可以为空、入参长度是否满足你的期望长度</li>\n<li>比如你的数据库长度设置的<code>varchar(16)</code>，对方直接来了个36的，那么数据库直接异常</li>\n<li>如果以if判断来进行参数校验，代码就会非常的难看</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/add&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseEntity&lt;String&gt; <span class=\"title function_\">add</span><span class=\"params\">(User user)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(user.getName()==<span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ResponseResult.fail(<span class=\"string\">&quot;用户名不可为空！&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(user.getName().length()&lt;<span class=\"number\">5</span> || user.getName().length()&gt;<span class=\"number\">15</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ResponseResult.fail(<span class=\"string\">&quot;用户名长度在 5-15 之间&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(user.getAge()&lt; <span class=\"number\">1</span> || user.getAge()&gt; <span class=\"number\">150</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ResponseResult.fail(<span class=\"string\">&quot;你敢是乌龟吗？&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 参数合法</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseEntity.ok(<span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>针对这个问题，Java开者在Java API规范 (JSR303) 定义了Bean校验的标准validation-api，但没有提供实现。 </li>\n<li>hibernate validation是对这个规范的实现，并增加了校验注解如@Email、@Length等。 </li>\n<li>Spring Validation是对hibernate validation的二次封装，用于支持spring mvc参数自动校验。</li>\n</ul>\n<h2 id=\"2-开始\"><a href=\"#2-开始\" class=\"headerlink\" title=\"2. 开始\"></a>2. 开始</h2><ul>\n<li>引入依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-validation<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>对bean的属性添加校验注解</li>\n<li>可以单独使用一个DTO</li>\n<li>每个注解指定<code>message</code>属性，为错误信息提示</li>\n<li>有哪些常用的校验?(在下面)</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Email</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Pattern(regexp = &quot;^[0-9]&#123;11&#125;$&quot;, message = &quot;手机号格式不正确&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phone;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>在Controller的方法入参上使用<code>@Valid</code>注解，参数校验的值放在BindingResult中</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">addUser</span><span class=\"params\">(<span class=\"meta\">@Valid</span> User user, BindingResult bindingResult)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (bindingResult.hasErrors()) &#123; <span class=\"comment\">// 数据格式出现错误</span></span><br><span class=\"line\">\t\t    Map&lt;String, String&gt; map = bindingResult.getFieldErrors().stream()</span><br><span class=\"line\">\t\t            .collect(Collectors.toMap(FieldError::getField, FieldError::getDefaultMessage));</span><br><span class=\"line\">\t\t    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseStatus.FAIL.getCode(), <span class=\"string\">&quot;数据格式校验失败&quot;</span>, map) ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;用户信息：&#123;&#125;&quot;</span>,user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseResult.success(<span class=\"string\">&quot;添加成功！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-统一异常处理\"><a href=\"#3-统一异常处理\" class=\"headerlink\" title=\"3. 统一异常处理\"></a>3. 统一异常处理</h2><ul>\n<li>在数据校验失败时会发出<code>BindException</code>异常，可以使用spring的统一异常处理器进行处理</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">addUser</span><span class=\"params\">(<span class=\"meta\">@Valid</span> User user)</span> &#123;</span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;用户信息：&#123;&#125;&quot;</span>,user);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseResult.success(<span class=\"string\">&quot;添加成功！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestControllerAdvice</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CustomExceptionHandler</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler(BindException.class)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">validationException</span><span class=\"params\">(BindException e)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, String&gt; map = e.getBindingResult().getFieldErrors().stream()</span><br><span class=\"line\">                .collect(Collectors.toMap(FieldError::getField, FieldError::getDefaultMessage));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ResponseResult</span>(ResponseStatus.FAIL.getCode(), <span class=\"string\">&quot;数据格式校验失败&quot;</span>, map) ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-分组校验\"><a href=\"#4-分组校验\" class=\"headerlink\" title=\"4. 分组校验\"></a>4. 分组校验</h2><ul>\n<li>我们一般在数据增删改查时，通常增加时使用数据库的主键自增，也就是增加时主键必须为null，删改查时主键必须不为null</li>\n<li>这里同一bean中出现了两种校验场景，可以使用分组校验</li>\n<li>【分组】即为接口，接口中只是作为一个标识，无需任何代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加时的组</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">AddValid</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 修改时的组</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UpdateValid</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置分组后，校验注解可以指定组</li>\n<li>没有设置groups属性的注解，使得分组校验时不会校验</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Null(groups = &#123;AddValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NotNull(groups = &#123;UpdateValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(groups = &#123;AddValid.class, UpdateValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotBlank(groups = &#123;AddValid.class&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">//    @NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String sex;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Email(groups = &#123;AddValid.class, UpdateValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Pattern(regexp = &quot;^[0-9]&#123;11&#125;$&quot;, message = &quot;手机号格式不正确&quot;, groups = &#123;AddValid.class, UpdateValid.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phone;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用分组校验，形参使用<code>@Validated</code>注解，value属性指定组</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/user&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">addUser</span><span class=\"params\">(<span class=\"meta\">@Validated(&#123;AddValid.class&#125;)</span> User user)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;用户信息：&#123;&#125;&quot;</span>,user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseResult.success(<span class=\"string\">&quot;添加成功！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PutMapping</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseResult <span class=\"title function_\">updateUser</span><span class=\"params\">(<span class=\"meta\">@Validated(UpdateValid.class)</span> User user)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;用户信息：&#123;&#125;&quot;</span>,user);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseResult.success(<span class=\"string\">&quot;修改成功&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-常用的校验注解\"><a href=\"#5-常用的校验注解\" class=\"headerlink\" title=\"5. 常用的校验注解\"></a>5. 常用的校验注解</h2><ul>\n<li>JSR303规范</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@AssertFalse</span>            被注释的元素只能为<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\">@AssertTrue</span>             被注释的元素只能为<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\">@DecimalMax</span>             被注释的元素必须小于或等于&#123;value&#125;</span><br><span class=\"line\"><span class=\"meta\">@DecimalMin</span>             被注释的元素必须大于或等于&#123;value&#125;</span><br><span class=\"line\"><span class=\"meta\">@Digits</span>                 被注释的元素数字的值超出了允许范围(只允许在&#123;integer&#125;位整数和&#123;fraction&#125;位小数范围内)</span><br><span class=\"line\"><span class=\"meta\">@Email</span>                  被注释的元素不是一个合法的电子邮件地址</span><br><span class=\"line\"><span class=\"meta\">@Future</span>                 被注释的元素需要是一个将来的时间</span><br><span class=\"line\"><span class=\"meta\">@FutureOrPresent</span>        被注释的元素需要是一个将来或现在的时间</span><br><span class=\"line\"><span class=\"meta\">@Max</span>                    被注释的元素最大不能超过&#123;value&#125;</span><br><span class=\"line\"><span class=\"meta\">@Min</span>                    被注释的元素最小不能小于&#123;value&#125;</span><br><span class=\"line\"><span class=\"meta\">@Negative</span>               被注释的元素必须是负数</span><br><span class=\"line\"><span class=\"meta\">@NegativeOrZero</span>         被注释的元素必须是负数或零</span><br><span class=\"line\"><span class=\"meta\">@NotBlank</span>               被注释的元素不能为空、空白字符串</span><br><span class=\"line\"><span class=\"meta\">@NotEmpty</span>               被注释的元素不能为空</span><br><span class=\"line\"><span class=\"meta\">@NotNull</span>                被注释的元素不能为<span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"meta\">@Null</span>                   被注释的元素必须为<span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"meta\">@Past</span>                   被注释的元素需要是一个过去的时间</span><br><span class=\"line\"><span class=\"meta\">@PastOrPresent</span>          被注释的元素需要是一个过去或现在的时间</span><br><span class=\"line\"><span class=\"meta\">@Pattern</span>                被注释的元素需要匹配正则表达式<span class=\"string\">&quot;&#123;regexp&#125;&quot;</span></span><br><span class=\"line\"><span class=\"meta\">@Positive</span>               被注释的元素必须是正数</span><br><span class=\"line\"><span class=\"meta\">@PositiveOrZero</span>         被注释的元素必须是正数或零</span><br><span class=\"line\"><span class=\"meta\">@Size</span>                   被注释的元素个数必须在&#123;min&#125;和&#123;max&#125;之间</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>hibernate validation是对这个规范的实现，并增加了一些其他校验注解，如@Email，@Length，@Range等等</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CreditCardNumber</span>       被注释的元素不合法的信用卡号码</span><br><span class=\"line\"><span class=\"meta\">@Currency</span>               被注释的元素不合法的货币 (必须是&#123;value&#125;其中之一)</span><br><span class=\"line\"><span class=\"meta\">@EAN</span>                    被注释的元素不合法的&#123;type&#125;条形码</span><br><span class=\"line\"><span class=\"meta\">@Email</span>                  被注释的元素不是一个合法的电子邮件地址  (已过期)</span><br><span class=\"line\"><span class=\"meta\">@Length</span>                 被注释的元素长度需要在&#123;min&#125;和&#123;max&#125;之间</span><br><span class=\"line\"><span class=\"meta\">@CodePointLength</span>        被注释的元素长度需要在&#123;min&#125;和&#123;max&#125;之间</span><br><span class=\"line\"><span class=\"meta\">@LuhnCheck</span>              被注释的元素$&#123;validatedValue&#125;的校验码不合法, Luhn模<span class=\"number\">10</span>校验和不匹配</span><br><span class=\"line\"><span class=\"meta\">@Mod10Check</span>             被注释的元素$&#123;validatedValue&#125;的校验码不合法, 模<span class=\"number\">10</span>校验和不匹配</span><br><span class=\"line\"><span class=\"meta\">@Mod11Check</span>             被注释的元素$&#123;validatedValue&#125;的校验码不合法, 模<span class=\"number\">11</span>校验和不匹配</span><br><span class=\"line\"><span class=\"meta\">@ModCheck</span>               被注释的元素$&#123;validatedValue&#125;的校验码不合法, $&#123;modType&#125;校验和不匹配  (已过期)</span><br><span class=\"line\"><span class=\"meta\">@NotBlank</span>               被注释的元素不能为空  (已过期)</span><br><span class=\"line\"><span class=\"meta\">@NotEmpty</span>               被注释的元素不能为空  (已过期)</span><br><span class=\"line\"><span class=\"meta\">@ParametersScriptAssert</span> 被注释的元素执行脚本表达式<span class=\"string\">&quot;&#123;script&#125;&quot;</span>没有返回期望结果</span><br><span class=\"line\"><span class=\"meta\">@Range</span>                  被注释的元素需要在&#123;min&#125;和&#123;max&#125;之间</span><br><span class=\"line\"><span class=\"meta\">@SafeHtml</span>               被注释的元素可能有不安全的HTML内容</span><br><span class=\"line\"><span class=\"meta\">@ScriptAssert</span>           被注释的元素执行脚本表达式<span class=\"string\">&quot;&#123;script&#125;&quot;</span>没有返回期望结果</span><br><span class=\"line\"><span class=\"meta\">@URL</span>                    被注释的元素需要是一个合法的URL</span><br><span class=\"line\"><span class=\"meta\">@DurationMax</span>            被注释的元素必须小于$&#123;inclusive == <span class=\"literal\">true</span> ? <span class=\"string\">&#x27;或等于&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>&#125;$&#123;days == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : days += <span class=\"string\">&#x27;天&#x27;</span>&#125;$&#123;hours == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : hours += <span class=\"string\">&#x27;小时&#x27;</span>&#125;$&#123;minutes == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : minutes += <span class=\"string\">&#x27;分钟&#x27;</span>&#125;$&#123;seconds == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : seconds += <span class=\"string\">&#x27;秒&#x27;</span>&#125;$&#123;millis == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : millis += <span class=\"string\">&#x27;毫秒&#x27;</span>&#125;$&#123;nanos == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : nanos += <span class=\"string\">&#x27;纳秒&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"meta\">@DurationMin</span>            被注释的元素必须大于$&#123;inclusive == <span class=\"literal\">true</span> ? <span class=\"string\">&#x27;或等于&#x27;</span> : <span class=\"string\">&#x27;&#x27;</span>&#125;$&#123;days == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : days += <span class=\"string\">&#x27;天&#x27;</span>&#125;$&#123;hours == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : hours += <span class=\"string\">&#x27;小时&#x27;</span>&#125;$&#123;minutes == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : minutes += <span class=\"string\">&#x27;分钟&#x27;</span>&#125;$&#123;seconds == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : seconds += <span class=\"string\">&#x27;秒&#x27;</span>&#125;$&#123;millis == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : millis += <span class=\"string\">&#x27;毫秒&#x27;</span>&#125;$&#123;nanos == <span class=\"number\">0</span> ? <span class=\"string\">&#x27;&#x27;</span> : nanos += <span class=\"string\">&#x27;纳秒&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-自定义validation\"><a href=\"#6-自定义validation\" class=\"headerlink\" title=\"6. 自定义validation\"></a>6. 自定义validation</h2><ul>\n<li>定义注解</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(&#123; METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE &#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"meta\">@Constraint(validatedBy = &#123;TelephoneNumberValidator.class&#125;)</span> <span class=\"comment\">// 指定校验器</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> TelephoneNumber &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">message</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;Invalid telephone number&quot;</span>;</span><br><span class=\"line\">    Class&lt;?&gt;[] groups() <span class=\"keyword\">default</span> &#123; &#125;;</span><br><span class=\"line\">    Class&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">Payload</span>&gt;[] payload() <span class=\"keyword\">default</span> &#123; &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>定义校验器</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TelephoneNumberValidator</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ConstraintValidator</span>&lt;TelephoneNumber, String&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">REGEX_TEL</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;0\\\\d&#123;2,3&#125;[-]?\\\\d&#123;7,8&#125;|0\\\\d&#123;2,3&#125;\\\\s?\\\\d&#123;7,8&#125;|13[0-9]\\\\d&#123;8&#125;|15[1089]\\\\d&#123;8&#125;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isValid</span><span class=\"params\">(String s, ConstraintValidatorContext constraintValidatorContext)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Pattern.matches(REGEX_TEL, s);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@Builder</span></span><br><span class=\"line\"><span class=\"meta\">@ApiModel(value = &quot;User&quot;, subTypes = &#123;AddressParam.class&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserParam</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty(message = &quot;&#123;user.msg.userId.notEmpty&#125;&quot;, groups = &#123;EditValidationGroup.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String userId;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@TelephoneNumber(message = &quot;invalid telephone number&quot;)</span> <span class=\"comment\">// 这里</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String telephone;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}